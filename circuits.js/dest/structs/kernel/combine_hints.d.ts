import { type FieldsOf } from '@aztec/foundation/array';
import { BufferReader, type Tuple } from '@aztec/foundation/serialize';
import { inspect } from 'util';
import { MAX_NOTE_HASHES_PER_TX, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX, MAX_UNENCRYPTED_LOGS_PER_TX } from '../../constants.gen.js';
import { LogHash } from '../log_hash.js';
import { NoteHash } from '../note_hash.js';
import { PublicDataUpdateRequest } from '../public_data_update_request.js';
import { type PublicAccumulatedData } from './public_accumulated_data.js';
export declare class CombineHints {
    readonly sortedNoteHashes: Tuple<NoteHash, typeof MAX_NOTE_HASHES_PER_TX>;
    readonly sortedNoteHashesIndexes: Tuple<number, typeof MAX_NOTE_HASHES_PER_TX>;
    readonly sortedUnencryptedLogsHashes: Tuple<LogHash, typeof MAX_UNENCRYPTED_LOGS_PER_TX>;
    readonly sortedUnencryptedLogsHashesIndexes: Tuple<number, typeof MAX_UNENCRYPTED_LOGS_PER_TX>;
    readonly sortedPublicDataUpdateRequests: Tuple<PublicDataUpdateRequest, typeof MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX>;
    readonly sortedPublicDataUpdateRequestsIndexes: Tuple<number, typeof MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX>;
    readonly dedupedPublicDataUpdateRequests: Tuple<PublicDataUpdateRequest, typeof MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX>;
    readonly dedupedPublicDataUpdateRequestsRuns: Tuple<number, typeof MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX>;
    constructor(sortedNoteHashes: Tuple<NoteHash, typeof MAX_NOTE_HASHES_PER_TX>, sortedNoteHashesIndexes: Tuple<number, typeof MAX_NOTE_HASHES_PER_TX>, sortedUnencryptedLogsHashes: Tuple<LogHash, typeof MAX_UNENCRYPTED_LOGS_PER_TX>, sortedUnencryptedLogsHashesIndexes: Tuple<number, typeof MAX_UNENCRYPTED_LOGS_PER_TX>, sortedPublicDataUpdateRequests: Tuple<PublicDataUpdateRequest, typeof MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX>, sortedPublicDataUpdateRequestsIndexes: Tuple<number, typeof MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX>, dedupedPublicDataUpdateRequests: Tuple<PublicDataUpdateRequest, typeof MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX>, dedupedPublicDataUpdateRequestsRuns: Tuple<number, typeof MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX>);
    static getFields(fields: FieldsOf<CombineHints>): readonly [[NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash, NoteHash], [number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number], [LogHash, LogHash, LogHash, LogHash, LogHash, LogHash, LogHash, LogHash], [number, number, number, number, number, number, number, number], [PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest], [number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number], [PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest, PublicDataUpdateRequest], [number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]];
    static from(fields: FieldsOf<CombineHints>): CombineHints;
    toBuffer(): Buffer;
    static fromBuffer(buffer: Buffer | BufferReader): CombineHints;
    static fromPublicData({ revertibleData, nonRevertibleData, }: {
        revertibleData: PublicAccumulatedData;
        nonRevertibleData: PublicAccumulatedData;
    }): CombineHints;
    [inspect.custom](): string;
}
//# sourceMappingURL=combine_hints.d.ts.map