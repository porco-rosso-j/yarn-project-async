/* Autogenerated file, do not edit! */
/* eslint-disable */
import { Contract, ContractBase, DeployMethod, Fr, NoteSelector, loadContractArtifact, } from '@aztec/aztec.js';
import EscrowContractArtifactJson from '../artifacts/escrow_contract-Escrow.json' assert { type: 'json' };
export const EscrowContractArtifact = loadContractArtifact(EscrowContractArtifactJson);
/**
 * Type-safe interface for contract Escrow;
 */
export class EscrowContract extends ContractBase {
    constructor(instance, wallet) {
        super(instance, EscrowContractArtifact, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return Contract.at(address, EscrowContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(wallet, owner) {
        return new DeployMethod(Fr.ZERO, wallet, EscrowContractArtifact, EscrowContract.at, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public keys hash to derive the address.
     */
    static deployWithPublicKeysHash(publicKeysHash, wallet, owner) {
        return new DeployMethod(publicKeysHash, wallet, EscrowContractArtifact, EscrowContract.at, Array.from(arguments).slice(2));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified constructor method.
     */
    static deployWithOpts(opts, ...args) {
        return new DeployMethod(opts.publicKeysHash ?? Fr.ZERO, opts.wallet, EscrowContractArtifact, EscrowContract.at, Array.from(arguments).slice(1), opts.method ?? 'constructor');
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return EscrowContractArtifact;
    }
    static get storage() {
        return {
            admin: {
                slot: new Fr(1n),
            },
            minters: {
                slot: new Fr(2n),
            },
            balances: {
                slot: new Fr(3n),
            },
            total_supply: {
                slot: new Fr(4n),
            },
            pending_shields: {
                slot: new Fr(5n),
            },
            public_balances: {
                slot: new Fr(6n),
            },
            symbol: {
                slot: new Fr(7n),
            },
            name: {
                slot: new Fr(8n),
            },
            decimals: {
                slot: new Fr(9n),
            },
        };
    }
    static get notes() {
        return {
            AddressNote: {
                id: new NoteSelector(1747431984),
            },
            TransparentNote: {
                id: new NoteSelector(1049878767),
            },
            TokenNote: {
                id: new NoteSelector(3992089675),
            },
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRXNjcm93LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL0VzY3Jvdy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxzQ0FBc0M7QUFFdEMsb0JBQW9CO0FBQ3BCLE9BQU8sRUFJTCxRQUFRLEVBRVIsWUFBWSxFQU1aLFlBQVksRUFLWixFQUFFLEVBSUYsWUFBWSxFQUtaLG9CQUFvQixHQUNyQixNQUFNLGlCQUFpQixDQUFDO0FBRXpCLE9BQU8sMEJBQTBCLE1BQU0sMENBQTBDLENBQUMsU0FBUyxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFFMUcsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsb0JBQW9CLENBQUMsMEJBQWtELENBQUMsQ0FBQztBQUUvRzs7R0FFRztBQUNILE1BQU0sT0FBTyxjQUFlLFNBQVEsWUFBWTtJQUM5QyxZQUFvQixRQUFxQyxFQUFFLE1BQWM7UUFDdkUsS0FBSyxDQUFDLFFBQVEsRUFBRSxzQkFBc0IsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSSxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxPQUFxQixFQUFFLE1BQWM7UUFDMUQsT0FBTyxRQUFRLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxjQUFjLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBNEIsQ0FBQztJQUMxRixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQWMsRUFBRSxLQUF1QjtRQUMxRCxPQUFPLElBQUksWUFBWSxDQUNyQixFQUFFLENBQUMsSUFBSSxFQUNQLE1BQU0sRUFDTixzQkFBc0IsRUFDdEIsY0FBYyxDQUFDLEVBQUUsRUFDakIsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQy9CLENBQUM7SUFDSixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsd0JBQXdCLENBQUMsY0FBa0IsRUFBRSxNQUFjLEVBQUUsS0FBdUI7UUFDaEcsT0FBTyxJQUFJLFlBQVksQ0FDckIsY0FBYyxFQUNkLE1BQU0sRUFDTixzQkFBc0IsRUFDdEIsY0FBYyxDQUFDLEVBQUUsRUFDakIsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQy9CLENBQUM7SUFDSixDQUFDO0lBRUQ7O09BRUc7SUFDSSxNQUFNLENBQUMsY0FBYyxDQUMxQixJQUF5RCxFQUN6RCxHQUFHLElBQThDO1FBRWpELE9BQU8sSUFBSSxZQUFZLENBQ3JCLElBQUksQ0FBQyxjQUFjLElBQUksRUFBRSxDQUFDLElBQUksRUFDOUIsSUFBSSxDQUFDLE1BQU0sRUFDWCxzQkFBc0IsRUFDdEIsY0FBYyxDQUFDLEVBQUUsRUFDakIsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQzlCLElBQUksQ0FBQyxNQUFNLElBQUksYUFBYSxDQUM3QixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxLQUFLLFFBQVE7UUFDeEIsT0FBTyxzQkFBc0IsQ0FBQztJQUNoQyxDQUFDO0lBRU0sTUFBTSxLQUFLLE9BQU87UUFXdkIsT0FBTztZQUNMLEtBQUssRUFBRTtnQkFDTCxJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2pCO1lBQ0QsT0FBTyxFQUFFO2dCQUNQLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDakI7WUFDRCxRQUFRLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQzthQUNqQjtZQUNELFlBQVksRUFBRTtnQkFDWixJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2pCO1lBQ0QsZUFBZSxFQUFFO2dCQUNmLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDakI7WUFDRCxlQUFlLEVBQUU7Z0JBQ2YsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQzthQUNqQjtZQUNELE1BQU0sRUFBRTtnQkFDTixJQUFJLEVBQUUsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO2FBQ2pCO1lBQ0QsSUFBSSxFQUFFO2dCQUNKLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7YUFDakI7WUFDRCxRQUFRLEVBQUU7Z0JBQ1IsSUFBSSxFQUFFLElBQUksRUFBRSxDQUFDLEVBQUUsQ0FBQzthQUNqQjtTQVdGLENBQUM7SUFDSixDQUFDO0lBRU0sTUFBTSxLQUFLLEtBQUs7UUFDckIsT0FBTztZQUNMLFdBQVcsRUFBRTtnQkFDWCxFQUFFLEVBQUUsSUFBSSxZQUFZLENBQUMsVUFBVSxDQUFDO2FBQ2pDO1lBQ0QsZUFBZSxFQUFFO2dCQUNmLEVBQUUsRUFBRSxJQUFJLFlBQVksQ0FBQyxVQUFVLENBQUM7YUFDakM7WUFDRCxTQUFTLEVBQUU7Z0JBQ1QsRUFBRSxFQUFFLElBQUksWUFBWSxDQUFDLFVBQVUsQ0FBQzthQUNqQztTQUNnRSxDQUFDO0lBQ3RFLENBQUM7Q0EwQkYifQ==