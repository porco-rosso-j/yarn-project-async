{ "noir_version": "0.24.0+78ef0134b82e76a73dadb6c7975def22290e3a1a", "name": "Child", "functions": [{ "name": "pubGetValue", "function_type": "Open", "is_internal": false, "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "public_global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] }, "visibility": "private" }, { "name": "base_value", "type": { "kind": "field" }, "visibility": "private" }], "param_witnesses": { "base_value": [{ "start": 39, "end": 40 }], "inputs": [{ "start": 0, "end": 39 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "contract_storage_update_requests", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "new_value", "type": { "kind": "field" } }] } } }, { "name": "contract_storage_reads", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::storage_read::StorageRead", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "current_value", "type": { "kind": "field" } }] } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "unencrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "prover_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] }, "visibility": "public" }, "return_witnesses": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233] }, "bytecode": "", "debug_symbols": "" }, { "name": "pubSetValue", "function_type": "Open", "is_internal": false, "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "public_global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] }, "visibility": "private" }, { "name": "new_value", "type": { "kind": "field" }, "visibility": "private" }], "param_witnesses": { "inputs": [{ "start": 0, "end": 39 }], "new_value": [{ "start": 39, "end": 40 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "contract_storage_update_requests", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "new_value", "type": { "kind": "field" } }] } } }, { "name": "contract_storage_reads", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::storage_read::StorageRead", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "current_value", "type": { "kind": "field" } }] } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "unencrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "prover_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] }, "visibility": "public" }, "return_witnesses": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233] }, "bytecode": "", "debug_symbols": "" }, { "name": "valueInternal", "function_type": "Secret", "is_internal": false, "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "contract_deployment_data", "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::contract_deployment_data::ContractDeploymentData", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "initialization_hash", "type": { "kind": "field" } }, { "name": "contract_class_id", "type": { "kind": "struct", "path": "aztec::protocol_types::contract_class_id::ContractClassId", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "contract_address_salt", "type": { "kind": "field" } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }, { "name": "private_global_variables", "type": { "kind": "struct", "path": "aztec::context::globals::private_global_variables::PrivateGlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] } }] }, "visibility": "private" }, { "name": "input", "type": { "kind": "field" }, "visibility": "private" }], "param_witnesses": { "input": [{ "start": 41, "end": 42 }], "inputs": [{ "start": 0, "end": 41 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "min_revertible_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "read_requests", "type": { "kind": "array", "length": 32, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_key_validation_requests", "type": { "kind": "array", "length": 1, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "secret_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey", "fields": [{ "name": "high", "type": { "kind": "field" } }, { "name": "low", "type": { "kind": "field" } }] } }] } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "private_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "end_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "encrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "unencrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "encrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "contract_deployment_data", "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::contract_deployment_data::ContractDeploymentData", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "initialization_hash", "type": { "kind": "field" } }, { "name": "contract_class_id", "type": { "kind": "struct", "path": "aztec::protocol_types::contract_class_id::ContractClassId", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "contract_address_salt", "type": { "kind": "field" } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }, { "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] }, "visibility": "public" }, "return_witnesses": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263] }, "bytecode": "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", "debug_symbols": "1ZTLCoMwEEX/ZdZZZJLJw/xKcZG2FgRR0VAo4r9XW6NIhS7EQlfJhcPhwgzTQVFdfMirsgXXASK4Uwdt7csxtsE3ARxnkJXX4e0Z3PIiAycQe/bBoUomEi3OLHK9wQpp7QQLIrXQyaYZSajoRrLJik8ZoPjX4vJnxZUQsbiyYndx2lNckop2SWaRa/5yqwPd+kC3OdBtt9xIMm4jksFv68INzjOVekWnQ7r7JvfnIhtvwRDDo35/+yc=" }, { "name": "setValueTwiceWithNestedFirst", "function_type": "Open", "is_internal": false, "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "public_global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] }, "visibility": "private" }], "param_witnesses": { "inputs": [{ "start": 0, "end": 39 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "contract_storage_update_requests", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "new_value", "type": { "kind": "field" } }] } } }, { "name": "contract_storage_reads", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::storage_read::StorageRead", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "current_value", "type": { "kind": "field" } }] } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "unencrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "prover_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] }, "visibility": "public" }, "return_witnesses": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232] }, "bytecode": "", "debug_symbols": "" }, { "name": "pubIncValueInternal", "function_type": "Open", "is_internal": false, "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "public_global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] }, "visibility": "private" }, { "name": "new_value", "type": { "kind": "field" }, "visibility": "private" }], "param_witnesses": { "inputs": [{ "start": 0, "end": 39 }], "new_value": [{ "start": 39, "end": 40 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "contract_storage_update_requests", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "new_value", "type": { "kind": "field" } }] } } }, { "name": "contract_storage_reads", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::storage_read::StorageRead", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "current_value", "type": { "kind": "field" } }] } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "unencrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "prover_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] }, "visibility": "public" }, "return_witnesses": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233] }, "bytecode": "", "debug_symbols": "" }, { "name": "setValueTwiceWithNestedLast", "function_type": "Open", "is_internal": false, "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "public_global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] }, "visibility": "private" }], "param_witnesses": { "inputs": [{ "start": 0, "end": 39 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "contract_storage_update_requests", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "new_value", "type": { "kind": "field" } }] } } }, { "name": "contract_storage_reads", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::storage_read::StorageRead", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "current_value", "type": { "kind": "field" } }] } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "unencrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "prover_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] }, "visibility": "public" }, "return_witnesses": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232] }, "bytecode": "", "debug_symbols": "" }, { "name": "constructor", "function_type": "Secret", "is_internal": false, "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "contract_deployment_data", "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::contract_deployment_data::ContractDeploymentData", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "initialization_hash", "type": { "kind": "field" } }, { "name": "contract_class_id", "type": { "kind": "struct", "path": "aztec::protocol_types::contract_class_id::ContractClassId", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "contract_address_salt", "type": { "kind": "field" } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }, { "name": "private_global_variables", "type": { "kind": "struct", "path": "aztec::context::globals::private_global_variables::PrivateGlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] } }] }, "visibility": "private" }], "param_witnesses": { "inputs": [{ "start": 0, "end": 41 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "min_revertible_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "read_requests", "type": { "kind": "array", "length": 32, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_key_validation_requests", "type": { "kind": "array", "length": 1, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "secret_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey", "fields": [{ "name": "high", "type": { "kind": "field" } }, { "name": "low", "type": { "kind": "field" } }] } }] } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "private_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "end_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "encrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "unencrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "encrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "contract_deployment_data", "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::contract_deployment_data::ContractDeploymentData", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "initialization_hash", "type": { "kind": "field" } }, { "name": "contract_class_id", "type": { "kind": "struct", "path": "aztec::protocol_types::contract_class_id::ContractClassId", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "contract_address_salt", "type": { "kind": "field" } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }, { "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] }, "visibility": "public" }, "return_witnesses": [46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259] }, "bytecode": "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", "debug_symbols": "tZAxCoQwEEXv8usUjom7bK6ybDGrEQIhigmChNzdiGJjnWrmweMVP8FNPUc7+QCdQAT9TQgz+wND5CVCNwLGD+VmgdE6A90SZfHwpOq6S5Xq/bntV5N/AtRWbMuKbVWrXWDlxfLfmWP9gnGbzzfv" }, { "name": "compute_note_hash_and_nullifier", "function_type": "Unconstrained", "is_internal": false, "abi": { "parameters": [{ "name": "contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] }, "visibility": "private" }, { "name": "nonce", "type": { "kind": "field" }, "visibility": "private" }, { "name": "storage_slot", "type": { "kind": "field" }, "visibility": "private" }, { "name": "note_type_id", "type": { "kind": "field" }, "visibility": "private" }, { "name": "serialized_note", "type": { "kind": "array", "length": 20, "type": { "kind": "field" } }, "visibility": "private" }], "param_witnesses": { "contract_address": [{ "start": 0, "end": 1 }], "nonce": [{ "start": 1, "end": 2 }], "note_type_id": [{ "start": 3, "end": 4 }], "serialized_note": [{ "start": 4, "end": 24 }], "storage_slot": [{ "start": 2, "end": 3 }] }, "return_type": { "abi_type": { "kind": "array", "length": 4, "type": { "kind": "field" } }, "visibility": "public" }, "return_witnesses": [24, 25, 26, 27] }, "bytecode": "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", "debug_symbols": "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" }, { "name": "privateGetValue", "function_type": "Secret", "is_internal": false, "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "contract_deployment_data", "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::contract_deployment_data::ContractDeploymentData", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "initialization_hash", "type": { "kind": "field" } }, { "name": "contract_class_id", "type": { "kind": "struct", "path": "aztec::protocol_types::contract_class_id::ContractClassId", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "contract_address_salt", "type": { "kind": "field" } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }, { "name": "private_global_variables", "type": { "kind": "struct", "path": "aztec::context::globals::private_global_variables::PrivateGlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] } }] }, "visibility": "private" }, { "name": "amount", "type": { "kind": "field" }, "visibility": "private" }, { "name": "owner", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] }, "visibility": "private" }], "param_witnesses": { "amount": [{ "start": 41, "end": 42 }], "inputs": [{ "start": 0, "end": 41 }], "owner": [{ "start": 42, "end": 43 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "min_revertible_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "read_requests", "type": { "kind": "array", "length": 32, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_key_validation_requests", "type": { "kind": "array", "length": 1, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "secret_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey", "fields": [{ "name": "high", "type": { "kind": "field" } }, { "name": "low", "type": { "kind": "field" } }] } }] } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "private_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "end_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "encrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "unencrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "encrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "contract_deployment_data", "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::contract_deployment_data::ContractDeploymentData", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "initialization_hash", "type": { "kind": "field" } }, { "name": "contract_class_id", "type": { "kind": "struct", "path": "aztec::protocol_types::contract_class_id::ContractClassId", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "contract_address_salt", "type": { "kind": "field" } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }, { "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] }, "visibility": "public" }, "return_witnesses": [9497, 9498, 9499, 9500, 9501, 9502, 9503, 9504, 9505, 9506, 9507, 9508, 9509, 9510, 9511, 9512, 9513, 9514, 9515, 9516, 9517, 9518, 9519, 9520, 9521, 9522, 9523, 9524, 9525, 9526, 9527, 9528, 9529, 9530, 9531, 9532, 9533, 9534, 9535, 9536, 9537, 9538, 9539, 9540, 9541, 9542, 9543, 9544, 9545, 9546, 9547, 9548, 9549, 9550, 9551, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9581, 9582, 9583, 9584, 9585, 9586, 9587, 9588, 9589, 9590, 9591, 9592, 9593, 9594, 9595, 9596, 9597, 9598, 9599, 9600, 9601, 9602, 9603, 9604, 9605, 9606, 9607, 9608, 9609, 9610, 9611, 9612, 9613, 9614, 9615, 9616, 9617, 9618, 9619, 9620, 9621, 9622, 9623, 9624, 9625, 9626, 9627, 9628, 9629, 9630, 9631, 9632, 9633, 9634, 9635, 9636, 9637, 9638, 9639, 9640, 9641, 9642, 9643, 9644, 9645, 9646, 9647, 9648, 9649, 9650, 9651, 9652, 9653, 9654, 9655, 9656, 9657, 9658, 9659, 9660, 9661, 9662, 9663, 9664, 9665, 9666, 9667, 9668, 9669, 9670, 9671, 9672, 9673, 9674, 9675, 9676, 9677, 9678, 9679, 9680, 9681, 9682, 9683, 9684, 9685, 9686, 9687, 9688, 9689, 9690, 9691, 9692, 9693, 9694, 9695, 9696, 9697, 9698, 9699, 9700, 9701, 9702, 9703, 9704, 9705, 9706, 9707, 9708, 9709, 9710] }, "bytecode": "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", "debug_symbols": "" }, { "name": "check_sender", "function_type": "Secret", "is_internal": false, "abi": { "parameters": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] }, "visibility": "private" }], "param_witnesses": { "call_context": [{ "start": 0, "end": 8 }] }, "return_type": null, "return_witnesses": [] }, "bytecode": "H4sIAAAAAAAA/61QSQ7CMAxMdx7BIU+Im6R1bvyBFzStKzhQpDb8nwqMFOVKRxqN5+CRPY0QohZfZDvzncVOGfmS55+vEl8nvuH9GDnrhVX9B4iztOqMob4l0DCo1nm0yljfISBYtFOLWhMa7J13vXJgNMFsnZ45LDvurk9WwVmn6P+425I7rLmrFFk0V6xn1istE63y8dqC9CTD7b7J8bmEdRiDeAMCThCpzQEAAA==", "debug_symbols": "JcxBCoAgEEbhu/xrF01RgVeJFlMZCKKiQxDi3VPavW/zClw4WWzwGbpght4KcmTflYWTQNOwkoLxV0ualqpwW2egR6K6Nz2cLB/O9EOjvPHP+gE=" }, { "name": "value", "function_type": "Secret", "is_internal": false, "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "contract_deployment_data", "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::contract_deployment_data::ContractDeploymentData", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "initialization_hash", "type": { "kind": "field" } }, { "name": "contract_class_id", "type": { "kind": "struct", "path": "aztec::protocol_types::contract_class_id::ContractClassId", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "contract_address_salt", "type": { "kind": "field" } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }, { "name": "private_global_variables", "type": { "kind": "struct", "path": "aztec::context::globals::private_global_variables::PrivateGlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] } }] }, "visibility": "private" }, { "name": "input", "type": { "kind": "field" }, "visibility": "private" }], "param_witnesses": { "input": [{ "start": 41, "end": 42 }], "inputs": [{ "start": 0, "end": 41 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "min_revertible_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "read_requests", "type": { "kind": "array", "length": 32, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_key_validation_requests", "type": { "kind": "array", "length": 1, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "secret_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey", "fields": [{ "name": "high", "type": { "kind": "field" } }, { "name": "low", "type": { "kind": "field" } }] } }] } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "private_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "end_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "encrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "unencrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "encrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "contract_deployment_data", "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::contract_deployment_data::ContractDeploymentData", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "initialization_hash", "type": { "kind": "field" } }, { "name": "contract_class_id", "type": { "kind": "struct", "path": "aztec::protocol_types::contract_class_id::ContractClassId", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "contract_address_salt", "type": { "kind": "field" } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }, { "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] }, "visibility": "public" }, "return_witnesses": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263] }, "bytecode": "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", "debug_symbols": "1ZNBCoMwEEXvMussnMmMxlyldJG2FgRR0VAo4t2rramUupMUuko+PB5vMwNUzdn5sql7sAMggj0M0LeunmfvXefBJgqK+jK9o4JrWRVgCXFUXxxKvpBo8M1ikm6wpI1ZYGKWlc43zcgkwY1s8g/+qADpX8P1z8KFKISLod3hvCdcswS75myVp8nTLRHdaUR3Fss9jZvrSneqivlQp+nv7es7PgA=" }, { "name": "pubIncValue", "function_type": "Open", "is_internal": false, "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "aztec::context::inputs::public_context_inputs::PublicContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "public_global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] }, "visibility": "private" }, { "name": "new_value", "type": { "kind": "field" }, "visibility": "private" }], "param_witnesses": { "inputs": [{ "start": 0, "end": 39 }], "new_value": [{ "start": 39, "end": 40 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "aztec::protocol_types::abis::public_circuit_public_inputs::PublicCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "contract_storage_update_requests", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::storage_update_request::StorageUpdateRequest", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "new_value", "type": { "kind": "field" } }] } } }, { "name": "contract_storage_reads", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::storage_read::StorageRead", "fields": [{ "name": "storage_slot", "type": { "kind": "field" } }, { "name": "current_value", "type": { "kind": "field" } }] } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "unencrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "prover_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] }, "visibility": "public" }, "return_witnesses": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233] }, "bytecode": "", "debug_symbols": "" }, { "name": "privateSetValue", "function_type": "Secret", "is_internal": false, "abi": { "parameters": [{ "name": "inputs", "type": { "kind": "struct", "path": "aztec::context::inputs::private_context_inputs::PrivateContextInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "contract_deployment_data", "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::contract_deployment_data::ContractDeploymentData", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "initialization_hash", "type": { "kind": "field" } }, { "name": "contract_class_id", "type": { "kind": "struct", "path": "aztec::protocol_types::contract_class_id::ContractClassId", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "contract_address_salt", "type": { "kind": "field" } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }, { "name": "private_global_variables", "type": { "kind": "struct", "path": "aztec::context::globals::private_global_variables::PrivateGlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] } }] }, "visibility": "private" }, { "name": "new_value", "type": { "kind": "field" }, "visibility": "private" }, { "name": "owner", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] }, "visibility": "private" }], "param_witnesses": { "inputs": [{ "start": 0, "end": 41 }], "new_value": [{ "start": 41, "end": 42 }], "owner": [{ "start": 42, "end": 43 }] }, "return_type": { "abi_type": { "kind": "struct", "path": "aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs", "fields": [{ "name": "call_context", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::call_context::CallContext", "fields": [{ "name": "msg_sender", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "storage_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "function_selector", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::function_selector::FunctionSelector", "fields": [{ "name": "inner", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "is_delegate_call", "type": { "kind": "boolean" } }, { "name": "is_static_call", "type": { "kind": "boolean" } }, { "name": "is_contract_deployment", "type": { "kind": "boolean" } }, { "name": "start_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "args_hash", "type": { "kind": "field" } }, { "name": "return_values", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "min_revertible_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "read_requests", "type": { "kind": "array", "length": 32, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "nullifier_key_validation_requests", "type": { "kind": "array", "length": 1, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::nullifier_key_validation_request::NullifierKeyValidationRequest", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "secret_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_private_key::GrumpkinPrivateKey", "fields": [{ "name": "high", "type": { "kind": "field" } }, { "name": "low", "type": { "kind": "field" } }] } }] } } }, { "name": "new_note_hashes", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffect", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "new_nullifiers", "type": { "kind": "array", "length": 16, "type": { "kind": "struct", "path": "aztec::protocol_types::abis::side_effect::SideEffectLinkedToNoteHash", "fields": [{ "name": "value", "type": { "kind": "field" } }, { "name": "note_hash", "type": { "kind": "field" } }, { "name": "counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } } }, { "name": "private_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "public_call_stack_hashes", "type": { "kind": "array", "length": 4, "type": { "kind": "field" } } }, { "name": "new_l2_to_l1_msgs", "type": { "kind": "array", "length": 2, "type": { "kind": "struct", "path": "aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message", "fields": [{ "name": "recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "content", "type": { "kind": "field" } }] } } }, { "name": "end_side_effect_counter", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }, { "name": "encrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "unencrypted_logs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "encrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "unencrypted_log_preimages_length", "type": { "kind": "field" } }, { "name": "historical_header", "type": { "kind": "struct", "path": "aztec::protocol_types::header::Header", "fields": [{ "name": "last_archive", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "content_commitment", "type": { "kind": "struct", "path": "aztec::protocol_types::content_commitment::ContentCommitment", "fields": [{ "name": "tx_tree_height", "type": { "kind": "field" } }, { "name": "txs_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "in_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }, { "name": "out_hash", "type": { "kind": "array", "length": 2, "type": { "kind": "field" } } }] } }, { "name": "state", "type": { "kind": "struct", "path": "aztec::protocol_types::state_reference::StateReference", "fields": [{ "name": "l1_to_l2_message_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "partial", "type": { "kind": "struct", "path": "aztec::protocol_types::partial_state_reference::PartialStateReference", "fields": [{ "name": "note_hash_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "nullifier_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "contract_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }, { "name": "public_data_tree", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot", "fields": [{ "name": "root", "type": { "kind": "field" } }, { "name": "next_available_leaf_index", "type": { "kind": "integer", "sign": "unsigned", "width": 32 } }] } }] } }] } }, { "name": "global_variables", "type": { "kind": "struct", "path": "aztec::protocol_types::abis::global_variables::GlobalVariables", "fields": [{ "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }, { "name": "block_number", "type": { "kind": "field" } }, { "name": "timestamp", "type": { "kind": "field" } }, { "name": "coinbase", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "fee_recipient", "type": { "kind": "struct", "path": "aztec::protocol_types::address::aztec_address::AztecAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }] } }, { "name": "contract_deployment_data", "type": { "kind": "struct", "path": "aztec::protocol_types::contrakt::contract_deployment_data::ContractDeploymentData", "fields": [{ "name": "public_key", "type": { "kind": "struct", "path": "aztec::protocol_types::grumpkin_point::GrumpkinPoint", "fields": [{ "name": "x", "type": { "kind": "field" } }, { "name": "y", "type": { "kind": "field" } }] } }, { "name": "initialization_hash", "type": { "kind": "field" } }, { "name": "contract_class_id", "type": { "kind": "struct", "path": "aztec::protocol_types::contract_class_id::ContractClassId", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }, { "name": "contract_address_salt", "type": { "kind": "field" } }, { "name": "portal_contract_address", "type": { "kind": "struct", "path": "aztec::protocol_types::address::eth_address::EthAddress", "fields": [{ "name": "inner", "type": { "kind": "field" } }] } }] } }, { "name": "chain_id", "type": { "kind": "field" } }, { "name": "version", "type": { "kind": "field" } }] }, "visibility": "public" }, "return_witnesses": [63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276] }, "bytecode": "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", "debug_symbols": "7VjbjtowEP0XP6PIc/F4hl+p9iFtqYSE2NWCKlWIf2+ywY6hFlGzgnbRPkHEmfHx8fHMhIPbPH9r9+vn7c4tDw7ALb8c3O6l3faPu337undLv3Cr7ffu87hwP9ablVsiwHHxBw6CnZCgkLHgpYJFUj2BkTmMaKtmBsaQcgOrneGfFg7woxKnuxEPiIl4UHw3cX4PceKQshPHMbn4t9zhhrnlhrnjDXNrLTcip/SIESdWQItpBbTCMOjj2xJWX0KzbwhtypEQJNkGrXCZr6GV+QTWwpFsNe7ektcRUDM4+FreSCes+XAdCt0+MuGAZ5rMuBboH0VDk0zCg0yIOCkLfMpSkwXvLUvXGzQzMiuF6fnQv+TTiX/Jh+/OB8cTQ9HrxlHGbDIuasdQsTF8ZPJyf/KWnUBME1eW0Y9TmExUbdbUDgKN7UAGi8UH2miEdKSxwEr1+ClRNhs5gM7revpAIool1lH4uohgPu/QF3cIVGbJaI/kxRhTeel/P7t05P/zjebUKBEmNkoxTQ+hGB6Yh6m9qXaBPHBA0fNiGGaCBuryKOUxRYUup/c+DmbGVceQkCcdCcU9kKE9NPW3BeIkM5lellpp6uPxVBDMCcI5QfS3QeSbep8PlEpxKN7LBlf0QTInqNqrhHy+aKNXIx2fuoef7eu6/bpZ9X/vdI/7Xy/D1+Nv" }], "events": [], "file_map": { "3": { "source": "struct BoundedVec<T, MaxLen> {\n    storage: [T; MaxLen],\n    // TODO: change this to return a u64 as Noir now\n    // uses u64 for indexing\n    len: Field,\n    empty_value: T,\n}\n\nimpl<T, MaxLen> BoundedVec<T, MaxLen> {\n    pub fn new(initial_value: T) -> Self {\n        BoundedVec { storage: [initial_value; MaxLen], len: 0, empty_value: initial_value }\n    }\n\n    pub fn get(mut self: Self, index: Field) -> T {\n        assert(index as u64 < self.len as u64);\n        self.storage[index]\n    }\n\n    pub fn get_unchecked(mut self: Self, index: Field) -> T {\n        self.storage[index]\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len as u64 < MaxLen as u64, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn len(self) -> Field {\n        self.len\n    }\n\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> Field {\n        MaxLen\n    }\n\n    // This is a intermediate method, while we don't have an\n    // .extend method\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    pub fn extend_from_array<Len>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len as u64 <= MaxLen as u64, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    pub fn extend_from_bounded_vec<Len>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len as u64 <= MaxLen as u64, \"extend_from_bounded_vec out of bounds\");\n\n        let mut exceeded_len = false;\n        for i in 0..Len {\n            exceeded_len |= i == append_len;\n            if !exceeded_len {\n                self.storage[self.len + (i as Field)] = vec.get_unchecked(i as Field);\n            }\n        }\n        self.len = new_len;\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len as u64 > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = self.empty_value;\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if (!exceeded_len) {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n}", "path": "std/collections/bounded_vec.nr" }, "18": { "source": "// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\nglobal TWO_POW_128: Field = 0x100000000000000000000000000000000;\n\n/// A hint for decomposing a single field into two 16 byte fields.\nunconstrained fn decompose_unsafe(x: Field) -> (Field, Field) {\n    let x_bytes = x.to_le_bytes(32);\n\n    let mut low: Field = 0;\n    let mut high: Field = 0;\n\n    let mut offset = 1;\n    for i in 0..16 {\n        low += (x_bytes[i] as Field) * offset;\n        high += (x_bytes[i + 16] as Field) * offset;\n        offset *= 256;\n    }\n\n    (low, high)\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    // Take hints of the decomposition\n    let (xlo, xhi) = decompose_unsafe(x);\n    let borrow = lt_unsafe(PLO, xlo, 16);\n\n    // Range check the limbs\n    xlo.assert_max_bit_size(128);\n    xhi.assert_max_bit_size(128);\n\n    // Check that the decomposition is correct\n    assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n    // Check that (xlo < plo && xhi <= phi) || (xlo >= plo && xhi < phi)\n    let rlo = PLO - xlo + (borrow as Field) * TWO_POW_128;\n    let rhi = PHI - xhi - (borrow as Field);\n\n    rlo.assert_max_bit_size(128);\n    rhi.assert_max_bit_size(128);\n\n    (xlo, xhi)\n}\n\nunconstrained fn lt_unsafe(x: Field, y: Field, num_bytes: u32) -> bool {\n    let x_bytes = x.__to_le_radix(256, num_bytes);\n    let y_bytes = y.__to_le_radix(256, num_bytes);\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..num_bytes {\n        if (!done) {\n            let x_byte = x_bytes[num_bytes - 1 - i];\n            let y_byte = y_bytes[num_bytes - 1 - i];\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\nunconstrained fn lte_unsafe(x: Field, y: Field, num_bytes: u32) -> bool {\n    lt_unsafe(x, y, num_bytes) | (x == y)\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    // Decompose a and b\n    let (alo, ahi) = decompose(a);\n    let (blo, bhi) = decompose(b);\n\n    let borrow = lte_unsafe(alo, blo, 16);\n\n    // Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\n    let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n    let rhi = ahi - bhi - (borrow as Field);\n\n    rlo.assert_max_bit_size(128);\n    rhi.assert_max_bit_size(128);\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if a == b {\n        false\n    } else if lt_unsafe(a, b, 32) {\n        assert_gt(b, a);\n        false\n    } else {\n        assert_gt(a, b);\n        true\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n", "path": "std/field/bn254.nr" }, "19": { "source": "mod bn254;\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    pub fn to_le_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_le_bits(bit_size)\n    }\n    \n    pub fn to_be_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_be_bits(bit_size)\n    }\n\n    #[builtin(to_le_bits)]\n    fn __to_le_bits(self, _bit_size: u32) -> [u1] {}\n    \n    #[builtin(to_be_bits)]\n    fn __to_be_bits(self, bit_size: u32) -> [u1] {}\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    pub fn assert_max_bit_size(self: Self, bit_size: u32) {\n        crate::assert_constant(bit_size);\n        assert(bit_size < modulus_num_bits() as u32);\n        self.__assert_max_bit_size(bit_size);\n    }\n\n    pub fn to_le_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_le_radix(256, byte_size)\n    }\n\n    pub fn to_be_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_be_radix(256, byte_size)\n    }\n\n\n    pub fn to_le_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_le_radix(radix, result_len)\n    }\n\n    pub fn to_be_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_be_radix(radix, result_len)\n    }\n\n\n\n    // decompose `_self` into a `_result_len` vector over the `_radix` basis\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix(self, radix: u32, result_len: u32) -> [u8] {}\n    \n    #[builtin(to_be_radix)]\n    fn __to_be_radix(self, radix: u32, result_len: u32) -> [u8] {}\n\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b = exponent.to_le_bits(32);\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x ∈ {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n\n}\n\n#[builtin(modulus_num_bits)]\npub fn modulus_num_bits() -> Field {}\n\n#[builtin(modulus_be_bits)]\npub fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub fn modulus_le_bytes() -> [u8] {}\n// Convert a 32 byte array to a field element\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    let num_bytes = (modulus_num_bits() as u32 + 7) / 8;\n    let x_bytes = x.to_le_bytes(num_bytes);\n    let y_bytes = y.to_le_bytes(num_bytes);\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..num_bytes {\n        if (!done) {\n            let x_byte = x_bytes[num_bytes - 1 - i] as u8;\n            let y_byte = y_bytes[num_bytes - 1 - i] as u8;\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\n", "path": "std/field.nr" }, "31": { "source": "struct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default\n        }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// Asserts `self.is_some()` with a provided custom message and returns the contained `Some` value\n    fn expect<N, MessageTypes>(self, message: fmtstr<N, MessageTypes>) -> T {\n        assert(self.is_some(), message);\n        self._value\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            other\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some {\n            self\n        } else {\n            default()\n        }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some {\n                Option::none()\n            } else {\n                self\n            }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n", "path": "std/option.nr" }, "44": { "source": "use crate::context::{PrivateContext, PublicContext};\nuse crate::oracle;\nuse dep::protocol_types::{address::AztecAddress, grumpkin_point::GrumpkinPoint};\n\npub fn emit_encrypted_log<N>(\n    context: &mut PrivateContext,\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    note_type_id: Field,\n    encryption_pub_key: GrumpkinPoint,\n    log: [Field; N]\n) {\n    let _ = oracle::logs::emit_encrypted_log(\n        contract_address,\n        storage_slot,\n        note_type_id,\n        encryption_pub_key,\n        log\n    );\n    context.accumulate_encrypted_logs(log);\n}\n\npub fn emit_unencrypted_log<T>(context: &mut PublicContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n\n// TODO: We might want to remove this since emitting unencrypted logs from private functions is violating privacy.\n// --> might be a better approach to force devs to make a public function call that emits the log if needed then\n// it would be less easy to accidentally leak information.\n// If we decide to keep this function around would make sense to wait for traits and then merge it with emit_unencrypted_log.\npub fn emit_unencrypted_log_from_private<T>(context: &mut PrivateContext, log: T) {\n    let contract_address = context.this_address();\n    let event_selector = 5; // TODO: compute actual event selector.\n    let _ = oracle::logs::emit_unencrypted_log(contract_address, event_selector, log);\n    // context.accumulate_unencrypted_logs(log);\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/log.nr" }, "48": { "source": "use dep::std::option::Option;\nuse dep::protocol_types::{\n    constants::{\n        MAX_READ_REQUESTS_PER_CALL,\n        GET_NOTE_ORACLE_RETURN_LENGTH,\n        GET_NOTES_ORACLE_RETURN_LENGTH,\n        MAX_NOTES_PER_PAGE,\n        VIEW_NOTE_ORACLE_RETURN_LENGTH,\n    },\n};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder, Comparator, NoteStatus},\n    note_interface::NoteInterface,\n    note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_consumption,\n};\nuse crate::oracle;\n\nfn check_note_header<Note, N>(\n    context: PrivateContext,\n    storage_slot: Field,\n    note: Note\n) where Note: NoteInterface<N> {\n    let header = note.get_header();\n    let contract_address = context.this_address();\n    assert(header.contract_address.eq(contract_address));\n    assert(header.storage_slot == storage_slot);\n}\n\nfn check_note_fields<N>(fields: [Field; N], selects: BoundedVec<Option<Select>, N>) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n\n        // Values are computed ahead of time because circuits evaluate all branches\n        let isEqual = fields[select.field_index] == select.value;\n        let isLt = fields[select.field_index].lt(select.value);\n\n        if (select.comparator == Comparator.EQ) {\n            assert(isEqual, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.NEQ) {\n            assert(!isEqual, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.LT) {\n            assert(isLt, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.LTE) {\n            assert(isLt | isEqual, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.GT) {\n            assert(!isLt & !isEqual, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.GTE) {\n            assert(!isLt, \"Mismatch return note field.\");\n        }\n    }\n}\n\nfn check_notes_order<N>(\n    fields_0: [Field; N],\n    fields_1: [Field; N],\n    sorts: BoundedVec<Option<Sort>, N>\n) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let eq = fields_0[sort.field_index] == fields_1[sort.field_index];\n        let lt = fields_0[sort.field_index] as u120 < fields_1[sort.field_index] as u120;\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field\n) -> Note where Note: NoteInterface<N> {\n    let note = get_note_internal(storage_slot);\n\n    check_note_header(*context, storage_slot, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_consumption(note);\n\n    context.push_read_request(note_hash_for_read_request);\n    note\n}\n\npub fn get_notes<Note, N, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] where Note: NoteInterface<N> {\n    let opt_notes = get_notes_internal(storage_slot, options);\n    let mut num_notes = 0;\n    let mut prev_fields = [0; N];\n    for i in 0..opt_notes.len() {\n        let opt_note = opt_notes[i];\n        if opt_note.is_some() {\n            let note = opt_note.unwrap_unchecked();\n            let fields = note.serialize_content();\n            check_note_header(*context, storage_slot, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_consumption(note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_read_request(note_hash_for_read_request);\n\n            num_notes += 1;\n        };\n    }\n    if options.limit != 0 {\n        assert(num_notes <= options.limit, \"Invalid number of return notes.\");\n    }\n    opt_notes\n}\n\nunconstrained fn get_note_internal<Note, N>(storage_slot: Field) -> Note where Note: NoteInterface<N> {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n    oracle::notes::get_notes(\n        storage_slot,\n        0,\n        [],\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        NoteStatus.ACTIVE,\n        placeholder_note,\n        placeholder_fields,\n        placeholder_note_length\n    )[0].unwrap() // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, N, FILTER_ARGS>(\n    storage_slot: Field,\n    options: NoteGetterOptions<Note, N, FILTER_ARGS>\n) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] where Note: NoteInterface<N> {\n    let (num_selects, select_by, select_values, select_comparators, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n    let opt_notes = oracle::notes::get_notes(\n        storage_slot,\n        num_selects,\n        select_by,\n        select_values,\n        select_comparators,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        options.status,\n        placeholder_opt_notes,\n        placeholder_fields,\n        placeholder_note_length\n    );\n\n    let filter = options.filter;\n    let filter_args = options.filter_args;\n    filter(opt_notes, filter_args)\n}\n\nunconstrained pub fn view_notes<Note, N>(\n    storage_slot: Field,\n    options: NoteViewerOptions<Note, N>\n) -> [Option<Note>; MAX_NOTES_PER_PAGE] where Note: NoteInterface<N> {\n    let (num_selects, select_by, select_values, select_comparators, sort_by, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n    oracle::notes::get_notes(\n        storage_slot,\n        num_selects,\n        select_by,\n        select_values,\n        select_comparators,\n        sort_by,\n        sort_order,\n        options.limit,\n        options.offset,\n        options.status,\n        placeholder_opt_notes,\n        placeholder_fields,\n        placeholder_note_length\n    )\n}\n\nunconstrained fn flatten_options<Note, N>(\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>\n) -> (u8, [u8; N], [Field; N], [u3; N], [u8; N], [u2; N]) {\n    let mut num_selects = 0;\n    let mut select_by = [0; N];\n    let mut select_values = [0; N];\n    let mut select_comparators = [0; N];\n\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by[num_selects] = select.unwrap_unchecked().field_index;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            select_comparators[num_selects] = select.unwrap_unchecked().comparator;\n            num_selects += 1;\n        };\n    }\n\n    let mut sort_by = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by[i] = sort.unwrap_unchecked().field_index;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    }\n\n    (num_selects, select_by, select_values, select_comparators, sort_by, sort_order)\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/note/note_getter.nr" }, "49": { "source": "use crate::context::{PrivateContext, PublicContext};\nuse crate::note::{\n    note_header::NoteHeader, note_interface::NoteInterface,\n    utils::{compute_note_hash_for_insertion, compute_note_hash_for_consumption}\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\n\npub fn create_note<Note, N>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note,\n    broadcast: bool\n) where Note: NoteInterface<N> {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    // TODO: change this to note.setHeader(header) once https://github.com/noir-lang/noir/issues/4095 is fixed\n    Note::set_header(note, header);\n    // As `is_transient` is true, this will compute the inner note hsah\n    let inner_note_hash = compute_note_hash_for_insertion(*note);\n\n    // TODO: Strong typing required because of https://github.com/noir-lang/noir/issues/4088\n    let serialized_note: [Field; N] = Note::serialize_content(*note);\n    assert(\n        notify_created_note(\n        storage_slot,\n        Note::get_note_type_id(),\n        serialized_note,\n        inner_note_hash\n    )\n        == 0\n    );\n\n    context.push_new_note_hash(inner_note_hash);\n\n    if broadcast {\n        Note::broadcast(*note, context, storage_slot);\n    }\n}\n\npub fn create_note_hash_from_public<Note, N>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note\n) where Note: NoteInterface<N> {\n    let contract_address = (*context).this_address();\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, is_transient: true };\n    // TODO: change this to note.setHeader(header) once https://github.com/noir-lang/noir/issues/4095 is fixed\n    Note::set_header(note, header);\n    let inner_note_hash = compute_note_hash_for_insertion(*note);\n\n    context.push_new_note_hash(inner_note_hash);\n}\n\npub fn destroy_note<Note, N>(context: &mut PrivateContext, note: Note) where Note: NoteInterface<N> {\n    let mut nullifier = 0;\n    let mut consumed_note_hash: Field = 0;\n    nullifier = note.compute_nullifier(context);\n\n    // We also need the note hash corresponding to the \"nullifier\"\n    let header = note.get_header();\n    // `consumed_note_hash` is used to inform the kernel which pending note hash\n    // the nullifier corresponds to so they can be matched and both squashed/deleted.\n    // nonzero nonce implies \"persistable\" nullifier (nullifies a persistent/in-tree\n    // note hash) in which case `consumed_note_hash` is not used since the kernel\n    // just siloes and forwards the nullifier to its output.\n    if (header.is_transient) {\n        // TODO(1718): Can we reuse the note hash computed in `compute_nullifier`?\n        consumed_note_hash = compute_note_hash_for_consumption(note);\n    }\n    assert(notify_nullified_note(nullifier, consumed_note_hash) == 0);\n\n    context.push_new_nullifier(nullifier, consumed_note_hash)\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/note/lifecycle.nr" }, "50": { "source": "use crate::{context::PrivateContext, note::{note_header::NoteHeader, note_interface::NoteInterface}};\n\nuse dep::protocol_types::{\n    address::AztecAddress,\n    constants::{GENERATOR_INDEX__OUTER_NULLIFIER, GENERATOR_INDEX__UNIQUE_NOTE_HASH, GENERATOR_INDEX__SILOED_NOTE_HASH},\n    hash::pedersen_hash, utils::arr_copy_slice\n};\n\nfn compute_siloed_hash(contract_address: AztecAddress, inner_note_hash: Field) -> Field {\n    let inputs = [contract_address.to_field(), inner_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__SILOED_NOTE_HASH)\n}\n\nfn compute_unique_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    let inputs = [nonce, siloed_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__UNIQUE_NOTE_HASH)\n}\n\nfn compute_inner_note_hash<Note, N>(note: Note) -> Field where Note: NoteInterface<N> {\n    let header = note.get_header();\n    let note_hash = note.compute_note_content_hash();\n\n    // TODO(#1205) Do we need a generator index here?\n    pedersen_hash([header.storage_slot, note_hash], 0)\n}\n\nfn compute_siloed_note_hash<Note, N>(note_with_header: Note) -> Field where Note: NoteInterface<N> {\n    let header = note_with_header.get_header();\n\n    let inner_note_hash = compute_inner_note_hash(note_with_header);\n\n    compute_siloed_hash(header.contract_address, inner_note_hash)\n}\n\nfn compute_unique_siloed_note_hash<Note, N>(note_with_header: Note) -> Field where Note: NoteInterface<N> {\n    let header = note_with_header.get_header();\n\n    let siloed_note_hash = compute_siloed_note_hash(note_with_header);\n\n    compute_unique_hash(header.nonce, siloed_note_hash)\n}\n\npub fn compute_siloed_nullifier<Note, N>(\n    note_with_header: Note,\n    context: &mut PrivateContext\n) -> Field where Note: NoteInterface<N> {\n    let header = note_with_header.get_header();\n    let inner_nullifier = note_with_header.compute_nullifier(context);\n\n    let input = [header.contract_address.to_field(), inner_nullifier];\n    pedersen_hash(input, GENERATOR_INDEX__OUTER_NULLIFIER)\n}\n\npub fn compute_note_hash_for_insertion<Note, N>(note: Note) -> Field where Note: NoteInterface<N> {\n    compute_inner_note_hash(note)\n}\n\npub fn compute_note_hash_for_consumption<Note, N>(note: Note) -> Field where Note: NoteInterface<N> {\n    let header = note.get_header();\n    // There are 3 cases for reading a note intended for consumption:\n    // 1. The note was inserted in this transaction, and is transient.\n    // 2. The note was inserted in a previous transaction, and was inserted in public\n    // 3. The note was inserted in a previous transaction, and was inserted in private\n\n    if (header.is_transient) {\n        // If a note is transient, we just read the inner_note_hash (kernel will silo by contract address).\n        compute_inner_note_hash(note)\n    } else if (header.nonce == 0) {\n        // If not transient and nonce is zero, that means we are reading a public note.\n        compute_siloed_note_hash(note)\n    } else {\n        // When nonce is nonzero, that means we are reading a settled note (from tree) created in a\n        // previous TX. So we need the unique_siloed_note_hash which has already been hashed with\n        // contract address and then nonce. This hash will match the existing leaf in the private\n        // data tree, so the kernel can just perform a membership check directly on this hash/leaf.\n        compute_unique_siloed_note_hash(note)\n    }\n}\n\npub fn compute_note_hash_and_nullifier<T, N, S>(\n    deserialize_content: fn([Field; N]) -> T,\n    note_header: NoteHeader,\n    serialized_note: [Field; S]\n) -> [Field; 4] where T: NoteInterface<N> {\n    let mut note = deserialize_content(arr_copy_slice(serialized_note, [0; N], 0));\n    // TODO: change this to note.setHeader(header) once https://github.com/noir-lang/noir/issues/4095 is fixed\n    T::set_header((&mut note), note_header);\n\n    let inner_note_hash = compute_inner_note_hash(note);\n\n    let siloed_note_hash = compute_siloed_hash(note_header.contract_address, inner_note_hash);\n\n    let unique_siloed_note_hash = compute_unique_hash(note_header.nonce, siloed_note_hash);\n\n    let inner_nullifier = note.compute_nullifier_without_context();\n\n    [inner_note_hash, siloed_note_hash, unique_siloed_note_hash, inner_nullifier]\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/note/utils.nr" }, "58": { "source": "use crate::{\n    context::inputs::PublicContextInputs, messaging::process_l1_to_l2_message,\n    oracle::{arguments, public_call::call_public_function_internal}\n};\nuse dep::protocol_types::{\n    abis::{\n    global_variables::GlobalVariables, function_selector::FunctionSelector,\n    private_circuit_public_inputs::PrivateCircuitPublicInputs,\n    public_call_stack_item::PublicCallStackItem,\n    public_circuit_public_inputs::PublicCircuitPublicInputs,\n    side_effect::{SideEffect, SideEffectLinkedToNoteHash}\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    MAX_NEW_NOTE_HASHES_PER_CALL, MAX_NEW_L2_TO_L1_MSGS_PER_CALL, MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL, MAX_READ_REQUESTS_PER_CALL, NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH\n},\n    contrakt::{storage_read::StorageRead, storage_update_request::StorageUpdateRequest},\n    hash::hash_args, header::Header, messaging::l2_to_l1_message::L2ToL1Message, utils::reader::Reader\n};\n\nstruct PublicContext {\n    inputs: PublicContextInputs,\n    side_effect_counter: u32,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    contract_storage_update_requests: BoundedVec<StorageUpdateRequest, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL>,\n    contract_storage_reads: BoundedVec<StorageRead, MAX_PUBLIC_DATA_READS_PER_CALL>,\n    public_call_stack_hashes: BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n\n    new_note_hashes: BoundedVec<SideEffect, MAX_NEW_NOTE_HASHES_PER_CALL>,\n    new_nullifiers: BoundedVec<SideEffectLinkedToNoteHash, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    new_l2_to_l1_msgs: BoundedVec<L2ToL1Message, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n\n    unencrypted_logs_hash: BoundedVec<Field, NUM_FIELDS_PER_SHA256>,\n    unencrypted_logs_preimages_length: Field,\n\n    // Header of a block whose state is used during public execution. Set by sequencer to be a header of a block\n    // previous to the one in which the tx is included.\n    historical_header: Header,\n    prover_address: AztecAddress,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: PublicContextInputs, args_hash: Field) -> PublicContext {\n        let empty_storage_read = StorageRead::empty();\n        let empty_storage_update = StorageUpdateRequest::empty();\n        PublicContext {\n            inputs,\n            side_effect_counter: inputs.call_context.start_side_effect_counter,\n            args_hash,\n            return_values: BoundedVec::new(0),\n            contract_storage_update_requests: BoundedVec::new(empty_storage_update),\n            contract_storage_reads: BoundedVec::new(empty_storage_read),\n            public_call_stack_hashes: BoundedVec::new(0),\n            new_note_hashes: BoundedVec::new(SideEffect::empty()),\n            new_nullifiers: BoundedVec::new(SideEffectLinkedToNoteHash::empty()),\n            new_l2_to_l1_msgs: BoundedVec::new(L2ToL1Message::empty()),\n            unencrypted_logs_hash: BoundedVec::new(0),\n            unencrypted_logs_preimages_length: 0,\n            historical_header: inputs.historical_header,\n            prover_address: AztecAddress::zero() // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n        }\n    }\n\n    pub fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> EthAddress {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.public_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.public_global_variables.version\n    }\n\n    pub fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    pub fn block_number(self) -> Field {\n        self.inputs.public_global_variables.block_number\n    }\n\n    pub fn timestamp(self) -> Field {\n        self.inputs.public_global_variables.timestamp\n    }\n\n    pub fn coinbase(self) -> EthAddress {\n        self.inputs.public_global_variables.coinbase\n    }\n\n    pub fn fee_recipient(self) -> AztecAddress {\n        self.inputs.public_global_variables.fee_recipient\n    }\n\n    pub fn finish(self) -> PublicCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_log_preimages_length = 0;\n\n        // Compute the public call stack hashes\n        let pub_circuit_pub_inputs = PublicCircuitPublicInputs {\n            call_context: self.inputs.call_context, // Done\n            args_hash: self.args_hash, // Done\n            contract_storage_update_requests: self.contract_storage_update_requests.storage,\n            contract_storage_reads: self.contract_storage_reads.storage,\n            return_values: self.return_values.storage,\n            new_note_hashes: self.new_note_hashes.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            public_call_stack_hashes: self.public_call_stack_hashes.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            unencrypted_logs_hash,\n            unencrypted_log_preimages_length,\n            historical_header: self.inputs.historical_header,\n            prover_address: self.prover_address\n        };\n        pub_circuit_pub_inputs\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        let side_effect = SideEffect { value: note_hash, counter: self.side_effect_counter };\n        self.new_note_hashes.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        let side_effect = SideEffectLinkedToNoteHash {\n            value: nullifier,\n            note_hash: 0, // cannot nullify pending notes in public context\n            counter: self.side_effect_counter\n        };\n        self.new_nullifiers.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn message_portal(&mut self, recipient: EthAddress, content: Field) {\n        let message = L2ToL1Message { recipient, content };\n        self.new_l2_to_l1_msgs.push(message);\n    }\n\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field, sender: EthAddress) {\n        let this = (*self).this_address();\n        let nullifier = process_l1_to_l2_message(\n            self.historical_header.state.l1_to_l2_message_tree.root,\n            this,\n            sender,\n            self.chain_id(),\n            self.version(),\n            msg_key,\n            content,\n            secret\n        );\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, 0)\n    }\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_public_function<ARGS_COUNT>(\n        _self: Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        call_public_function_internal(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_public_function_no_args(\n        _self: Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_public_function_no_args(\n        _self: Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_public_function_no_args(\n        _self: Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        call_public_function_internal(contract_address, function_selector, 0, false, true)\n    }\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/context/public_context.nr" }, "60": { "source": "use crate::{\n    context::inputs::PrivateContextInputs, key::nullifier_key::validate_nullifier_key_against_address,\n    messaging::process_l1_to_l2_message,\n    oracle::{\n    arguments, call_private_function::call_private_function_internal,\n    enqueue_public_function_call::enqueue_public_function_call_internal, context::get_portal_address,\n    header::get_header_at, nullifier_key::{get_nullifier_key_pair, NullifierKeyPair},\n    debug_log::debug_log\n}\n};\nuse dep::protocol_types::{\n    abis::{\n    call_context::CallContext, function_data::FunctionData, function_selector::FunctionSelector,\n    nullifier_key_validation_request::NullifierKeyValidationRequest,\n    private_call_stack_item::PrivateCallStackItem,\n    private_circuit_public_inputs::PrivateCircuitPublicInputs,\n    public_call_stack_item::PublicCallStackItem,\n    public_circuit_public_inputs::PublicCircuitPublicInputs,\n    side_effect::{SideEffect, SideEffectLinkedToNoteHash}\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    MAX_NEW_NOTE_HASHES_PER_CALL, MAX_NEW_L2_TO_L1_MSGS_PER_CALL, MAX_NEW_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_PUBLIC_DATA_READS_PER_CALL, MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL,\n    MAX_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL, NUM_FIELDS_PER_SHA256,\n    RETURN_VALUES_LENGTH\n},\n    contrakt::{storage_read::StorageRead, storage_update_request::StorageUpdateRequest},\n    grumpkin_private_key::GrumpkinPrivateKey, hash::hash_args, header::Header,\n    messaging::l2_to_l1_message::L2ToL1Message, utils::reader::Reader\n};\nuse dep::std::option::Option;\n\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n// use dep::std::collections::vec::Vec;\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: PrivateContextInputs,\n    side_effect_counter: u32,\n\n    min_revertible_side_effect_counter: u32,\n\n    args_hash : Field,\n    return_values : BoundedVec<Field, RETURN_VALUES_LENGTH>,\n\n    read_requests: BoundedVec<SideEffect, MAX_READ_REQUESTS_PER_CALL>,\n    nullifier_key_validation_requests: BoundedVec<NullifierKeyValidationRequest, MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL>,\n\n    new_note_hashes: BoundedVec<SideEffect, MAX_NEW_NOTE_HASHES_PER_CALL>,\n    new_nullifiers: BoundedVec<SideEffectLinkedToNoteHash, MAX_NEW_NULLIFIERS_PER_CALL>,\n\n    private_call_stack_hashes : BoundedVec<Field, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack_hashes : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    new_l2_to_l1_msgs : BoundedVec<L2ToL1Message, MAX_NEW_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    // Header of a block whose state is used during private execution (not the block the transaction is included in).\n    historical_header: Header,\n\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    // encrypted_logs_preimages: Vec<Field>,\n    // unencrypted_logs_preimages: Vec<Field>,\n\n    nullifier_key: Option<NullifierKeyPair>,\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        let side_effect_counter = inputs.call_context.start_side_effect_counter;\n        let mut min_revertible_side_effect_counter = 0;\n        // Note. The side effect counter is 2 when this is the initial call\n        if (side_effect_counter == 2) {\n            min_revertible_side_effect_counter = side_effect_counter;\n        }\n        PrivateContext {\n            inputs,\n            side_effect_counter,\n            min_revertible_side_effect_counter,\n            args_hash,\n            return_values: BoundedVec::new(0),\n            read_requests: BoundedVec::new(SideEffect::empty()),\n            nullifier_key_validation_requests: BoundedVec::new(NullifierKeyValidationRequest::empty()),\n            new_note_hashes: BoundedVec::new(SideEffect::empty()),\n            new_nullifiers: BoundedVec::new(SideEffectLinkedToNoteHash::empty()),\n            historical_header: inputs.historical_header,\n            private_call_stack_hashes: BoundedVec::new(0),\n            public_call_stack_hashes: BoundedVec::new(0),\n            new_l2_to_l1_msgs: BoundedVec::new(L2ToL1Message::empty()),\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n            // encrypted_logs_preimages: Vec::new(),\n            // unencrypted_logs_preimages: Vec::new(),\n            nullifier_key: Option::none()\n        }\n    }\n\n    pub fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    pub fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    pub fn this_portal_address(self) -> EthAddress {\n        self.inputs.call_context.portal_contract_address\n    }\n\n    pub fn chain_id(self) -> Field {\n        self.inputs.private_global_variables.chain_id\n    }\n\n    pub fn version(self) -> Field {\n        self.inputs.private_global_variables.version\n    }\n\n    pub fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    // Returns the header of a block whose state is used during private execution (not the block the transaction is\n    // included in).\n    pub fn get_header(self) -> Header {\n        self.historical_header\n    }\n\n    // Returns the header of an arbitrary block whose block number is less than or equal to the block number\n    // of historical header.\n    pub fn get_header_at(self, block_number: u32) -> Header {\n        get_header_at(block_number, self)\n    }\n\n    pub fn finish(self) -> PrivateCircuitPublicInputs {\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n        let encrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let unencrypted_logs_hash = [0; NUM_FIELDS_PER_SHA256];\n        let encrypted_log_preimages_length = 0;\n        let unencrypted_log_preimages_length = 0;\n\n        let priv_circuit_pub_inputs = PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            return_values: self.return_values.storage,\n            // TODO(fees): start this from 0 and test the following:\n            // - in the private circuit init that it gets set correctly\n            // - in the private circuit inner that it remains 0\n            // I've had to initialize the counter here so that it would work for contract deployments\n            // the above checks should be doable after we figure out fee payments for contract deployments\n            min_revertible_side_effect_counter: self.min_revertible_side_effect_counter,\n            read_requests: self.read_requests.storage,\n            nullifier_key_validation_requests: self.nullifier_key_validation_requests.storage,\n            new_note_hashes: self.new_note_hashes.storage,\n            new_nullifiers: self.new_nullifiers.storage,\n            private_call_stack_hashes: self.private_call_stack_hashes.storage,\n            public_call_stack_hashes: self.public_call_stack_hashes.storage,\n            new_l2_to_l1_msgs: self.new_l2_to_l1_msgs.storage,\n            end_side_effect_counter: self.side_effect_counter,\n            encrypted_logs_hash,\n            unencrypted_logs_hash,\n            encrypted_log_preimages_length,\n            unencrypted_log_preimages_length,\n            historical_header: self.historical_header,\n            contract_deployment_data: self.inputs.contract_deployment_data,\n            chain_id: self.inputs.private_global_variables.chain_id,\n            version: self.inputs.private_global_variables.version\n        };\n        priv_circuit_pub_inputs\n    }\n\n    pub fn capture_min_revertible_side_effect_counter(&mut self) {\n        self.min_revertible_side_effect_counter = self.side_effect_counter;\n    }\n\n    pub fn push_read_request(&mut self, read_request: Field) {\n        let side_effect = SideEffect { value: read_request, counter: self.side_effect_counter };\n        self.read_requests.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn push_new_note_hash(&mut self, note_hash: Field) {\n        let side_effect = SideEffect { value: note_hash, counter: self.side_effect_counter };\n        self.new_note_hashes.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn push_new_nullifier(&mut self, nullifier: Field, nullified_commitment: Field) {\n        let side_effect = SideEffectLinkedToNoteHash { value: nullifier, note_hash: nullified_commitment, counter: self.side_effect_counter };\n        self.new_nullifiers.push(side_effect);\n        self.side_effect_counter = self.side_effect_counter + 1;\n    }\n\n    pub fn request_nullifier_secret_key(&mut self, account: AztecAddress) -> GrumpkinPrivateKey {\n        let key_pair = if self.nullifier_key.is_none() {\n            let key_pair = get_nullifier_key_pair(account);\n            validate_nullifier_key_against_address(account, key_pair.public_key);\n            let request = NullifierKeyValidationRequest { public_key: key_pair.public_key, secret_key: key_pair.secret_key };\n            self.nullifier_key_validation_requests.push(request);\n            self.nullifier_key = Option::some(key_pair);\n            key_pair\n        } else {\n            let key_pair = self.nullifier_key.unwrap_unchecked();\n            // If MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL is larger than 1, need to update the way the key pair is cached.\n            assert(MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL == 1);\n            assert(\n                key_pair.account == account, \"Cannot query nullifier key for more than one account per call\"\n            );\n            key_pair\n        };\n        key_pair.secret_key\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, recipient: EthAddress, content: Field) {\n        // docs:end:context_message_portal\n        let message = L2ToL1Message { recipient, content };\n        self.new_l2_to_l1_msgs.push(message);\n    }\n\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(&mut self, msg_key: Field, content: Field, secret: Field, sender: EthAddress) {\n        // docs:end:context_consume_l1_to_l2_message\n        let nullifier = process_l1_to_l2_message(\n            self.historical_header.state.l1_to_l2_message_tree.root,\n            self.this_address(),\n            sender,\n            self.chain_id(),\n            self.version(),\n            msg_key,\n            content,\n            secret\n        );\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_new_nullifier(nullifier, 0)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    pub fn accumulate_encrypted_logs<N>(&mut self, log: [Field; N]) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn accumulate_unencrypted_logs<T>(&mut self, log: T) {\n        let _void1 = self.inputs;\n        let _void2 = log;\n        // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1165)\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_private_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_private_function_no_args<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_private_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) -> [Field; RETURN_VALUES_LENGTH] {\n        let item = call_private_function_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            self.side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        assert_eq(item.public_inputs.call_context.start_side_effect_counter, self.side_effect_counter);\n        self.side_effect_counter = item.public_inputs.end_side_effect_counter + 1;\n\n        assert(contract_address.eq(item.contract_address));\n        assert(function_selector.eq(item.function_data.selector));\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        assert(item.public_inputs.call_context.is_delegate_call == is_delegate_call);\n        assert(item.public_inputs.call_context.is_static_call == is_static_call);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n\n        if (is_delegate_call) {\n            // For delegate calls, we also constrain the execution context address for the nested call to be equal to our address.\n            assert(\n                item.public_inputs.call_context.storage_contract_address.eq(self.inputs.call_context.storage_contract_address)\n            );\n            assert(item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.msg_sender));\n        } else {\n            // For non-delegate calls, we also constrain the execution context address for the nested call to be equal to the address we called.\n            assert(item.public_inputs.call_context.storage_contract_address.eq(contract_address));\n            assert(\n                item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.storage_contract_address)\n            );\n        }\n\n        self.private_call_stack_hashes.push(item.hash());\n\n        item.public_inputs.return_values\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args(args);\n        assert(args_hash == arguments::pack_arguments(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) {\n        let fields = enqueue_public_function_call_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            self.side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        let mut reader = Reader::new(fields);\n\n        // Note: Not using PublicCirclePublicInputs::deserialize here, because everything below args_hash is 0 and\n        // there is no more data in fields because there is only ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE fields!\n        let item = PublicCallStackItem {\n            contract_address: AztecAddress::from_field(reader.read()),\n            function_data: reader.read_struct(FunctionData::deserialize),\n            public_inputs: PublicCircuitPublicInputs {\n                call_context: reader.read_struct(CallContext::deserialize),\n                args_hash: reader.read(),\n                return_values: [0; RETURN_VALUES_LENGTH],\n                contract_storage_update_requests: [StorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n                contract_storage_reads: [StorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n                public_call_stack_hashes: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n                new_note_hashes: [SideEffect::empty(); MAX_NEW_NOTE_HASHES_PER_CALL],\n                new_nullifiers: [SideEffectLinkedToNoteHash::empty(); MAX_NEW_NULLIFIERS_PER_CALL],\n                new_l2_to_l1_msgs: [L2ToL1Message::empty(); MAX_NEW_L2_TO_L1_MSGS_PER_CALL],\n                unencrypted_logs_hash: [0; NUM_FIELDS_PER_SHA256],\n                unencrypted_log_preimages_length: 0,\n                historical_header: Header::empty(),\n                prover_address: AztecAddress::zero()\n            },\n            is_execution_request: true\n        };\n        reader.finish();\n\n        assert(contract_address.eq(item.contract_address));\n        assert(function_selector.eq(item.function_data.selector));\n\n        assert_eq(item.public_inputs.call_context.start_side_effect_counter, self.side_effect_counter);\n        // We increment the sideffect counter by one, to account for the call itself being a side effect.\n        self.side_effect_counter = self.side_effect_counter + 1;\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        assert(item.public_inputs.call_context.is_delegate_call == is_delegate_call);\n        assert(item.public_inputs.call_context.is_static_call == is_static_call);\n        assert(item.public_inputs.call_context.is_contract_deployment == false);\n\n        if (is_delegate_call) {\n            // For delegate calls, we also constrain the execution context address for the nested call to be equal to our address.\n            assert(\n                item.public_inputs.call_context.storage_contract_address.eq(self.inputs.call_context.storage_contract_address)\n            );\n            assert(item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.msg_sender));\n        } else {\n            // For non-delegate calls, we also constrain the execution context address for the nested call to be equal to the address we called.\n            assert(item.public_inputs.call_context.storage_contract_address.eq(contract_address));\n            assert(\n                item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.storage_contract_address)\n            );\n        }\n\n        self.public_call_stack_hashes.push(item.hash());\n    }\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/context/private_context.nr" }, "64": { "source": "use dep::protocol_types::{abis::function_selector::FunctionSelector, address::AztecAddress, constants::RETURN_VALUES_LENGTH};\n\n#[oracle(callPublicFunction)]\nfn call_public_function_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _is_static_call: bool,\n    _is_delegate_call: bool\n) -> [Field; RETURN_VALUES_LENGTH] {}\n\nunconstrained pub fn call_public_function_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    is_static_call: bool,\n    is_delegate_call: bool\n) -> [Field; RETURN_VALUES_LENGTH] {\n    call_public_function_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        is_static_call,\n        is_delegate_call\n    )\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/oracle/public_call.nr" }, "66": { "source": "use dep::std::option::Option;\nuse crate::note::{\n    note_header::NoteHeader,\n    note_interface::NoteInterface,\n};\n\nuse dep::protocol_types::{\n    address::AztecAddress,\n    utils::arr_copy_slice,\n};\n\n#[oracle(notifyCreatedNote)]\nfn notify_created_note_oracle<N>(\n    _storage_slot: Field,\n    _note_type_id: Field,\n    _serialized_note: [Field; N],\n    _inner_note_hash: Field\n) -> Field {}\n\nunconstrained pub fn notify_created_note<N>(\n    storage_slot: Field,\n    note_type_id: Field,\n    serialized_note: [Field; N],\n    inner_note_hash: Field\n) -> Field {\n    notify_created_note_oracle(storage_slot, note_type_id, serialized_note, inner_note_hash)\n}\n\n#[oracle(notifyNullifiedNote)]\nfn notify_nullified_note_oracle<N>(_nullifier: Field, _inner_note_hash: Field) -> Field {}\n\nunconstrained pub fn notify_nullified_note<N>(nullifier: Field, inner_note_hash: Field) -> Field {\n    notify_nullified_note_oracle(nullifier, inner_note_hash)\n}\n\n#[oracle(getNotes)]\nfn get_notes_oracle<N, S>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by: [u8; N],\n    _select_values: [Field; N],\n    _select_comparators: [u3; N],\n    _sort_by: [u8; N],\n    _sort_order: [u2; N],\n    _limit: u32,\n    _offset: u32,\n    _status: u2,\n    _return_size: u32,\n    _placeholder_fields: [Field; S]\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<N, S>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by: [u8; N],\n    select_values: [Field; N],\n    select_comparators: [u3; N],\n    sort_by: [u8; N],\n    sort_order: [u2; N],\n    limit: u32,\n    offset: u32,\n    status: u2,\n    mut placeholder_fields: [Field; S]\n) -> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(\n        storage_slot,\n        num_selects,\n        select_by,\n        select_values,\n        select_comparators,\n        sort_by,\n        sort_order,\n        limit,\n        offset,\n        status,\n        return_size,\n        placeholder_fields\n    )\n}\n\nunconstrained pub fn get_notes<Note, N, M, S, NS>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by: [u8; M],\n    select_values: [Field; M],\n    select_comparators: [u3; M],\n    sort_by: [u8; M],\n    sort_order: [u2; M],\n    limit: u32,\n    offset: u32,\n    status: u2,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS], // TODO: Remove it and use `limit` to initialize the note array.\n    _placeholder_note_length: [Field; N] // Turbofish hack? Compiler breaks calculating read_offset unless we add this parameter\n) -> [Option<Note>; S] where Note: NoteInterface<N> {\n    let fields = get_notes_oracle_wrapper(\n        storage_slot,\n        num_selects,\n        select_by,\n        select_values,\n        select_comparators,\n        sort_by,\n        sort_order,\n        limit,\n        offset,\n        status,\n        placeholder_fields\n    );\n    let num_notes = fields[0] as u32;\n    let contract_address = AztecAddress::from_field(fields[1]);\n    for i in 0..placeholder_opt_notes.len() {\n        if i as u32 < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: Field = 2; // num_notes & contract_address.\n            let extra_preimage_length: Field = 2; // nonce & is_transient.\n            let read_offset: Field = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let is_transient = fields[read_offset + 1] as bool;\n            let header = NoteHeader { contract_address, nonce, storage_slot, is_transient };\n            let serialized_note = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = Note::deserialize_content(serialized_note);\n            // TODO: change this to note.setHeader(header) once https://github.com/noir-lang/noir/issues/4095 is fixed\n            Note::set_header(&mut note, header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    }\n    placeholder_opt_notes\n}\n\n#[oracle(checkNullifierExists)]\nfn check_nullifier_exists_oracle(_inner_nullifier: Field) -> Field {}\n\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/oracle/notes.nr" }, "68": { "source": "#[oracle(packArguments)]\nfn pack_arguments_oracle<N>(_args: [Field; N]) -> Field {}\n\n// TODO: explain what this does.\nunconstrained pub fn pack_arguments<N>(args: [Field; N]) -> Field {\n    pack_arguments_oracle(args)\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/oracle/arguments.nr" }, "69": { "source": "use dep::protocol_types::{address::{AztecAddress, PartialAddress, PublicKeysHash}, grumpkin_point::GrumpkinPoint};\n\n#[oracle(getPublicKeyAndPartialAddress)]\nfn get_public_key_and_partial_address_oracle(_address: AztecAddress) -> [Field; 3] {}\n\nunconstrained fn get_public_key_and_partial_address_internal(address: AztecAddress) -> [Field; 3] {\n    get_public_key_and_partial_address_oracle(address)\n}\n\npub fn get_public_key(address: AztecAddress) -> GrumpkinPoint {\n    let result = get_public_key_and_partial_address_internal(address);\n    let pub_key = GrumpkinPoint::new(result[0], result[1]);\n    let partial_address = PartialAddress::from_field(result[2]);\n\n    let calculated_address = AztecAddress::compute(PublicKeysHash::compute(pub_key), partial_address);\n    assert(calculated_address.eq(address));\n\n    pub_key\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/oracle/get_public_key.nr" }, "71": { "source": "use dep::protocol_types::traits::{Deserialize, Serialize};\n\n#[oracle(storageRead)]\nfn storage_read_oracle<N>(_storage_slot: Field, _number_of_elements: Field) -> [Field; N] {}\n\nunconstrained fn storage_read_oracle_wrapper<N>(_storage_slot: Field) -> [Field; N] {\n    storage_read_oracle(_storage_slot, N)\n}\n\npub fn storage_read<N>(storage_slot: Field) -> [Field; N] {\n    storage_read_oracle_wrapper(storage_slot)\n}\n\n#[oracle(storageWrite)]\nfn storage_write_oracle<N>(_storage_slot: Field, _values: [Field; N]) -> [Field; N] {}\n\nunconstrained pub fn storage_write<N>(storage_slot: Field, fields: [Field; N]) {\n    let _hash = storage_write_oracle(storage_slot, fields);\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/oracle/storage.nr" }, "73": { "source": "use dep::protocol_types::{address::AztecAddress, constants::NUM_FIELDS_PER_SHA256, grumpkin_point::GrumpkinPoint};\n\n// TODO: Should take encrypted data.\n#[oracle(emitEncryptedLog)]\nfn emit_encrypted_log_oracle<N>(\n    _contract_address: AztecAddress,\n    _storage_slot: Field,\n    _note_type_id: Field,\n    _encryption_pub_key: GrumpkinPoint,\n    _preimage: [Field; N]\n) -> Field {}\n\nunconstrained pub fn emit_encrypted_log<N>(\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    note_type_id: Field,\n    encryption_pub_key: GrumpkinPoint,\n    preimage: [Field; N]\n) -> [Field; NUM_FIELDS_PER_SHA256] {\n    [\n        emit_encrypted_log_oracle(\n            contract_address,\n            storage_slot,\n            note_type_id,\n            encryption_pub_key,\n            preimage\n        ), 0\n    ]\n}\n\n#[oracle(emitUnencryptedLog)]\nfn emit_unencrypted_log_oracle<T>(\n    _contract_address: AztecAddress,\n    _event_selector: Field,\n    _message: T\n) -> Field {}\n\nunconstrained pub fn emit_unencrypted_log<T>(\n    contract_address: AztecAddress,\n    event_selector: Field,\n    message: T\n) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // https://github.com/AztecProtocol/aztec-packages/issues/885\n    [emit_unencrypted_log_oracle(contract_address, event_selector, message), 0]\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/oracle/logs.nr" }, "75": { "source": "#[oracle(getRandomField)]\nfn rand_oracle() -> Field {}\n\nunconstrained pub fn rand() -> Field {\n    rand_oracle()\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/oracle/rand.nr" }, "78": { "source": "use dep::protocol_types::{address::AztecAddress, grumpkin_point::GrumpkinPoint, grumpkin_private_key::GrumpkinPrivateKey};\n\nstruct NullifierKeyPair {\n    account: AztecAddress,\n    public_key: GrumpkinPoint,\n    secret_key: GrumpkinPrivateKey,\n}\n\n#[oracle(getNullifierKeyPair)]\nfn get_nullifier_key_pair_oracle(_account: AztecAddress) -> [Field; 4] {}\n\nunconstrained fn get_nullifier_key_pair_internal(account: AztecAddress) -> NullifierKeyPair {\n    let result = get_nullifier_key_pair_oracle(account);\n    NullifierKeyPair {\n        account,\n        public_key: GrumpkinPoint { x: result[0], y: result[1] },\n        secret_key: GrumpkinPrivateKey { high: result[2], low: result[3] }\n    }\n}\n\npub fn get_nullifier_key_pair(account: AztecAddress) -> NullifierKeyPair {\n    get_nullifier_key_pair_internal(account)\n}\n\npub fn get_nullifier_secret_key(account: AztecAddress) -> GrumpkinPrivateKey {\n    get_nullifier_key_pair_internal(account).secret_key\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/oracle/nullifier_key.nr" }, "85": { "source": "mod globals;\nmod inputs;\n\nmod private_context;\nmod public_context;\nmod avm;\n\nuse private_context::PrivateContext;\nuse public_context::PublicContext;\nuse avm::AVMContext;\n\nstruct Context {\n    private: Option<&mut PrivateContext>,\n    public: Option<&mut PublicContext>,\n}\n\nimpl Context {\n    pub fn private(context: &mut PrivateContext) -> Context {\n        Context { private: Option::some(context), public: Option::none() }\n    }\n\n    pub fn public(context: &mut PublicContext) -> Context {\n        Context { public: Option::some(context), private: Option::none() }\n    }\n\n    pub fn none() -> Context {\n        Context { public: Option::none(), private: Option::none() }\n    }\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/context.nr" }, "97": { "source": "use crate::context::{Context};\nuse crate::oracle::storage::storage_read;\nuse crate::oracle::storage::storage_write;\nuse dep::std::option::Option;\nuse dep::protocol_types::traits::{Deserialize, Serialize};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:public_state_struct\nstruct PublicState<T> {\n    context: Context,\n    storage_slot: Field,\n}\n// docs:end:public_state_struct\n\nimpl<T> Storage<T> for PublicState<T> {}\n\nimpl<T> PublicState<T> {\n    // docs:start:public_state_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicState { context, storage_slot }\n    }\n    // docs:end:public_state_struct_new\n\n    // docs:start:public_state_struct_read\n    pub fn read<T_SERIALIZED_LEN>(self) -> T where T: Deserialize<T_SERIALIZED_LEN> {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let fields = storage_read(self.storage_slot);\n        T::deserialize(fields)\n    }\n    // docs:end:public_state_struct_read\n\n    // docs:start:public_state_struct_write\n    pub fn write<T_SERIALIZED_LEN>(self, value: T) where T: Serialize<T_SERIALIZED_LEN> {\n        assert(self.context.private.is_none(), \"Public state writes only supported in public functions\");\n        let fields = T::serialize(value);\n        storage_write(self.storage_slot, fields);\n    }\n    // docs:end:public_state_struct_write\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/state_vars/public_state.nr" }, "101": { "source": "use dep::std::option::Option;\nuse dep::protocol_types::{\n    constants::{MAX_NOTES_PER_PAGE, MAX_READ_REQUESTS_PER_CALL},\n    abis::side_effect::{SideEffect, SideEffectLinkedToNoteHash}\n};\nuse crate::context::{PrivateContext, PublicContext, Context};\nuse crate::note::{\n    lifecycle::{create_note, create_note_hash_from_public, destroy_note},\n    note_getter::{get_notes, view_notes}, note_getter_options::NoteGetterOptions,\n    note_header::NoteHeader, note_interface::NoteInterface, note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_consumption\n};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:struct\nstruct Set<Note> {\n    context: Context,\n    storage_slot: Field,\n}\n// docs:end:struct\n\nimpl<T> Storage<T> for Set<T> {}\n\nimpl<Note> Set<Note> {\n    // docs:start:new\n    pub fn new(context: Context, storage_slot: Field) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Set { context, storage_slot }\n    }\n    // docs:end:new\n    // docs:start:insert\n    pub fn insert<N>(self, note: &mut Note, broadcast: bool) where Note: NoteInterface<N> {\n        create_note(\n            self.context.private.unwrap(),\n            self.storage_slot,\n            note,\n            broadcast\n        );\n    }\n    // docs:end:insert\n\n    // docs:start:insert_from_public\n    pub fn insert_from_public<N>(self, note: &mut Note) where Note: NoteInterface<N> {\n        create_note_hash_from_public(self.context.public.unwrap(), self.storage_slot, note);\n    }\n    // docs:end:insert_from_public\n\n    // DEPRECATED\n    fn assert_contains_and_remove(_self: Self, _note: &mut Note, _nonce: Field) {\n        assert(\n            false, \"`assert_contains_and_remove` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\"\n        );\n    }\n\n    // DEPRECATED\n    fn assert_contains_and_remove_publicly_created(_self: Self, _note: &mut Note) {\n        assert(\n            false, \"`assert_contains_and_remove_publicly_created` has been deprecated. Please call PXE.addNote() to add a note to the database. Then use Set.get_notes() and Set.remove() in your contract to verify and remove a note.\"\n        );\n    }\n\n    // docs:start:remove\n    pub fn remove<N>(self, note: Note) where Note: NoteInterface<N> {\n        let context = self.context.private.unwrap();\n        let note_hash = compute_note_hash_for_consumption(note);\n        let has_been_read = context.read_requests.any(|r: SideEffect| r.value == note_hash);\n        assert(has_been_read, \"Can only remove a note that has been read from the set.\");\n\n        destroy_note(context, note);\n    }\n    // docs:end:remove\n\n    // docs:start:get_notes\n    pub fn get_notes<N, FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, FILTER_ARGS>\n    ) -> [Option<Note>; MAX_READ_REQUESTS_PER_CALL] where Note: NoteInterface<N> {\n        let storage_slot = self.storage_slot;\n        let opt_notes = get_notes(self.context.private.unwrap(), storage_slot, options);\n        opt_notes\n    }\n    // docs:end:get_notes\n\n    // docs:start:view_notes\n    unconstrained pub fn view_notes<N>(\n        self,\n        options: NoteViewerOptions<Note, N>\n    ) -> [Option<Note>; MAX_NOTES_PER_PAGE] where Note: NoteInterface<N> {\n        view_notes(self.storage_slot, options)\n    }\n    // docs:end:view_notes\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/state_vars/set.nr" }, "106": { "source": "use dep::protocol_types::{hash::hash_args, traits::Hash};\n\nstruct Hasher {\n    fields: [Field],\n}\n\nimpl Hash for Hasher {\n    fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nimpl Hasher {\n    pub fn new() -> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/aztec/src/hasher.nr" }, "145": { "source": "use crate::utils::field::field_from_bytes;\nuse dep::std::cmp::Eq;\nuse crate::traits::{Serialize, Deserialize};\n\nglobal SELECTOR_SIZE = 4;\n\nstruct FunctionSelector {\n    // 1st 4-bytes of abi-encoding of function.\n    inner: u32,\n}\n\nimpl Eq for FunctionSelector {\n    fn eq(self, function_selector: FunctionSelector) -> bool {\n        function_selector.inner == self.inner\n    }\n}\n\nimpl Serialize<1> for FunctionSelector {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.inner as Field]\n    }\n}\n\nimpl Deserialize<1> for FunctionSelector {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        Self {\n            inner: fields[0] as u32\n        }\n    }\n}\n\nimpl FunctionSelector {\n    fn to_field(self) -> Field {\n        self.inner as Field\n    }\n\n    pub fn from_u32(value: u32) -> Self {\n        Self { inner: value }\n    }\n\n    pub fn from_field(value: Field) -> Self {\n        Self { inner: value as u32 }\n    }\n\n    pub fn from_signature<N>(signature: str<N>) -> Self {\n        let bytes = signature.as_bytes();\n        let hash = dep::std::hash::keccak256(bytes, bytes.len() as u32);\n\n        let mut selector_be_bytes = [0; SELECTOR_SIZE];\n        for i in 0..SELECTOR_SIZE {\n            selector_be_bytes[i] = hash[i];\n        }\n\n        FunctionSelector::from_field(field_from_bytes(selector_be_bytes, true))\n    }\n\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/noir-protocol-circuits/src/crates/types/src/abis/function_selector.nr" }, "174": { "source": "global ARGS_LENGTH: Field = 16;\nglobal RETURN_VALUES_LENGTH: Field = 4;\n\n/**\n * Convention for constant array lengths are mainly divided in 2 classes:\n *  - FUNCTION CALL\n *  - TRANSACTION\n *\n * Agreed convention is to use MAX_XXX_PER_CALL resp. MAX_XXX_PER_TX, where XXX denotes a type of element such as\n * commitment, or nullifier, e.g.,:\n *  - MAX_NEW_NULLIFIERS_PER_CALL\n *  - MAX_NEW_NOTE_HASHES_PER_TX\n *\n * In the kernel circuits, we accumulate elements such as note hashes and the nullifiers from all functions calls in a\n * transaction. Therefore, we always must have:\n * MAX_XXX_PER_TX ≥ MAX_XXX_PER_CALL\n *\n * For instance:\n * MAX_NEW_NOTE_HASHES_PER_TX ≥ MAX_NEW_NOTE_HASHES_PER_CALL\n * MAX_NEW_NULLIFIERS_PER_TX ≥ MAX_NEW_NULLIFIERS_PER_CALL\n *\n */\n\n// docs:start:constants\n// \"PER CALL\" CONSTANTS\nglobal MAX_NEW_NOTE_HASHES_PER_CALL: Field = 16;\nglobal MAX_NEW_NULLIFIERS_PER_CALL: Field = 16;\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL: Field = 4;\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_CALL: Field = 2;\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL: Field = 16;\nglobal MAX_PUBLIC_DATA_READS_PER_CALL: Field = 16;\nglobal MAX_READ_REQUESTS_PER_CALL: Field = 32;\nglobal MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_CALL: Field = 1;\n\n// \"PER TRANSACTION\" CONSTANTS\nglobal MAX_NEW_NOTE_HASHES_PER_TX: Field = 64;\nglobal MAX_NON_REVERTIBLE_NOTE_HASHES_PER_TX: Field = 8;\nglobal MAX_REVERTIBLE_NOTE_HASHES_PER_TX: Field = 56;\n\nglobal MAX_NEW_NULLIFIERS_PER_TX: Field = 64;\nglobal MAX_NON_REVERTIBLE_NULLIFIERS_PER_TX: Field = 8;\nglobal MAX_REVERTIBLE_NULLIFIERS_PER_TX: Field = 56;\n\nglobal MAX_PRIVATE_CALL_STACK_LENGTH_PER_TX: Field = 8;\n\nglobal MAX_PUBLIC_CALL_STACK_LENGTH_PER_TX: Field = 8;\nglobal MAX_NON_REVERTIBLE_PUBLIC_CALL_STACK_LENGTH_PER_TX: Field = 3;\nglobal MAX_REVERTIBLE_PUBLIC_CALL_STACK_LENGTH_PER_TX: Field = 5;\n\nglobal MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX: Field = 32;\nglobal MAX_NON_REVERTIBLE_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX: Field = 16;\nglobal MAX_REVERTIBLE_PUBLIC_DATA_UPDATE_REQUESTS_PER_TX: Field = 16;\n\nglobal MAX_PUBLIC_DATA_READS_PER_TX: Field = 32;\nglobal MAX_NON_REVERTIBLE_PUBLIC_DATA_READS_PER_TX: Field = 16;\nglobal MAX_REVERTIBLE_PUBLIC_DATA_READS_PER_TX: Field = 16;\n\nglobal MAX_NEW_L2_TO_L1_MSGS_PER_TX: Field = 2;\nglobal MAX_NEW_CONTRACTS_PER_TX: Field = 1;\nglobal MAX_READ_REQUESTS_PER_TX: Field = 128;\nglobal MAX_NULLIFIER_KEY_VALIDATION_REQUESTS_PER_TX: Field = 4;\nglobal NUM_ENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\nglobal NUM_UNENCRYPTED_LOGS_HASHES_PER_TX: Field = 1;\n// docs:end:constants\n\n// ROLLUP CONTRACT CONSTANTS - constants used only in l1-contracts\nglobal NUMBER_OF_L1_L2_MESSAGES_PER_ROLLUP: Field = 16;\n\n// TREES RELATED CONSTANTS\nglobal VK_TREE_HEIGHT: Field = 3;\nglobal FUNCTION_TREE_HEIGHT: Field = 5;\nglobal CONTRACT_TREE_HEIGHT: Field = 16;\nglobal NOTE_HASH_TREE_HEIGHT: Field = 32;\nglobal PUBLIC_DATA_TREE_HEIGHT: Field = 40;\nglobal NULLIFIER_TREE_HEIGHT: Field = 20;\nglobal L1_TO_L2_MSG_TREE_HEIGHT: Field = 16;\nglobal ROLLUP_VK_TREE_HEIGHT: Field = 8;\nglobal ARTIFACT_FUNCTION_TREE_MAX_HEIGHT = 5;\n\n// SUB-TREES RELATED CONSTANTS\nglobal CONTRACT_SUBTREE_HEIGHT: Field = 0;\nglobal CONTRACT_SUBTREE_SIBLING_PATH_LENGTH: Field = 16;\nglobal NOTE_HASH_SUBTREE_HEIGHT: Field = 6;\nglobal NOTE_HASH_SUBTREE_SIBLING_PATH_LENGTH: Field = 26;\nglobal NULLIFIER_SUBTREE_HEIGHT: Field = 6;\nglobal PUBLIC_DATA_SUBTREE_HEIGHT: Field = 5;\nglobal ARCHIVE_HEIGHT: Field = 16;\nglobal NULLIFIER_SUBTREE_SIBLING_PATH_LENGTH: Field = 14;\nglobal PUBLIC_DATA_SUBTREE_SIBLING_PATH_LENGTH: Field = 35;\nglobal L1_TO_L2_MSG_SUBTREE_HEIGHT: Field = 4;\nglobal L1_TO_L2_MSG_SUBTREE_SIBLING_PATH_LENGTH: Field = 12;\n\n// MISC CONSTANTS\nglobal FUNCTION_SELECTOR_NUM_BYTES: Field = 4;\nglobal MAPPING_SLOT_PEDERSEN_SEPARATOR: Field = 4;\n// sha256 hash is stored in two fields to accommodate all 256-bits of the hash\nglobal NUM_FIELDS_PER_SHA256: Field = 2;\nglobal ARGS_HASH_CHUNK_LENGTH: u32 = 32;\nglobal ARGS_HASH_CHUNK_COUNT: u32 = 32;\n\n// CONTRACT CLASS CONSTANTS\n// This should be around 8192 (assuming 2**15 instructions packed at 8 bytes each),\n// but it's reduced to speed up build times, otherwise the ClassRegisterer takes over 5 mins to compile.\n// We are not using 1024 so we can squeeze in a few more args to methods that consume packed public bytecode,\n// such as the ClassRegisterer.register, and still land below the 32 * 32 max args limit for hashing.\nglobal MAX_PACKED_PUBLIC_BYTECODE_SIZE_IN_FIELDS: Field = 1000;\n// Bytecode size for private functions is per function, not for the entire contract.\n// Note that private functions bytecode includes a mix of acir and brillig.\nglobal MAX_PACKED_BYTECODE_SIZE_PER_PRIVATE_FUNCTION_IN_FIELDS: Field = 500;\n// Same for unconstrained functions: the size is per function.\nglobal MAX_PACKED_BYTECODE_SIZE_PER_UNCONSTRAINED_FUNCTION_IN_FIELDS: Field = 500;\n// Since we are not yet emitting selectors we'll use this magic value to identify events emitted by the ClassRegisterer.\n// This is just a stopgap until we implement proper selectors.\n// sha224sum 'struct ContractClassRegistered {contract_class_id: ContractClassId, version: Field, artifact_hash: Field, private_functions_root: Field, packed_public_bytecode: [Field; MAX_PACKED_PUBLIC_BYTECODE_SIZE_IN_FIELDS] }'\nglobal REGISTERER_CONTRACT_CLASS_REGISTERED_MAGIC_VALUE = 0x6999d1e02b08a447a463563453cb36919c9dd7150336fc7c4d2b52f8;\n// sha224sum 'struct ClassPrivateFunctionBroadcasted'\nglobal REGISTERER_PRIVATE_FUNCTION_BROADCASTED_MAGIC_VALUE = 0x1b70e95fde0b70adc30496b90a327af6a5e383e028e7a43211a07bcd;\n// sha224sum 'struct ClassUnconstrainedFunctionBroadcasted'\nglobal REGISTERER_UNCONSTRAINED_FUNCTION_BROADCASTED_MAGIC_VALUE = 0xe7af816635466f128568edb04c9fa024f6c87fb9010fdbffa68b3d99;\n\n// CONTRACT INSTANCE CONSTANTS\n// sha224sum 'struct ContractInstanceDeployed'\nglobal DEPLOYER_CONTRACT_INSTANCE_DEPLOYED_MAGIC_VALUE = 0x85864497636cf755ae7bde03f267ce01a520981c21c3682aaf82a631;\n\n// NOIR CONSTANTS - constants used only in yarn-packages/noir-contracts\n// Some are defined here because Noir doesn't yet support globals referencing other globals yet.\n// Move these constants to a noir file once the issue below is resolved:\n// https://github.com/noir-lang/noir/issues/1734\nglobal L1_TO_L2_MESSAGE_ORACLE_CALL_LENGTH: Field = 25;\nglobal MAX_NOTE_FIELDS_LENGTH: Field = 20;\n// GET_NOTE_ORACLE_RETURN_LENGT = MAX_NOTE_FIELDS_LENGTH + 1 + 2\n// The plus 1 is 1 extra field for nonce.\n// + 2 for EXTRA_DATA: [number_of_return_notes, contract_address]\nglobal GET_NOTE_ORACLE_RETURN_LENGTH: Field = 23;\nglobal MAX_NOTES_PER_PAGE: Field = 10;\n// VIEW_NOTE_ORACLE_RETURN_LENGTH = MAX_NOTES_PER_PAGE * (MAX_NOTE_FIELDS_LENGTH + 1) + 2;\nglobal VIEW_NOTE_ORACLE_RETURN_LENGTH: Field = 212;\n\n// LENGTH OF STRUCTS SERIALIZED TO FIELDS\nglobal AZTEC_ADDRESS_LENGTH = 1;\nglobal CALL_CONTEXT_LENGTH: Field = 8;\nglobal CONTENT_COMMITMENT_LENGTH: Field = 7;\nglobal CONTRACT_DEPLOYMENT_DATA_LENGTH: Field = 6;\nglobal CONTRACT_STORAGE_READ_LENGTH: Field = 2;\nglobal CONTRACT_STORAGE_UPDATE_REQUEST_LENGTH: Field = 2;\nglobal ETH_ADDRESS_LENGTH = 1;\nglobal FUNCTION_DATA_LENGTH: Field = 4;\nglobal FUNCTION_LEAF_PREIMAGE_LENGTH: Field = 5;\nglobal GLOBAL_VARIABLES_LENGTH: Field = 6;\nglobal HEADER_LENGTH: Field = 25; // 2 for last_archive, 7 for content commitment, 10 for state reference, 6 for global vars\nglobal L1_TO_L2_MESSAGE_LENGTH: Field = 8;\nglobal L2_TO_L1_MESSAGE_LENGTH: Field = 2;\nglobal NEW_CONTRACT_DATA_LENGTH: Field = 3;\nglobal NULLIFIER_KEY_VALIDATION_REQUEST_LENGTH = 4;\nglobal NULLIFIER_KEY_VALIDATION_REQUEST_CONTEXT_LENGTH = 5;\nglobal PARTIAL_STATE_REFERENCE_LENGTH: Field = 8;\nglobal PRIVATE_CALL_STACK_ITEM_LENGTH: Field = 219;\n// Change this ONLY if you have changed the PrivateCircuitPublicInputs structure.\n// In other words, if the structure/size of the public inputs of a function call changes then we should change this\n// constant as well PRIVATE_CALL_STACK_ITEM_LENGTH\nglobal PRIVATE_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 214;\n// Change this ONLY if you have changed the PublicCircuitPublicInputs structure.\nglobal PUBLIC_CIRCUIT_PUBLIC_INPUTS_LENGTH: Field = 194;\nglobal STATE_REFERENCE_LENGTH: Field = 10; // 2 for snap + 8 for partial\nglobal TX_CONTEXT_DATA_LENGTH: Field = 11;\nglobal TX_REQUEST_LENGTH: Field = 17;\n\nglobal GET_NOTES_ORACLE_RETURN_LENGTH: Field = 674;\nglobal NOTE_HASHES_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal NULLIFIERS_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal PUBLIC_DATA_WRITES_NUM_BYTES_PER_BASE_ROLLUP: Field = 2048;\nglobal CONTRACTS_NUM_BYTES_PER_BASE_ROLLUP: Field = 32;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\nglobal CONTRACT_DATA_NUM_BYTES_PER_BASE_ROLLUP_UNPADDED: Field = 52;\nglobal L2_TO_L1_MSGS_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\nglobal LOGS_HASHES_NUM_BYTES_PER_BASE_ROLLUP: Field = 64;\n\n/**\n * Enumerate the hash_indices which are used for pedersen hashing.\n * We start from 1 to avoid the default generators. The generator indices are listed\n * based on the number of elements each index hashes. The following conditions must be met:\n *\n * +-----------+-------------------------------+----------------------+\n * | Hash size | Number of elements hashed (n) | Condition to use     |\n * |-----------+-------------------------------+----------------------|\n * | LOW       | n ≤ 8                         | 0 < hash_index ≤ 32  |\n * | MID       | 8 < n ≤ 16                    | 32 < hash_index ≤ 40 |\n * | HIGH      | 16 < n ≤ 48                   | 40 < hash_index ≤ 48 |\n * +-----------+-------------------------------+----------------------+\n *\n * Note: When modifying, modify `GeneratorIndexPacker` in packer.hpp accordingly.\n */\n// Indices with size ≤ 8\nglobal GENERATOR_INDEX__NOTE_HASH = 1;\nglobal GENERATOR_INDEX__NOTE_HASH_NONCE = 2;\nglobal GENERATOR_INDEX__UNIQUE_NOTE_HASH = 3;\nglobal GENERATOR_INDEX__SILOED_NOTE_HASH = 4;\nglobal GENERATOR_INDEX__NULLIFIER = 5;\nglobal GENERATOR_INDEX__INITIALIZATION_NULLIFIER = 6;\nglobal GENERATOR_INDEX__OUTER_NULLIFIER = 7;\nglobal GENERATOR_INDEX__PUBLIC_DATA_READ = 8;\nglobal GENERATOR_INDEX__PUBLIC_DATA_UPDATE_REQUEST = 9;\nglobal GENERATOR_INDEX__FUNCTION_DATA = 10;\nglobal GENERATOR_INDEX__FUNCTION_LEAF = 11;\nglobal GENERATOR_INDEX__CONTRACT_DEPLOYMENT_DATA = 12;\nglobal GENERATOR_INDEX__CONSTRUCTOR = 13;\nglobal GENERATOR_INDEX__CONSTRUCTOR_ARGS = 14;\nglobal GENERATOR_INDEX__CONTRACT_ADDRESS = 15;\nglobal GENERATOR_INDEX__CONTRACT_LEAF = 16;\nglobal GENERATOR_INDEX__CALL_CONTEXT = 17;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM = 18;\nglobal GENERATOR_INDEX__CALL_STACK_ITEM_2 = 19;\nglobal GENERATOR_INDEX__L1_TO_L2_MESSAGE_SECRET = 20;\nglobal GENERATOR_INDEX__L2_TO_L1_MSG = 21;\nglobal GENERATOR_INDEX__TX_CONTEXT = 22;\nglobal GENERATOR_INDEX__PUBLIC_LEAF_INDEX = 23;\nglobal GENERATOR_INDEX__PUBLIC_DATA_LEAF = 24;\nglobal GENERATOR_INDEX__SIGNED_TX_REQUEST = 25;\nglobal GENERATOR_INDEX__GLOBAL_VARIABLES = 26;\nglobal GENERATOR_INDEX__PARTIAL_ADDRESS = 27;\nglobal GENERATOR_INDEX__BLOCK_HASH = 28;\nglobal GENERATOR_INDEX__SIDE_EFFECT = 29;\nglobal GENERATOR_INDEX__FEE_PAYLOAD = 30;\n// Indices with size ≤ 16\nglobal GENERATOR_INDEX__TX_REQUEST = 33;\nglobal GENERATOR_INDEX__SIGNATURE_PAYLOAD = 34;\n// Indices with size ≤ 44\nglobal GENERATOR_INDEX__VK = 41;\nglobal GENERATOR_INDEX__PRIVATE_CIRCUIT_PUBLIC_INPUTS = 42;\nglobal GENERATOR_INDEX__PUBLIC_CIRCUIT_PUBLIC_INPUTS = 43;\nglobal GENERATOR_INDEX__FUNCTION_ARGS = 44;\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/noir-protocol-circuits/src/crates/types/src/constants.nr" }, "175": { "source": "pub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() as u32 < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n\n// TODO to radix returns u8, so we cannot use bigger radixes. It'd be ideal to use a radix of the maximum range-constrained integer noir supports\npub fn full_field_less_than(lhs: Field, rhs: Field) -> bool {\n    lhs.lt(rhs)\n}\n\npub fn full_field_greater_than(lhs: Field, rhs: Field) -> bool {\n    rhs.lt(lhs)\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/noir-protocol-circuits/src/crates/types/src/utils/field.nr" }, "182": { "source": "use crate::traits::{Serialize, Deserialize};\n\nglobal BOOL_SERIALIZED_LEN: Field = 1;\nglobal U32_SERIALIZED_LEN: Field = 1;\nglobal U8_SERIALIZED_LEN: Field = 1;\nglobal FIELD_SERIALIZED_LEN: Field = 1;\n\nimpl Serialize<U32_SERIALIZED_LEN> for u32 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U32_SERIALIZED_LEN> for u32 {\n    fn deserialize(fields: [Field; U32_SERIALIZED_LEN]) -> Self {\n        fields[0] as u32\n    }\n}\n\nimpl Serialize<U8_SERIALIZED_LEN> for u8 {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<U8_SERIALIZED_LEN> for u8 {\n    fn deserialize(fields: [Field; U8_SERIALIZED_LEN]) -> Self {\n        fields[0] as u8\n    }\n}\n\nimpl Serialize<FIELD_SERIALIZED_LEN> for Field {\n    fn serialize(self) -> [Field; U32_SERIALIZED_LEN] {\n        [self]\n    }\n}\n\nimpl Deserialize<FIELD_SERIALIZED_LEN> for Field {\n    fn deserialize(fields: [Field; FIELD_SERIALIZED_LEN]) -> Self {\n        fields[0]\n    }\n}\n\nimpl Serialize<BOOL_SERIALIZED_LEN> for bool {\n    fn serialize(self) -> [Field; BOOL_SERIALIZED_LEN] {\n        [self as Field]\n    }\n}\n\nimpl Deserialize<BOOL_SERIALIZED_LEN> for bool {\n    fn deserialize(fields: [Field; BOOL_SERIALIZED_LEN]) -> bool {\n        fields[0] as bool\n    }\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/noir-protocol-circuits/src/crates/types/src/type_serialization.nr" }, "185": { "source": "// general util packages/modules are usually bad practice\n// because there is no criteria for what we should not put in here.\n// Reducing the size of this package would be welcome.\n\nmod arrays;\nmod field;\nmod reader;\nmod uint256;\n\n// if predicate == true then return lhs, else return rhs\npub fn conditional_assign(predicate: bool, lhs: Field, rhs: Field) -> Field {\n    if predicate { lhs } else { rhs }\n}\n\npub fn arr_copy_slice<T, N, M>(src: [T; N], mut dst: [T; M], offset: Field) -> [T; M] {\n    for i in 0..dst.len() {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/noir-protocol-circuits/src/crates/types/src/utils.nr" }, "186": { "source": "use crate::{\n    crate::address::{eth_address::EthAddress, partial_address::PartialAddress, public_keys_hash::PublicKeysHash},\n    constants::{AZTEC_ADDRESS_LENGTH, GENERATOR_INDEX__CONTRACT_ADDRESS},\n    contract_class_id::ContractClassId, hash::pedersen_hash, grumpkin_point::GrumpkinPoint,\n    traits::{Empty, ToField, Serialize, Deserialize}, utils\n};\n\n// Aztec address\nstruct AztecAddress {\n    inner : Field\n}\n\nimpl Eq for AztecAddress {\n    fn eq(self, other : Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for AztecAddress {\n    fn empty() -> Self {\n        Self {\n            inner : 0\n        }\n    }\n}\n\nimpl ToField for AztecAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn serialize(self: Self) -> [Field; AZTEC_ADDRESS_LENGTH] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn deserialize(fields: [Field; AZTEC_ADDRESS_LENGTH]) -> Self {\n        AztecAddress::from_field(fields[0])\n    }\n}\n\nimpl AztecAddress {\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n\n    pub fn from_field(field: Field) -> Self {\n        Self { inner: field }\n    }\n\n    pub fn compute_from_public_key(\n        pub_key: GrumpkinPoint,\n        contract_class_id: ContractClassId,\n        salt: Field,\n        initialization_hash: Field,\n        portal_contract_address: EthAddress\n    ) -> AztecAddress {\n        AztecAddress::compute(\n            PublicKeysHash::compute(pub_key),\n            PartialAddress::compute(\n                contract_class_id,\n                salt,\n                initialization_hash,\n                portal_contract_address\n            )\n        )\n    }\n\n    pub fn compute(pub_keys_hash: PublicKeysHash, partial_address: PartialAddress) -> AztecAddress {\n        AztecAddress::from_field(\n            pedersen_hash(\n                [pub_keys_hash.to_field(), partial_address.to_field()],\n                GENERATOR_INDEX__CONTRACT_ADDRESS\n            )\n        )\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs: Self, rhs: Self) -> Self {\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self { inner: result }\n    }\n}\n\n#[test]\nfn compute_address() {\n    let point = GrumpkinPoint { x: 1, y: 2 };\n    let contract_address_salt = 3;\n    let contract_class_id = ContractClassId::from_field(4);\n    let initialization_hash = 5;\n    let portal_contract_address = EthAddress::from_field(6);\n\n    let address = AztecAddress::compute_from_public_key(\n        point,\n        contract_class_id,\n        contract_address_salt,\n        initialization_hash,\n        portal_contract_address\n    );\n\n    assert(address.to_field() == 0x2fd71a4f0742364f194dd16d0ae32d2f47845ddc7f5d328f37d4148b565c4123);\n}\n\n#[test]\nfn compute_address_from_partial_and_pubkey() {\n    let point = GrumpkinPoint { x: 1, y: 2 };\n    let partial_address = PartialAddress::from_field(3);\n\n    let address = AztecAddress::compute(PublicKeysHash::compute(point), partial_address);\n    assert(address.to_field() == 0x0447f893197175723deb223696e2e96dbba1e707ee8507766373558877e74197);\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/noir-protocol-circuits/src/crates/types/src/address/aztec_address.nr" }, "187": { "source": "use crate::{\n    constants::GENERATOR_INDEX__PARTIAL_ADDRESS, hash::pedersen_hash, grumpkin_point::GrumpkinPoint,\n    traits::{ToField, Serialize, Deserialize}\n};\n\n// Public keys hash. Used in the computation of an address.\nstruct PublicKeysHash {\n    inner: Field\n}\n\nimpl ToField for PublicKeysHash {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl Serialize<1> for PublicKeysHash {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<1> for PublicKeysHash {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        PublicKeysHash::from_field(fields[0])\n    }\n}\n\nimpl PublicKeysHash {\n    pub fn from_field(field: Field) -> Self {\n        Self { inner: field }\n    }\n\n    pub fn compute(public_key: GrumpkinPoint) -> Self {\n        PublicKeysHash::from_field(\n            pedersen_hash(\n                [\n            public_key.x,\n            public_key.y\n        ],\n                GENERATOR_INDEX__PARTIAL_ADDRESS\n            )\n        )\n    }\n\n    pub fn to_field(self) -> Field {\n        self.inner\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n}\n\n#[test]\nfn compute_public_keys_hash() {\n    let point = GrumpkinPoint { x: 1, y: 2 };\n    let actual = PublicKeysHash::compute(point);\n    assert(actual.to_field() == 0x1923a6246e305720b6aaf751fde0342613e93c82e455c3831e28375c16dd40d8);\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/noir-protocol-circuits/src/crates/types/src/address/public_keys_hash.nr" }, "191": { "source": "use crate::address::{AztecAddress, EthAddress};\nuse crate::mocked::VerificationKey;\nuse crate::abis::function_selector::FunctionSelector;\nuse crate::abis::function_leaf_preimage::FunctionLeafPreimage;\nuse crate::abis::contract_class_function_leaf_preimage::ContractClassFunctionLeafPreimage;\nuse crate::contract_class_id::ContractClassId;\nuse crate::abis::new_contract_data::NewContractData as ContractLeafPreimage;\nuse crate::abis::function_data::FunctionData;\nuse crate::abis::side_effect::{SideEffect};\nuse crate::utils::uint256::U256;\nuse crate::constants::{\n    ARGS_HASH_CHUNK_COUNT, ARGS_HASH_CHUNK_LENGTH, CONTRACT_TREE_HEIGHT, FUNCTION_TREE_HEIGHT,\n    NOTE_HASH_TREE_HEIGHT, NUM_FIELDS_PER_SHA256, GENERATOR_INDEX__SILOED_NOTE_HASH,\n    GENERATOR_INDEX__OUTER_NULLIFIER, GENERATOR_INDEX__VK, GENERATOR_INDEX__CONSTRUCTOR,\n    GENERATOR_INDEX__PARTIAL_ADDRESS, GENERATOR_INDEX__CONTRACT_ADDRESS,\n    GENERATOR_INDEX__NOTE_HASH_NONCE, GENERATOR_INDEX__UNIQUE_NOTE_HASH, GENERATOR_INDEX__FUNCTION_ARGS\n};\nuse crate::messaging::l2_to_l1_message::L2ToL1Message;\n\nuse dep::std::hash::{pedersen_hash_with_separator, sha256};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = sha256(bytes_to_hash);\n\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (sha256_hashed[15 - i] as Field) * v;\n        low = low + (sha256_hashed[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    let hash_in_a_field = low + high * v;\n\n    hash_in_a_field\n}\n\npub fn hash_args<N>(args: [Field; N]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        for i in 0..ARGS_HASH_CHUNK_COUNT {\n            let mut chunk_hash = 0;\n            let start_chunk_index = i * ARGS_HASH_CHUNK_LENGTH;\n            if start_chunk_index < (args.len() as u32) {\n                let mut chunk_args = [0; ARGS_HASH_CHUNK_LENGTH];\n                for j in 0..ARGS_HASH_CHUNK_LENGTH {\n                    let item_index = i * ARGS_HASH_CHUNK_LENGTH + j;\n                    if item_index < (args.len() as u32) {\n                        chunk_args[j] = args[item_index];\n                    }\n                }\n                chunk_hash = pedersen_hash(chunk_args, GENERATOR_INDEX__FUNCTION_ARGS);\n            }\n            chunks_hashes[i] = chunk_hash;\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n\n// Checks that `value` is a member of a merkle tree with root `root` at position `index`\n// The witness being the `sibling_path`\npub fn assert_check_membership<N>(value: Field, index: Field, sibling_path: [Field; N], root: Field) {\n    let calculated_root = root_from_sibling_path(value, index, sibling_path);\n    assert(calculated_root == root, \"membership check failed\");\n}\n\n// Calculate the Merkle tree root from the sibling path and leaf.\n//\n// The leaf is hashed with its sibling, and then the result is hashed\n// with the next sibling etc in the path. The last hash is the root.\n//\n// TODO(David/Someone): The cpp code is using a uint256, whereas its\n// TODO a bit simpler in Noir to just have a bit array.\n// TODO: I'd generally like to avoid u256 for algorithms like \n// this because it means we never even need to consider cases where \n// the index is greater than p.\npub fn root_from_sibling_path<N>(leaf: Field, leaf_index: Field, sibling_path: [Field; N]) -> Field {\n    let mut node = leaf;\n    let indices = leaf_index.to_le_bits(N);\n\n    for i in 0..N {\n        let (hash_left, hash_right) = if indices[i] == 1 {\n            (sibling_path[i], node)\n        } else {\n            (node, sibling_path[i])\n        };\n        node = merkle_hash(hash_left, hash_right);\n    }\n    node\n}\n\n// Calculate the function tree root from the sibling path and leaf preimage.\n//\n// TODO: The cpp code passes in components of the FunctionLeafPreimage and then \n// builds it up. We should build it up and then pass the leaf preimage as a parameter.\n// We can then choose to have a general method that takes in anything hashable\n// and deduplicate the logic in `contract_tree_root_from_siblings`\npub fn function_tree_root_from_siblings(\n    selector: FunctionSelector,\n    is_internal: bool,\n    is_private: bool,\n    vk_hash: Field,\n    acir_hash: Field,\n    function_leaf_index: Field,\n    function_leaf_sibling_path: [Field; FUNCTION_TREE_HEIGHT]\n) -> Field {\n    let function_leaf_preimage = FunctionLeafPreimage { selector, is_internal, is_private, vk_hash, acir_hash };\n\n    let function_leaf = function_leaf_preimage.hash();\n\n    let function_tree_root = root_from_sibling_path(function_leaf, function_leaf_index, function_leaf_sibling_path);\n\n    function_tree_root\n}\n\n// Calculate the contract tree root from the sibling path and leaf preimage.\npub fn contract_tree_root_from_siblings(\n    contract_class_id: ContractClassId,\n    storage_contract_address: AztecAddress,\n    portal_contract_address: EthAddress,\n    contract_leaf_index: Field,\n    contract_leaf_sibling_path: [Field; CONTRACT_TREE_HEIGHT]\n) -> Field {\n    //TODO(Kev): if we use shorthand syntax here, we get an error as expected,\n    // since variable name is `storage_contract_address` but the span is incorrect.\n    let contract_leaf_preimage = ContractLeafPreimage { contract_address: storage_contract_address, portal_contract_address, contract_class_id };\n\n    let contract_leaf = contract_leaf_preimage.hash();\n\n    let computed_contract_tree_root = root_from_sibling_path(contract_leaf, contract_leaf_index, contract_leaf_sibling_path);\n\n    computed_contract_tree_root\n}\n\npub fn private_functions_root_from_siblings(\n    selector: FunctionSelector,\n    vk_hash: Field,\n    function_leaf_index: Field,\n    function_leaf_sibling_path: [Field; FUNCTION_TREE_HEIGHT]\n) -> Field {\n    let function_leaf_preimage = ContractClassFunctionLeafPreimage { selector, vk_hash };\n    let function_leaf = function_leaf_preimage.hash();\n    root_from_sibling_path(function_leaf, function_leaf_index, function_leaf_sibling_path)\n}\n\npub fn read_request_root_from_siblings(\n    read_request: Field,\n    leaf_index: Field,\n    sibling_path: [Field; NOTE_HASH_TREE_HEIGHT]\n) -> Field {\n    root_from_sibling_path(read_request, leaf_index, sibling_path)\n}\n\npub fn silo_note_hash(address: AztecAddress, inner_commitment: Field) -> Field {\n    pedersen_hash(\n        [\n        address.to_field(),\n        inner_commitment\n    ],\n        GENERATOR_INDEX__SILOED_NOTE_HASH\n    )\n}\n\npub fn silo_nullifier(address: AztecAddress, nullifier: Field) -> Field {\n    pedersen_hash(\n        [\n        address.to_field(),\n        nullifier\n    ],\n        GENERATOR_INDEX__OUTER_NULLIFIER\n    )\n}\n\nfn merkle_hash(left: Field, right: Field) -> Field {\n    pedersen_hash([left, right], 0)\n}\n\npub fn stdlib_recursion_verification_key_compress_native_vk(_vk: VerificationKey) -> Field {\n    // Original cpp code\n    // stdlib::recursion::verification_key<CT::bn254>::compress_native(private_call.vk, GeneratorIndex::VK);\n    // The above cpp method is only ever called on verification key, so it has been special cased here\n    let _hash_index = GENERATOR_INDEX__VK;\n    0\n}\n\n// TODO CPP uses blake2s for this\npub fn compute_new_contract_address_hash(new_contract_address: AztecAddress) -> Field {\n    dep::std::hash::pedersen_hash([new_contract_address.to_field()])\n}\n\npub fn compute_l2_to_l1_hash(\n    contract_address: AztecAddress,\n    rollup_version_id: Field,\n    chain_id: Field,\n    message: L2ToL1Message\n) -> Field {\n    let mut bytes: BoundedVec<u8, 160> = BoundedVec::new(0);\n\n    let inputs = [\n        contract_address.to_field(), rollup_version_id, message.recipient.to_field(), chain_id, message.content\n    ];\n    for i in 0..inputs.len() {\n        // TODO are bytes be in fr.to_buffer() ?\n        let item_bytes = inputs[i].to_be_bytes(32);\n        for j in 0..32 {\n            bytes.push(item_bytes[j]);\n        }\n    }\n\n    sha256_to_field(bytes.storage)\n}\n\npub fn compute_constructor_hash(\n    function_data: FunctionData,\n    args_hash: Field,\n    constructor_vk_hash: Field\n) -> Field {\n    let function_data_hash = function_data.hash();\n\n    pedersen_hash(\n        [\n        function_data_hash,\n        args_hash,\n        constructor_vk_hash\n    ],\n        GENERATOR_INDEX__CONSTRUCTOR\n    )\n}\n\n// Computes sha256 hash of 2 input hashes stored in 4 fields.\n// \n// This method is bn254 specific. Two fields is needed in order to \n// encode the sha256 output. It can be abstracted away with any 4-2 hash function.\n//\n// TODO(Jan and David): This is used for the encrypted_log hashes.\n// Can we check to see if we can just use hash_to_field or pedersen_compress here?\n//\n// Returning a Field would be desirable because then this can be replaced with \n// poseidon without changing the rest of the code\n//\npub fn accumulate_sha256(input: [U128; 4]) -> [Field; NUM_FIELDS_PER_SHA256] {\n    // This is a note about the cpp code, since it takes an array of Fields\n    // instead of a U128.\n    // 4 Field elements when converted to bytes will usually \n    // occupy 4 * 32 = 128 bytes.\n    // However, this function is making the assumption that each Field \n    // only occupies 128 bits.\n    //\n    // TODO(David): This does not seem to be getting guaranteed anywhere in the code?\n    //\n    // Concatenate 4 u128 bit integers into a byte array.\n    let mut hash_input_flattened = [0; 64];\n    for offset in 0..4 {\n        let input_as_bytes = input[offset].to_be_bytes();\n        for byte_index in 0..16 {\n            hash_input_flattened[offset * 16 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n\n    let sha_digest = dep::std::hash::sha256(hash_input_flattened);\n\n    U256::from_bytes32(sha_digest).to_u128_limbs()\n}\n\npub fn compute_logs_hash(\n    previous_log_hash: [Field; 2],\n    current_log_hash: [Field; 2]\n) -> [Field; NUM_FIELDS_PER_SHA256] {\n    accumulate_sha256(\n        [\n        U128::from_integer(previous_log_hash[0]),\n        U128::from_integer(previous_log_hash[1]),\n        U128::from_integer(current_log_hash[0]),\n        U128::from_integer(current_log_hash[1])\n    ]\n    )\n}\n\npub fn compute_note_hash_nonce(first_nullifier: Field, commitment_index: Field) -> Field {\n    pedersen_hash(\n        [\n        first_nullifier,\n        commitment_index\n    ],\n        GENERATOR_INDEX__NOTE_HASH_NONCE\n    )\n}\n\npub fn compute_unique_siloed_note_hash(nonce: Field, siloed_note_hash: Field) -> Field {\n    pedersen_hash(\n        [\n        nonce,\n        siloed_note_hash\n    ],\n        GENERATOR_INDEX__UNIQUE_NOTE_HASH\n    )\n}\n\npub fn compute_unique_siloed_note_hashes<N>(\n    first_nullifier: Field,\n    siloed_note_hashes: [SideEffect; N]\n) -> [SideEffect; N] {\n    let mut unique_siloed_note_hashes = [SideEffect::empty(); N];\n    for i in 0..N {\n        let siloed_note_hash = siloed_note_hashes[i];\n        if siloed_note_hash.value != 0 {\n            let nonce = compute_note_hash_nonce(first_nullifier, i);\n            unique_siloed_note_hashes[i] = SideEffect {\n                value: compute_unique_siloed_note_hash(nonce, siloed_note_hash.value),\n                counter: siloed_note_hash.counter\n                };\n        }\n    }\n    unique_siloed_note_hashes\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    dep::std::hash::pedersen_hash_with_separator(inputs, hash_index)\n}\n\n#[test]\nfn smoke_sha256_to_field() {\n    let full_buffer = [\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n        60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\n        80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\n        100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,\n        120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,\n        140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159\n    ];\n    let result = sha256_to_field(full_buffer);\n    assert(result == 0x142a6d57007171f6eaa33d55976d9dbe739c889c8e920f115f7808dea184c718);\n}\n\n#[test]\nfn compute_var_args_hash() {\n    let mut input = [0; 800];\n    for i in 0..800 {\n        input[i] = i as Field;\n    }\n    let hash = hash_args(input);\n    assert(hash == 0x371960dd84ed3445ab099ac4c1af5ba90e0c713b593e0ca52ee532087c7f097);\n}\n\n#[test]\nfn compute_l2_l1_hash() {\n    // All zeroes\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(0), 0, 0, L2ToL1Message::empty());\n    assert(hash_result == 0x2266ac2f9f0c19c015239ef5ea85862fc6fac00db73779b220a4d49c4856c2e1);\n\n    // Non-zero case\n    let message = L2ToL1Message { recipient: EthAddress::from_field(3), content: 5 };\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(1), 2, 4, message);\n    assert(hash_result == 0x0f24729168d4450a5681beafa5e3a899ac28bd17bf5a4877dab37bcd834e1634);\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/noir-protocol-circuits/src/crates/types/src/hash.nr" }, "207": { "source": "use dep::aztec::{\n    protocol_types::{address::AztecAddress, traits::{Deserialize, Serialize}},\n    note::{note_header::NoteHeader, note_interface::NoteInterface, utils::compute_note_hash_for_consumption},\n    oracle::{rand::rand, nullifier_key::get_nullifier_secret_key, get_public_key::get_public_key},\n    log::emit_encrypted_log, hash::pedersen_hash, context::PrivateContext\n};\n\nglobal VALUE_NOTE_LEN: Field = 3; // 3 plus a header.\n\n// docs:start:value-note-def\nstruct ValueNote {\n    value: Field,\n    owner: AztecAddress,\n    randomness: Field,\n    header: NoteHeader,\n}\n// docs:end:value-note-def\n\nimpl NoteInterface<VALUE_NOTE_LEN> for ValueNote {\n    fn serialize_content(self) -> [Field; VALUE_NOTE_LEN] {\n        [self.value, self.owner.to_field(), self.randomness]\n    }\n\n    fn deserialize_content(serialized_note: [Field; VALUE_NOTE_LEN]) -> Self {\n        ValueNote {\n            value: serialized_note[0],\n            owner: AztecAddress::from_field(serialized_note[1]),\n            randomness: serialized_note[2],\n            header: NoteHeader::empty(),\n        }\n    }\n\n    fn compute_note_content_hash(self) -> Field {\n        // TODO(#1205) Should use a non-zero generator index.\n        pedersen_hash(self.serialize_content(),0)\n    }\n\n    // docs:start:nullifier\n\n    fn compute_nullifier(self, context: &mut PrivateContext) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_consumption(self);\n        let secret = context.request_nullifier_secret_key(self.owner);\n        // TODO(#1205) Should use a non-zero generator index.\n        pedersen_hash([\n            note_hash_for_nullify,\n            secret.low,\n            secret.high,\n        ],0)\n    }\n\n    // docs:end:nullifier\n\n    fn compute_nullifier_without_context(self) -> Field {\n        let note_hash_for_nullify = compute_note_hash_for_consumption(self);\n        let secret = get_nullifier_secret_key(self.owner);\n        // TODO(#1205) Should use a non-zero generator index.\n        pedersen_hash([\n            note_hash_for_nullify,\n            secret.low,\n            secret.high,\n        ],0)\n    }\n\n    fn set_header(&mut self, header: NoteHeader) {\n        self.header = header;\n    }\n\n    fn get_header(self) -> NoteHeader {\n        self.header\n    }\n\n    // Broadcasts the note as an encrypted log on L1.\n    fn broadcast(self, context: &mut PrivateContext, slot: Field) {\n        let encryption_pub_key = get_public_key(self.owner);\n        emit_encrypted_log(\n            context,\n            (*context).this_address(),\n            slot,\n            Self::get_note_type_id(),\n            encryption_pub_key,\n            self.serialize_content(),\n        );\n    }\n\n    fn get_note_type_id() -> Field {\n        // TODO(#4519): autogenerate\n        // python -c \"print(int(''.join(str(ord(c)) for c in 'ValueNote')))\"\n        869710811710178111116101\n    }\n}\n\nimpl ValueNote {\n    pub fn new(value: Field, owner: AztecAddress) -> Self {\n        let randomness = rand();\n        let header = NoteHeader::empty();\n        ValueNote { value, owner, randomness, header }\n    }\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/aztec-nr/value-note/src/value_note.nr" }, "211": { "source": "// A contract used along with `Parent` contract to test nested calls.\ncontract Child {\n    use dep::std::option::Option;\n\n    use dep::aztec::{\n        context::{PrivateContext, PublicContext, Context}, log::emit_unencrypted_log,\n        state_vars::{public_state::PublicState, set::Set},\n        protocol_types::{abis::{function_selector::FunctionSelector, call_context::CallContext}, address::AztecAddress},\n        note::{note_getter_options::NoteGetterOptions, note_header::NoteHeader, utils as note_utils}\n    };\n    use dep::value_note::value_note::{ValueNote, VALUE_NOTE_LEN};\n\n    struct Storage {\n        current_value: PublicState<Field>,\n        a_private_value: Set<ValueNote>,\n    }\n\n    #[aztec(private)]\n    fn constructor() {}\n\n    // Returns a sum of the input and the chain id and version of the contract in private circuit public input's return_values.\n    #[aztec(private)]\n    fn value(input: Field) -> Field {\n        input + context.chain_id() + context.version()\n    }\n\n    fn check_sender(call_context: CallContext) {\n        assert(\n            call_context.msg_sender.eq(call_context.storage_contract_address), \"Sender must be this contract\"\n        );\n    }\n\n    // Returns a sum of the input and the chain id and version of the contract in private circuit public input's return_values. \n    // Can only be called from this contract.\n    #[aztec(private)]\n    fn valueInternal(input: Field) -> Field {\n        check_sender(inputs.call_context);\n        input + context.chain_id() + context.version()\n    }\n\n    // Returns base_value + chain_id + version + block_number + timestamp\n    #[aztec(public)]\n    fn pubGetValue(base_value: Field) -> Field {\n        let returnValue = base_value\n            + context.chain_id()\n            + context.version()\n            + context.block_number()\n            + context.timestamp();\n\n        returnValue\n    }\n\n    // Sets `current_value` to `new_value`\n    #[aztec(public)]\n    fn pubSetValue(new_value: Field) -> Field {\n        storage.current_value.write(new_value);\n        emit_unencrypted_log(&mut context, new_value);\n\n        new_value\n    }\n\n    #[aztec(private)]\n    fn privateSetValue(new_value: Field, owner: AztecAddress) -> Field {\n        let mut note = ValueNote::new(new_value, owner);\n        storage.a_private_value.insert(&mut note, true);\n        new_value\n    }\n\n    #[aztec(private)]\n    fn privateGetValue(amount: Field, owner: AztecAddress) -> Field {\n        let options = NoteGetterOptions::new().select(0, amount, Option::none()).select(1, owner.to_field(), Option::none()).set_limit(1);\n        let notes = storage.a_private_value.get_notes(options);\n        notes[0].unwrap_unchecked().value\n    }\n\n    // Increments `current_value` by `new_value`\n    #[aztec(public)]\n    fn pubIncValue(new_value: Field) -> Field {\n        let old_value = storage.current_value.read();\n        storage.current_value.write(old_value + new_value);\n        emit_unencrypted_log(&mut context, new_value);\n\n        new_value\n    }\n\n    // Increments `current_value` by `new_value`. Can only be called from this contract.\n    #[aztec(public)] \n    fn pubIncValueInternal(new_value: Field) -> Field {\n        check_sender(inputs.call_context);\n        let old_value = storage.current_value.read();\n        storage.current_value.write(old_value + new_value);\n        emit_unencrypted_log(&mut context, new_value);\n\n        new_value\n    }\n\n    #[aztec(public)]\n    fn setValueTwiceWithNestedFirst() {\n        let pubSetValueSelector = FunctionSelector::from_signature(\"pubSetValue(Field)\");\n        let _ret = context.call_public_function(context.this_address(), pubSetValueSelector, [10]);\n\n        storage.current_value.write(20);\n        emit_unencrypted_log(&mut context, 20);\n    }\n\n    #[aztec(public)]\n    fn setValueTwiceWithNestedLast() {\n        storage.current_value.write(20);\n        emit_unencrypted_log(&mut context, 20);\n\n        let pubSetValueSelector = FunctionSelector::from_signature(\"pubSetValue(Field)\");\n        let _ret = context.call_public_function(context.this_address(), pubSetValueSelector, [10]);\n    }\n}\n", "path": "/Users/jack-sw/Codes/aztec-packages/noir-projects/noir-contracts/contracts/child_contract/src/main.nr" } } }
