/* Autogenerated file, do not edit! */
/* eslint-disable */
import { Contract, ContractBase, DeployMethod, Point, loadContractArtifact, } from '@aztec/aztec.js';
import SlowTreeContractArtifactJson from '../artifacts/slow_tree_contract-SlowTree.json' assert { type: 'json' };
export const SlowTreeContractArtifact = loadContractArtifact(SlowTreeContractArtifactJson);
/**
 * Type-safe interface for contract SlowTree;
 */
export class SlowTreeContract extends ContractBase {
    constructor(instance, wallet) {
        super(instance, SlowTreeContractArtifact, wallet);
    }
    /**
     * Creates a contract instance.
     * @param address - The deployed contract's address.
     * @param wallet - The wallet to use when interacting with the contract.
     * @returns A promise that resolves to a new Contract instance.
     */
    static async at(address, wallet) {
        return Contract.at(address, SlowTreeContract.artifact, wallet);
    }
    /**
     * Creates a tx to deploy a new instance of this contract.
     */
    static deploy(wallet) {
        return new DeployMethod(Point.ZERO, wallet, SlowTreeContractArtifact, SlowTreeContract.at, Array.from(arguments).slice(1));
    }
    /**
     * Creates a tx to deploy a new instance of this contract using the specified public key to derive the address.
     */
    static deployWithPublicKey(publicKey, wallet) {
        return new DeployMethod(publicKey, wallet, SlowTreeContractArtifact, SlowTreeContract.at, Array.from(arguments).slice(2));
    }
    /**
     * Returns this contract's artifact.
     */
    static get artifact() {
        return SlowTreeContractArtifact;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2xvd1RyZWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvU2xvd1RyZWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsc0NBQXNDO0FBRXRDLG9CQUFvQjtBQUNwQixPQUFPLEVBSUwsUUFBUSxFQUVSLFlBQVksRUFJWixZQUFZLEVBT1osS0FBSyxFQUlMLG9CQUFvQixHQUNyQixNQUFNLGlCQUFpQixDQUFDO0FBRXpCLE9BQU8sNEJBQTRCLE1BQU0sK0NBQStDLENBQUMsU0FBUyxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFFakgsTUFBTSxDQUFDLE1BQU0sd0JBQXdCLEdBQUcsb0JBQW9CLENBQUMsNEJBQW9ELENBQUMsQ0FBQztBQUVuSDs7R0FFRztBQUNILE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxZQUFZO0lBQ2hELFlBQW9CLFFBQXFDLEVBQUUsTUFBYztRQUN2RSxLQUFLLENBQUMsUUFBUSxFQUFFLHdCQUF3QixFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3BELENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLE9BQXFCLEVBQUUsTUFBYztRQUMxRCxPQUFPLFFBQVEsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLGdCQUFnQixDQUFDLFFBQVEsRUFBRSxNQUFNLENBQThCLENBQUM7SUFDOUYsQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFjO1FBQ2pDLE9BQU8sSUFBSSxZQUFZLENBQ3JCLEtBQUssQ0FBQyxJQUFJLEVBQ1YsTUFBTSxFQUNOLHdCQUF3QixFQUN4QixnQkFBZ0IsQ0FBQyxFQUFFLEVBQ25CLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxDQUFDLG1CQUFtQixDQUFDLFNBQW9CLEVBQUUsTUFBYztRQUNwRSxPQUFPLElBQUksWUFBWSxDQUNyQixTQUFTLEVBQ1QsTUFBTSxFQUNOLHdCQUF3QixFQUN4QixnQkFBZ0IsQ0FBQyxFQUFFLEVBQ25CLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUMvQixDQUFDO0lBQ0osQ0FBQztJQUVEOztPQUVHO0lBQ0ksTUFBTSxLQUFLLFFBQVE7UUFDeEIsT0FBTyx3QkFBd0IsQ0FBQztJQUNsQyxDQUFDO0NBaURGIn0=