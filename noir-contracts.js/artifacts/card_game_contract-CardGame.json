{"transpiled":true,"noir_version":"0.31.0+6237d96a0bc23a5ed656e7ba172fb57facd9c807","name":"CardGame","functions":[{"name":"join_game","is_unconstrained":false,"custom_attributes":["aztec(private)"],"abi":{"error_types":{},"parameters":[{"name":"inputs","type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"aztec::protocol_types::transaction::tx_context::TxContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs"},"visibility":"private"},{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"cards_fields","type":{"kind":"array","length":2,"type":{"kind":"field"}},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"is_fee_payer","type":{"kind":"boolean"}},{"name":"max_block_number","type":{"fields":[{"name":"_opt","type":{"fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::option::Option"}}],"kind":"struct","path":"aztec::protocol_types::abis::max_block_number::MaxBlockNumber"}},{"name":"note_hash_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"key_validation_requests_and_generators","type":{"kind":"array","length":16,"type":{"fields":[{"name":"request","type":{"fields":[{"name":"pk_m","type":{"fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}],"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint"}},{"name":"sk_app","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"}},{"name":"sk_app_generator","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"}}},{"name":"note_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::note_hash::NoteHash"}}},{"name":"nullifiers","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::nullifier::Nullifier"}}},{"name":"private_call_requests","type":{"kind":"array","length":4,"type":{"fields":[{"name":"target","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"function_data","type":{"fields":[{"name":"selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_private","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::function_data::FunctionData"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"caller_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::caller_context::CallerContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::private_call_request::PrivateCallRequest"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"public_teardown_function_hash","type":{"kind":"field"}},{"name":"l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"fields":[{"name":"recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"content","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message"}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_encrypted_logs_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"note_hash_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::NoteLogHash"}}},{"name":"encrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"randomness","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::EncryptedLogHash"}}},{"name":"unencrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::LogHash"}}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"aztec::protocol_types::transaction::tx_context::TxContext"}}],"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"},"visibility":"public"}},"bytecode":"","debug_symbols":""},{"name":"on_game_joined","is_unconstrained":true,"custom_attributes":["aztec(public)","aztec(internal)"],"abi":{"error_types":{},"parameters":[{"name":"inputs","type":{"fields":[{"name":"args_hash","type":{"kind":"field"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs"},"visibility":"private"},{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"player","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"deck_strength","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"}],"return_type":null},"bytecode":"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","debug_symbols":"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"},{"name":"on_card_played","is_unconstrained":true,"custom_attributes":["aztec(public)","aztec(internal)"],"abi":{"error_types":{},"parameters":[{"name":"inputs","type":{"fields":[{"name":"args_hash","type":{"kind":"field"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs"},"visibility":"private"},{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"player","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"card_as_field","type":{"kind":"field"},"visibility":"private"}],"return_type":null},"bytecode":"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","debug_symbols":""},{"name":"on_cards_claimed","is_unconstrained":true,"custom_attributes":["aztec(public)","aztec(internal)"],"abi":{"error_types":{},"parameters":[{"name":"inputs","type":{"fields":[{"name":"args_hash","type":{"kind":"field"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs"},"visibility":"private"},{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"player","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"cards_hash","type":{"kind":"field"},"visibility":"private"}],"return_type":null},"bytecode":"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","debug_symbols":""},{"name":"compute_note_hash_and_optionally_a_nullifier","is_unconstrained":true,"custom_attributes":[],"abi":{"error_types":{},"parameters":[{"name":"contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"nonce","type":{"kind":"field"},"visibility":"private"},{"name":"storage_slot","type":{"kind":"field"},"visibility":"private"},{"name":"note_type_id","type":{"kind":"field"},"visibility":"private"},{"name":"compute_nullifier","type":{"kind":"boolean"},"visibility":"private"},{"name":"serialized_note","type":{"kind":"array","length":3,"type":{"kind":"field"}},"visibility":"private"}],"return_type":{"abi_type":{"kind":"array","length":4,"type":{"kind":"field"}},"visibility":"public"}},"bytecode":"","debug_symbols":""},{"name":"view_game","is_unconstrained":true,"custom_attributes":[],"abi":{"error_types":{},"parameters":[{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"players","type":{"kind":"array","length":2,"type":{"fields":[{"name":"address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"deck_strength","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"points","type":{"kind":"integer","sign":"unsigned","width":64}}],"kind":"struct","path":"game::PlayerEntry"}}},{"name":"rounds_cards","type":{"kind":"array","length":4,"type":{"fields":[{"name":"strength","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"points","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"cards::Card"}}},{"name":"started","type":{"kind":"boolean"}},{"name":"finished","type":{"kind":"boolean"}},{"name":"claimed","type":{"kind":"boolean"}},{"name":"current_player","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"current_round","type":{"kind":"integer","sign":"unsigned","width":64}}],"kind":"struct","path":"game::Game"},"visibility":"public"}},"bytecode":"H4sIAAAAAAAA/+1dS2xcVxk+M5k4EzseJ44fseO0N++4SZp5+JmHM04akjR9SyA2PJzYbkPbGDlOQxFIINjwWLQrkNgCGxBdgYBVK4pAIIpgAaKIsgFRViAeOwj4XJ8v8/nPuXMfc+7gi3Kl0Zx78p//+/7v/HPuf+7MdXJq7di5+sqZ9mbzjnM+0Fc37+XWjopDX+UtxLGD2vnV16bVV8HE1mH6i8Zmi2lvXX11rr66Vl/bVl/dq6+Ssekx79vN+w7z3kv6+U4LQig+doaQCiPSYwjsMMDa36QF7wadDJn32eXluZe96zfmFz7mLd1a8ZYWvatLt27M3+SBt5IO/ETSgZ9LOvCVpAO/lHTgV5MOfJ1OkAKXmw/5QVKsn8TH+llSrF/RyYh5n1tZWXjxoyveypI3Nz/v3b6+8py39NLC8uILS7d57Nvxef4uKc8/xMf6U1Ksv7SgyT+SgvbkYwfYm0+INRQfayQp1gEaGFfMI/F5Hk3Ksxofazwp1pkWNDmXFPQD8QP8cFKsZ+NjfSQp1nILYr4Un+fLSXl+Kj7WZ5JifaEFTV5JCvqN+AF+KynWt+NjfTcp1ustiPlmfJ4/SsrzrfhYv0iK9ZsWNHknKei7SQf+LenAfyUd2LEpxsC7df+cGVUkT55ytLmaqox1kHO5t8kzcLGB3YV/o369xzlMXV3OuZYr2u82137L5Qntt+Ter8+3x73fsp4nbFg3G9/A2UZzgM1szmFMjJ0zL+Cgv0Bt3hvDDnogh8C927yU4C7HdYlxJbLppnE9Yhzb60Nrt9W0U8rZyZRydup+zkaPKW7O7iVbmXu4D/S/zNlB09Y+e8z620F922lNRt8O01ekvl5zspX6dpq+ToopZ/rwWe4kPs8urJx7Yena80/cevHqwjJfQTZRVByRPLS33oa380s3Vpbnrq3Mzs8vL9xcdwW13YO7E+Cxkzw+N3f9xuV5HrU5maf3LSzfvL50Y91VPaInvdZtoTbscF9QH55ylvPVdddoC0fg4eB1sOieTyWlOMvabyfp6chvTWvVJbTKC61KZNNJ+jm/jpg1bKvgw59bfcTlvGUDcE4zL1K47lb1etxJum4T+nJcWNcd5mWZ520z4XUTLq4ZDq+h/vUba37B+AaPHsLuda557Zp/TVPrj2ZrWS/x2eGcz9pa5j7OtZzdSdzd+B3317I+odV2oVWJbJhDXwr65QgXvnHeZ8F2p8XkmMbuj6BFv4VPf5u16Ldgu9NiYlFjD0TQYsDCZ6DNWgxYsB3mRVVjD0bQYtDCZ7DNWgxasB3mhY+9K4IWuyx8drVZi10WbIdaTGrsoQhaDFn4DLVZiyELtkMtxjX2cAQthi18htusxbAF250WVb8e2h1Bi90WPrvbrMVuC7bDtdOvL0YiaDFi4TPSZi1GLNgOPyPXNPaeCFrssfDZ02YtgBeXc38GOfdlkPPwBuBcFG032DV//XwgghYPWPg80GYtgBeX8/AG4FwUbTfYEwsa+8EIWjxo4fNgm7UAXlzO/Rnk3JdBzsMZ5DyYQc4j9zm3hfNGWDeKou0Ge9LfD3sRtPAsfLw2awG8uJyHNgDnomi7wZ7w73/ujaDFXgufvW3WYq8F2+Ee3q9h9kXQYp+Fz742awG8uJyHM8h5ZwY592WQc38GOQ9kkPNgBjnvyiDnoQxyzuL6vDuDnEcyyDmL63MWr4NZzOeNsG4URdsN9oT/S839EbTYb+Gzv81a7LdgO9xv+9+5HoigxQELnwNt1gJ4cTnvziDnvgxyHs4g5/u50R7OgxnkPJBBzvfXjWSci6LtBntiQmMfjKDFQQufg23WAnhxOQ9kkHN/BjnvyyDn4Q3AuSjabrBrPvahCFocsvA51GYtgBeX894NwLmgGs+GXM2lyac23yX4QDMlOCrBsYvavaQZnlmvK3fPcfD88DPxR5zrUbbmOM6PpIpdu6b9PpRCTNrvUfd+/d+cHTO+8AzyUYtWx00753iejpHfHOGgv0DtD+UatrCDHlgPwF0/+zVq2sxdjjskxpXIZpTGHRXjcI651tq9lz7naeRWlLzWOuCzfMa851XjuTQ8gYznbPm87oRneTGlz/Vil2qsqYrmRglNlNCE1zSHfCr4u4X6uLmytDz37MIzC3N3H6rOqXv/piL/G1O/QzYF6uc2P8a6hdqbLLZ3mrwXabyn3H6cDxMHj85TfqzWf2wL8WMZk4+fFshmyYgvH6HUB/sCT8wjfHZTTIV0Y6uk9XHScY4KzcD/CMUGm5dCNBsN0Iwfx4VWo6RZCrFVU7oML/KlAJqB/0OkGWw+GaLZ0QDNjpBm0Aq2eYGFsXl172XpjukvCB+e8AOMeogfyUXbp6R1Tfs95t7vIpcBmEPw57IDNp8PmUNZUpSEdt2kF2xTim1M+304Jc1OCM3A/2HSDDavhmh2IkCzY6QZtDpBmqUQ27j2W05Js4rQDPzLpBlsvhyiWSVAs4dJM2gF2zxhHaexebLBv+Mzflz48IQfYNRD/Egu2j4lrf0/V1Z179efw5rxhTkEf+AVyOZrIXNYo3NPNeYQPrtJL9gWqe05i63q/2mFsZT8jjv3W650keasqRKa4kBsuq7uJ131oKqw15ynUuCs/U679+tv208aX8jLaRG3xj7VCNlpnX+S/OYIB/0Fan+ftu2wgx6YB3DX+T9h2rDVawn+9PsExRbFX4ls+M/HT4txOEcOaE1fo+08r4V10y63dvg6jgseOK8QV3kNwR6E14cJsq875AfNCoLLBPXD5o2QtW8yII4xi683I/pSav288/4MXGHLecTzadMYe5YaYU4RzyAtYPPTEP5TAXhjFl9vRfSFeKAF77vAFbZ5arMWqaxXlbX1imsSj/Cnm8Qi54vXng5hw/MDm19HrKnkXo7nPc5n4LcxPwPAs30G3kn4GeC9YyufAexfWIsa8QzSAjZ/jFgLSbwxi693I/pCPNCC92CyrtJayPXWU+vjQq7CjnNVrt22XEUsMlcxtkA2f20SY5HGesrZGj+ZTg24VjdjDjaL2Hl+YfPPkPnlus9TjboZPnl+q6SZ+z3BWn2bVj1+0rnftbp5TN2rqRKa4kBstrp5TNhrzmdS4Kz9zrj361+HzhpfyMsZETd/3e66njpLftk3+gvU7szfywF6YB7AXec/6lzY6uGnTfsUxRbFX4lsThPnGTEO58gBrel/2lA3nxQ8cB6lbq6SDWJrdj2DzXYzH0Fr1OkAvJrF186IvpRaPz+2+ha2PN9R61vW4hTxDNICNsMh/E8F4NUsvvZE9IV4oIWtvuU9I9ph13bYTTfBlLpqG+R8h7BhHWFzMGbuoIbj+amQXx7D8wOb0RC8sLqXfR2L6Eup9fPDdajUj+8bnqaxNi1Qw7EWfO8tSAvY1EL4VwPwahZfExF9IR5owXXoaRGPdon1K0gL5CrsOFflWih15fq4Q9jw/RrYzDSJsSg41k273NoxlU5NtVaHYg4wv+DP8wub8yHzy3WUpxp1KHzyWsT34dK6z5pWfZtGTdel1u/ToKkSmuJAbLY6tCbsuWZzyVn7nXXv169DzxlfyMtZEbfGPt8I2Wn9dI785ggH/QVqv5/qUNhBD8wDuOv8R00IWz0cNe0MxRbFX4lsuHaeFeNwXjfvWtPH8w2stOrQM4IHzqPUoWNkw/V/UO0Fmw+GrFFnA/CqFl9zEX0ptX5+bHUobHm+o9ahrMUM8QzSAjbPhfCfCcCrWnw9H9EX4oEWtjoUtnlqh9WhsJtugil15XWhQ9iwjrC5mbAuTJqrt2Pmqqx72dfHE+aq7X5oklyV9ye5HmimBWw+HbG2CKp72ddnY9Yp0MJ2PxS22qVcvzxlz1XYca7KtdCWq4hF5irGcq39xZA69Cxh1U273Nox3c7fEYC/7XcEr4bMb9DvCODz/+V3BHXnftP/HcH5FDhrv4+49+vXoReML+TlIyJujf2eRshO66cL5DdHOOgvUPvrVIfCDnpgHsBd5z9qQtjq4ahpZym2KP5KZMO18yNiHM6RA1rTr7ShDq0LHjiP8zsC3hc0u57B5psha9S5ALwxi6/XIvpSav382OpQ2OapneT7/lniGaQFbL4Twn82AG/M4ut7EX0hnmbf98M2T+2wazvspptgSl15L9chbFhH2LzR4v3JuLn6w5i5avteHjY/Tpirtjo0Sa62+r38zyPWFlG+l/9lzDol6vfyddMOy1XYca7WBaYtV+X38rDBWK613w6pQ88RFsaXWzvm2vm9PPjbvpf/fcz73ahD4dP2vXyesHhO8mSDf8dviaUPbZ+SRlfTvBfNdYFH/PnzC5s/h2gv752VhHbdpBffi6tZtMyTDf4d2ksf0D4Fja6lVOcu2upc8Ace15p/D9H+Ap17qqE9fHaTXrDNq3vrQ2h/QXCB9tIHtE9Bo3mu8x369bW/aHzJPQbwCmTz7xDtL9K5pxrac+0PvWCbV/fuLeqm/6LgAu2lD22fkkYL2u8l93597S8bX9Ae/IFXIJst5mHSIO0v07mnGtrDZzfpBds82bGWuh/Ph+LfoT3s+E8RFMmnp9w9O9Kl1j+3iliViFWJuIoqvf9uPIU4/b3+JRHTYRFTiWz4md0UcrNiyyecX6J5iMO5kEHOoxnkfDSDnI9nkPOJDcBZYz/qHnuqS2BDHyX44Hg0ZS1SitNfd68ou8bAK5HNFMV5JYU4c4QL3zi/QvMQh/N4BjmfyiDnkxnkPJNBzmcyyHk2g5zrG4BzF/Udpr4rxBd9j5n2Zep73LQvUd8Tpl2hvidNm+/XP2Xa56nvadO+QH3PmPZF6jPb5Lvcdd8mS2yoiR+jvs2m/Tj1dZj2E9SHPcCT1Fc07aeoD9/DPE19naYN7trmv+Dbh4WEmwAA","debug_symbols":"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"},{"name":"start_game","is_unconstrained":true,"custom_attributes":["aztec(public)"],"abi":{"error_types":{},"parameters":[{"name":"inputs","type":{"fields":[{"name":"args_hash","type":{"kind":"field"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::context::inputs::public_context_inputs::PublicContextInputs"},"visibility":"private"},{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"}],"return_type":null},"bytecode":"","debug_symbols":""},{"name":"buy_pack","is_unconstrained":false,"custom_attributes":["aztec(private)"],"abi":{"error_types":{},"parameters":[{"name":"inputs","type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"aztec::protocol_types::transaction::tx_context::TxContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs"},"visibility":"private"},{"name":"seed","type":{"kind":"field"},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"is_fee_payer","type":{"kind":"boolean"}},{"name":"max_block_number","type":{"fields":[{"name":"_opt","type":{"fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::option::Option"}}],"kind":"struct","path":"aztec::protocol_types::abis::max_block_number::MaxBlockNumber"}},{"name":"note_hash_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"key_validation_requests_and_generators","type":{"kind":"array","length":16,"type":{"fields":[{"name":"request","type":{"fields":[{"name":"pk_m","type":{"fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}],"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint"}},{"name":"sk_app","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"}},{"name":"sk_app_generator","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"}}},{"name":"note_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::note_hash::NoteHash"}}},{"name":"nullifiers","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::nullifier::Nullifier"}}},{"name":"private_call_requests","type":{"kind":"array","length":4,"type":{"fields":[{"name":"target","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"function_data","type":{"fields":[{"name":"selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_private","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::function_data::FunctionData"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"caller_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::caller_context::CallerContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::private_call_request::PrivateCallRequest"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"public_teardown_function_hash","type":{"kind":"field"}},{"name":"l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"fields":[{"name":"recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"content","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message"}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_encrypted_logs_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"note_hash_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::NoteLogHash"}}},{"name":"encrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"randomness","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::EncryptedLogHash"}}},{"name":"unencrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::LogHash"}}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"aztec::protocol_types::transaction::tx_context::TxContext"}}],"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"},"visibility":"public"}},"bytecode":"","debug_symbols":""},{"name":"play_card","is_unconstrained":false,"custom_attributes":["aztec(private)"],"abi":{"error_types":{},"parameters":[{"name":"inputs","type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"aztec::protocol_types::transaction::tx_context::TxContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs"},"visibility":"private"},{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"card","type":{"fields":[{"name":"strength","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"points","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"cards::Card"},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"is_fee_payer","type":{"kind":"boolean"}},{"name":"max_block_number","type":{"fields":[{"name":"_opt","type":{"fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::option::Option"}}],"kind":"struct","path":"aztec::protocol_types::abis::max_block_number::MaxBlockNumber"}},{"name":"note_hash_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"key_validation_requests_and_generators","type":{"kind":"array","length":16,"type":{"fields":[{"name":"request","type":{"fields":[{"name":"pk_m","type":{"fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}],"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint"}},{"name":"sk_app","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"}},{"name":"sk_app_generator","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"}}},{"name":"note_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::note_hash::NoteHash"}}},{"name":"nullifiers","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::nullifier::Nullifier"}}},{"name":"private_call_requests","type":{"kind":"array","length":4,"type":{"fields":[{"name":"target","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"function_data","type":{"fields":[{"name":"selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_private","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::function_data::FunctionData"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"caller_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::caller_context::CallerContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::private_call_request::PrivateCallRequest"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"public_teardown_function_hash","type":{"kind":"field"}},{"name":"l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"fields":[{"name":"recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"content","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message"}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_encrypted_logs_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"note_hash_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::NoteLogHash"}}},{"name":"encrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"randomness","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::EncryptedLogHash"}}},{"name":"unencrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::LogHash"}}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"aztec::protocol_types::transaction::tx_context::TxContext"}}],"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"},"visibility":"public"}},"bytecode":"","debug_symbols":"7N3fjuTqklj3dznXc8E/8ZH89CqGYcg+kiFAGBmWfDWYd3eevYtZVdM5zew9KzuSjOUbQwJ3ivWLU5lcUZ3kv/zt7//l//z//u//47/983/9H//zb//pf/uXv/33//F//ef/9d/+xz/f/k//8rdx/eP/7n/+P//5n//xf/yf/+s//7//62//afinv/2Xf/777f//r//0t//63/77f/nbf5rn9q//9MNx0zL2j0OnJcb70eM0Pjh6XmP6OHrehn5wdI8eH0f31ub70VMM//q//9Pfxu2sJ95/34nHuI4fR8c0j/+xE5+G/8iJz9s03A3bcj+6xx+vPb7wtadHrz21tu2Q7Xbgz/9f6PN+cN+2T8aIB8eObT+ZsX8eO039L5DP5z31+I+f+jgs834+4zQcnPyz/2tpff+dWIbvIP847XbO017OedrrOU97OzrtZWhv+mv58NPn9qnSPj9Vjk69Tdt+dJuH5cvRj05+7sv+k869t4Ojp/kTMb5+1P7jR/nx821edpmI4cvn2/jHDzsPlX7YsdIPO1X6YedKP2xU+mFbpR92qfTDrpV+2K3SD1vpCioqXUFFpSuoqHQFFZWuoCIq/bCVrqCi0hVUVLqCikpXUFHpCqpVuoJqla6gWqUrqFbpCqpFpR+20hVUq3QF1SpdQbVKV1Ct0hXUUukKaql0BbVc6woqhu3+w6792w/74Lzn2O7nvY0HR9/+n1/vZ9LGg/Met3V/7bEfmqzT/g8G1jgS2db9H8L14fMfZkyPOMZxW/aTmKb568H/GP21ricd/S+MPhx91dFfqzUc/S+M/lrl5eh/YfTX6lBH/wujv1aVO/pfGP21dhSO/vnRr9fa2Dj6Xxj9tfZXjv4XRu82r+zo3eaVHX04+qqjd5tXdvRu88qO3m1e2dG7zSs7erd5VUe/uc0rO3q3eWVH7zav7Ojd5pUdfTj6qqN3m1d29G7zyo7ebV7Z0bvNKzt6t3lVR9/d5pUdvdu8sqN3m1d29G7zyo4+HH3V0bvNKzt6t3llR+82r+zo3eaVHb3bvKqjHwfXeXVn7z6v7uxd6NWdvRu9urMPZ1929u706s7epV7d2bvVqzt713p1Z+9er+zsR/d6dWfvXq/u7N3rvcPs1/2xJdv0XeSPGbl/e/8ZhTN6+xm5z3r/Gbl3eoMZbfcT6cP844zcD73/jNzjvP+M3Le8/Ywm9yLPzqjN834mbfvxk31yy0BJ2uyUpGVNSYaST0ou43A3aduPklYqJWlLUpIWHyXpNf+zknOM+5nM0X+QnL0ypyS9MqckvTKnJL0ypyRDSUjSK3NK0itzStIrc0rSv5hQkjYOJBk2DiVp41CSNs6zkpf716JhldWdfTj7srO3fOvO3lavO3u3C3Vn7z6k7uzd4JSdfXPnVHf2bsnqzt69Xt3Zu9erO/tw9mVn716v7uzd69WdvXu9urN3r1d39u71ys5+ca9Xd/bu9erO3r1e3dm716s7+3D2ZWfvXq/u7N3r1Z29e726s3evV3f27vXKzn51r1d39u716s7evV7d2bvXqzv7cPZlZ+9er+7s3evVnb17vbqzd69Xd/bu9crOfnOvV3f27vXqzt69Xt3Zu9erO/tw9mVn716v7uzd69WdvXu9urN3r1d39u71ys6+u9erO3v3enVn717vHWa/7o9n3abvIn/MyP3b+88onNHbz8h91vvPyL3TG8xou59IH+YfZ+R+6P1n5B7n/WfkvuXdZzQN7kWenVGb5/1M2tZ+lHTLQEna7JSkZU1JhpLPSg7Dp+Tyo6SV+qzkMt4ll7b9KGlLUpIWHyVpl1GS1tNf+MRZWv9BcvTK/FnJnz+Ffhq9MqckvTKnJENJSNIrc0rSK3NK0itzStIrc0rSK3NIcvKvD5SkjUNJ2jiUpI1DSYaSkKSNQ0naOJSkjUNJ2jiUpI0DSc42DiVp41CSNg4laeNQkqEkIxn+dlOS/nZTkv52U5JuMChJNxiUpBsMStINBiXpBgOSbG4wKEk3GJSkjUNJ2jiUZCgJSdo4lKSNQ0naOJSkjUNJ2jiQ5GLjUJI2DiVp41CSNg4lGUpCkjYOJWnjUJI2DiVp41CSNg4k6XPunpa82n3wJ59zV3j2XmnWnb3XxnVn79V83dnbH3VnbzGVnb3PuSs8e//yVnf2/q2w7uzd69WdfTj7srN3r1d39u716s7evV7d2bvXqzt793pVZz/7nMbCs3evV3f27vXqzt69Xt3Zh7MvO3v3enVn716v7uzd69WdvXu9urN3r1d29qN7vbqzd69Xd/bu9erO3r1e3dmHsy87e/d6dWfvXq/u7N3r1Z29e726s3evV3b2k3u9urN3r1d39u716s7evV7d2YezLzt793p1Z+9er+7s3evVnb17vbqzd69Xdvaze726s3evV3f27vXqzt693jvMfh0+Dt6m7yJ/zCic0dvPyD3Z+8/Ifdb7z8i90xvMaLufSB/mH2fkfuj9Z+Qe5+1nFO5b3n9G7kWenVGb5/1M2vbjJ3u4ZaAkbXZKMpSEJO3fZyWXcbibtO1HSSuVkrQlKUmLj5K0y57+xBm+SPYfJJtX5s9K/vzZ6XPzypyS9MqckgwlIUmvzClJr8wpSa/MKUmvzClJr8whycW/a1CSNg4laeNQkjYOJRlKQpI2DiVp41CSNg4laeNQkjYOJLnaOJSkjUNJ2jiUpI1DSYaSkKSNQ0naOJSkjUNJ2jiUpI0DSW42DiVp41CSNg4laeNQkqEkJGnjMJLhs7gwSf83SUna3ZSk3U1J2t2UpN0NSfp8HUzS7qYk7W5K0u6mJENJSNLGoSRtHErSxqEkbRxK0saBJH3WACZp41CSNg4laeNQkqEkJGnjUJI2DiVp41CSNg4laeNAkt7fG5O0cSBJ/9Xf05JXe9ZX+O8UC8/e+qk7e3ut7uwtzLqzt4nrzt6KLzv77t6h7uzdlNSdvX+/rjt793p1Zx/Ovuzs3evVnb17vbqzd69Xd/bu9erO3r1e1dm3wb1e3dm716s7e/d6dWfvXq/u7MPZl529e726s3evV3f27vXqzt69Xt3Zu9crO/vRvV7d2bvXqzt793p1Z+9er+7sw9mXnb17vbqzd69Xd/bu9erO3r1e3dm71ys7e5/jUnj27vXqzt69Xt3Zu9erO/tw9mVn716v7uzd69WdvXu9urN3r1d39u71ys7eZ5cVnr17vbqzd69Xd/bu9d5h9uvwcfA2fRf5Y0bhjN5+Ru7J3n9G7rPef0bund5gRtv9RPow/zgj90PvPyP3OG8/I5+jeIIZuRd5dka3ltzPpG0/frKHWwZK0manJENJSNL+fVZyGYe7Sdt+lLRSKUlbkpK0+ChJu+zpT5zhi2T/QbJ5Zf6s5M+fnd6aV+aUpFfmlGQoCUl6ZU5JemVOSXplTkl6ZU5JemUOSS7+XYOStHEoSRuHkrRxKMlQEpK0cShJG4eStHEoSRuHkrRxIMnVxqEkbRxK0sahJG0cSjKUhCRtHErSxqEkbRxK0sahJG0cSHKzcShJG4eStHEoSRuHkgwlIUkbh5Fc/O4DJumVOSXplTkk2bwypyS9MqckvTKnJL0ypyRDSUjSK3NK0r8+UJI2DiVp41CSNg4k6bdIMEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweS9FskmKSNQ0naOJSkjUNJhpKI5Oodj5+WvNqzvlbv0Vx49hZ53dm7Q6g7e7cedWfvnqbs7P0XwoVn7y6s7uzd3tWdvfvGurMPZ1929u716s7evV7d2bvXqzt793p1Z+9er+zs/VZM4dm716s7e/d6dWfvXq/u7MPZl529e726s3evV3f27vXqzt69Xt3Zu9crO3u/CVp49u716s7evV7d2bvXqzv7cPZlZ+9er+7s3evVnb17vbqzd69Xd/bu9crO3mdoFp69e726s3evV3f27vXqzj6cfdnZu9erO3v3enVn716v7uzd69WdvXu9srPv7vXqzt69Xt3Zu9erO3v3enVnH87+DWa/Dh8Hb9N3kT9m5P7t/Wfknuz9Z+Q+6/1n5N7pDWa03U+kD/OPM3I/9O4z2gb3OO8/I/ct7z8j9yLPzqjN834mbWs/SrploCRDSUjSsqYk7d9nJZdxuJu07UdJK5WStCUpSYsPkhztsqc/cYYvkv1HSa/Mn5X8+bPTt9Erc0oylIQkvTKnJL0ypyS9MqckvTKnJL0yhyQnr8wpSf+uQUnaOJSkjUNJhpKQpI1DSdo4lKSNQ0naOJSkjQNJzjYOJWnjUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVp40CSYeNQkjYOJWnjUJI2DiUZSkKSNg4laeMwkt3PbkzSz25K0s9uStLPbkrSz25K0s9uStL9JCXpfpKSdD8JSTb3k5SkjUNJ2jiUpI1DSYaSkKSNQ0naOJSkjUNJ2jiUpI0DSS42DiVp41CSNg4laeNQkqEkJGnjUJI2DiVp41CSNg4jOQ7+ej9NebWHfd2G7ztS4eH7Jlp4+O626g5/dR1XePhuEAsP36Vn4eG7py08/HD4dYfvNrzw8N3wFR6+G77Cw3fDV3j4bvjqDn9zw1d4+G74Cg/fDV/h4bvhKzz8cPh1h++Gr/Dw3fAVHr4bvsLDd8NXePhu+OoOv7vhKzx8N3yFh++Gr/Dw3fAVHn44/LrDd8NXePhu+AoP3w1f4eG74Ss8fDd8ZYc/Dm74Cg/fDV/h4bvhKzx8N3yFhx8Ov+7w3fAVHr4bvsLDd8NXePhu+AoP3w1f3eGPbvgKD98NX+Hhu+ErPHw3fIWHHw6/7vDd8BUevhu+dxj+OnwcvE3fRf4ckpu4EwzJjdkJhuRm6/2HNLmBeoMhbfcT6cP8YEhuik4wJDc6JxiSm5cTDCkc0pNDavO8n0nbHn28u2/AKK13jNLGxigt4Wcpl3G4m7TtAaW9SlHOViVGafthlBba0x87wxfK/oAypHyS8uD56+PsJTpG6SU6RuklOkbpJTpG6SU6RRleomOUXqJjlF6iY5T+qQOjDCkpSmsHo7R2MEprB6O0djBKa4eibNYORmntYJTWDkZp7WCUISVFae1glNYORmntYJTWDkZp7VCUi7WDUVo7GKW1g1FaOxhlSElRWjsYpbWDUVo7GKW1A1FOPs+No/QXHKP0FxyjdJ0BUc4+B4ujdJ2BUbrOwChdZ2CUISVF6ToDo7R2MEprB6O0djBKa4ei9JkgHKW1g1FaOxiltYNRhpQUpbWDUVo7GKW1g1FaOxiltUNRev95jtLawSitHYzS2oEow++DP015uYeHhd9grzx8P9oLD9+LkcLD9/Kp8PDD4dcdvgv5wsP3TwiFh+8fPQoP3z/TFB6+G766w/euLZWH74av8PDd8BUevhu+wsMPh193+G74Cg/fDV/h4bvhKzx8N3yFh++Gr+7wVzd8hYfvhq/w8N3wFR6+G77Cww+HX3f4bvgKD98NX+Hhu+ErPHw3fIWH74av7vA3N3yFh++Gr/Dw3fAVHr4bvsLDD4dfd/hu+AoP3w1f4eG74Ss8fDd8hYfvhq/u8LsbvsLDd8NXePhu+AoP3w1f4eGHw687fDd8hYfvhq/w8N3wFR6+G77Cw3fD9w7DX4ePg7fpu8g/htQGN3EnGJIbsxMMyc3WCYbkBuoNhrTdT6QP84MhhUN6/yG50TnBkNy8nGBIbkieHVKb5/1M2vbo4919A0ZpvVOUo42NUVrCz1Iu43A3adsDSnsVo7QqMcqQkqK00J7+2Bm+UPYHlF6iP0t58Pz1NnqJjlF6iU5RTl6iY5ReomOUXqJjlF6iY5QhJUXpJTpG6Z86MEprB6O0djBKa4einK0djNLawSitHYzS2sEoQ0qK0trBKK0djNLawSitHYzS2qEow9rBKK0djNLawSitHYwypKQorR2M0trBKK0djNLawSitHYqyWTsYpbUDUa5+2YSjtHYwypCSorR2MEprB6O0djBKawejtHYoSr+3w1FaOxiltYNRWjsYZUhJUVo7GKW1g1FaOxiltYNRWjsUpd/b4SitHYzS2sEorR2MMqSkKK0djNLawSitHYzS2sEorR2IcvNpsU9TXu7hYZtPi608fC84Cw/fS+TCw/eivvDwzZDCwzecyg6/+xTaysP3T3GFh+8fDwsP3w1f4eGHw687fDd8hYfvhq/w8N3wFR6+G77Cw3fDV3f4PgO78vDd8BUevhu+wsN3w1d4+OHw6w7fDV/h4bvhKzx8N3yFh++Gr/Dw3fDVHb634qs8fDd8hYfvhq/w8N3wFR5+OPy6w3fDV3j4bvgKD98NX+Hhu+ErPHw3fHWH7+1nKw/fDV/h4bvhKzx8N3yFhx8Ov+7w3fAVHr4bvsLDd8NXePhu+AoP3w1f3eGHG77Cw3fDV3j4bvgKD98N3zsMfx0+Dt6m7yJ/Dikc0vsPyY3ZCYbkZusEQ3ID9QZD2u4n0of5wZDcFJ1gSG503n9Izc3LCYbkhuTZIbV53s+kbQ8+3pv7BozSescoQ0qK0hJ+lnIZh7tJ2x5Q2qsYpVWJUdp+GKWF9vTHzvCFsv9IuXiJ/izlwfPX++IlOkbpJTpGGVJSlF6iY5ReomOUXqJjlF6iY5ReolOUq3/qwCitHYzS2sEorR2MMqSkKK0djNLawSitHYzS2sEorR2KcrN2MEprB6O0djBKawejDCkpSmsHo7R2MEprB6O0djBKa4ei7NYORmntYJTWDkZp7WCUISVFae0wlNPoxRBG6cUQR+nFEEbpxRBG6cUQRhlSUpReDGGUrn4xSle/GKWrX4zS2oEop8HawSitHYzS2sEorR2MMqSkKK0djNLawSitHYzS2sEorR2KcrR2MEprB6O0djBKawejDCkpSmsHo7R2IMrZP0g8TXm1h4fdhm9UlB1++EefysM33AoP39QsPHzjuPDww+HXHb4LiMLDd2VSePj+Sbvw8N3wFR6+G766w/cfOlQevhu+wsN3w1d4+G74Cg8/HH7d4bvhKzx8N3yFh++Gr/Dw3fAVHr4bvrrDn9zwFR6+G77Cw3fDV3j4bvgKDz8cft3hu+ErPHw3fIWH74av8PDd8BUevhu+usOf3fAVHr4bvsLDd8NXePhu+AoPPxx+3eG74Ss8fDd8hYfvhq/w8N3wFR6+G766ww83fIWH74av8PDd8BUevhu+wsMPh193+G74Cg/fDV/h4bvhKzx8N3zvMPx1+Dh4m76L/DkkN3HvP6TmxuwEQ3KzdYIhuYF6gyFt9xPpw/xgSG6KTjCkcEjvPyQ3LycYkhuSZ4fU5nk/k7Y9+nh334BRWu8YpY1NUS6W8LOUyzjcTdr2gNJexSitSozS9sMoQ8pnP3aGL5T9AaWX6M9SHjx/PRYv0TFKL9ExSi/RKcrVS3SM0kt0jNJLdIzSS3SMMqSkKP1TB0Zp7WCU1g5Gae1glNYORblZOxiltYNRWjsYpbWDUYaUFKW1g1FaOxiltYNRWjsYpbVDUXZrB6O0djBKawejtHYwypCSorR2MEprB6O0djBKawejtHYgyjZYOxDl6sP8OErfKzFK3yspSh/bxlG6GcIo3QxhlG6GMMqQkqJ0M4RRuhnCKK0djNLawSitHYrSR9hwlNYORmntYJTWDkYZUlKU1g5Gae1glNYORmntYJTWDkXp4wc4SmsHo7R2MEprB6MMKRnK7v0rn6a83MPD+mLqFh6+cV54+K4TCg/fBUjh4buyqTt8bxtcefiuxQoP30Ve4eG7eiw8/HD4dYfvhq/w8N3wFR6+G77Cw3fDV3j4bvjqDt9b5Vcevhu+wsN3w1d4+G74Cg8/HH7d4bvhKzx8N3yFh++Gr/Dw3fAVHr4bvrrD9/EwlYfvhq/w8N3wFR6+G77Cww+HX3f4bvgKD98NX+Hhu+ErPHw3fIWH74av6vDnwUeiVR6+G77Cw3fDV3j4bvgKDz8cft3hu+ErPHw3fIWH74av8PDd8BUevhu+usMf3fAVHr4bvsLDd8NXePhu+AoPPxz+Gwx/HT4O3qbvIn8OyU3cCYbkxuwEQ3KzdYIhuYF6gyFt9xPpw/xgSG6K3n9IkxudEwzJzcsJhuSG5NkhtXnez6RtDz7eJ/cNGGVISVHa2BilJfws5TIOd5O2PaC0VzFKqxKjtP0oytlCe/pjZ/hC2R9Qeon+LOXPn79+o/QSHaMMKSlKL9ExSi/RMUov0TFKL9ExSi/RKcrwEh2j9E8dGKW1g1FaOxhlSElRWjsYpbWDUVo7GKW1g1FaOxRls3YwSmsHo7R2MEprB6MMKSlKawejtHYwSmsHo7R2MEprh6JcrB2M0trBKK0djNLawShDSorS2sEorR2IcvZ7Oxyl4YhRGo4YpeFIUfq9HY7ScMQoDUeM0nDEKENKitJwxCitHYzS2sEorR2M0tqhKP0KFEdp7WCU1g5Gae1glCElRWntYJTWDkZp7WCU1g5Gae1QlH4FiqO0djBKawejtHYgytb9BX+W8nIPD2vdt6TCw/dNtPDww+HXHb5rucLDd5FYePiuPgsP32Vt4eG7Xi47/GVwIV54+G74Cg/fDV/h4bvhKzz8cPh1h++Gr/Dw3fAVHr4bvsLDd8NXePhu+OoOf3TDV3j4bvgKD98NX+Hhu+ErPPxw+HWH74av8PDd8BUevhu+wsN3w1d4+G746g5/csNXePhu+AoP3w1f4eG74Ss8/HD4dYfvhq/w8N3wFR6+G77Cw3fDV3j4bvjqDt9HklUevhu+wsN3w1d4+G74Cg8/HH7d4bvhKzx8N3yFh++Gr/Dw3fAVHr4bvrrD9zGclYfvhu8dhr8OHwdv03eRP4fkJu4EQ3JjdoIhhUN6/yG5gXqDIW33E+nD/GBIbopOMCQ3OicYkpuXEwzJDcmzQ2rzvJ9J2x58vPsgXI7SescobWyM0hJ+lnIZh7tJ2x5QhpQUpVWJUdp+GKWF9vTHzvCFsj+g9BL9WcqD568vi5foGKWX6Bill+gYpZfoGGVISVF6iY5ReomOUXqJjlH6pw6M0tqhKFdrB6O0djBKawejtHYwypCSorR2MEprB6O0djBKawejtHYoys3awSitHYzS2sEorR2MMqSkKK0djNLawSitHYzS2sEorR2Ksls7GKW1g1FaOxiltQNRdq8rOUqvKzFKrysxSq8rKUqvKzlKrysxSq8rMUqvKzHKkJKidIuOUVo7GKW1g1FaOxiltcNQxjBYOxiltYNRWjsYpbWDUYaUFKW1g1FaOxiltYNRWjsYpbVDUY7WDkZp7WCU1g5Gae1AlJNfzHua8moPD4vJrxJWHr4f7YWH78VI4eF7+VR4+OHw6w7fhXzh4fsnhMLD948ehYfvn2kKD98NX93h+zWnysN3w1d4+G74Cg/fDV/h4YfDrzt8N3yFh++Gr/Dw3fAVHr4bvsLDd8NXdvizX+2tPHw3fIWH74av8PDd8BUefjj8usN3w1d4+G74Cg/fDV/h4bvhKzx8N3x1h+/tLCoP3w1f4eG74Ss8fDd8hYcfDr/u8N3wFR6+G77Cw3fDV3j4bvgKD98NX93hT274Cg/fDV/h4bvhKzx8N3yFhx8Ov+7w3fAVHr4bvsLDd8NXePhu+AoP3w3fOwx/HT4O3qbvIn8MaXYTd4IhuTE7wZDcbJ1gSG6g3mBI2/1E+jA/GFI4pPcfkhudEwzJzcsJhuSG5NkhtXnez6Rtjz7e3TdglNY7RRk2NkZpCT9LuYzD3aRtDyjtVYzSqsQoQ0qK0kJ7+mNn+ELZH1B6if4s5cHz128vJiVF6SU6Rdm8RMcovUTHKL1Exyi9RMcoQ0qK0kt0jNI/dWCU1g5Gae1glNYORblYOxiltYNRWjsYpbWDUYaUFKW1g1FaOxiltYNRWjsYpbVDUa7WDkZp7WCU1g5Gae1glCElRWntYJTWDkZp7WCU1g5Gae1QlJu1g1FaOxDl6pMcOUo/djBKP3YoSp/Zx1H6sYNRumTDKF2yYZQhJUXpkg2jdMmGUVo7GKW1g1FaOxSlzy/iKK0djNLawSitHYwypKQorR2M0trBKK0djNLawSitHYrSZ0RwlNYORmntYJTWDkYZUiKUbfBi6GnKqz087DZ8L9/qDt8LzsrD9xK58PC9qC88fDOk8PDD4dcdvn/YKjx8/xRXePj+8bDw8N3wFR6+G766w/eRiJWH74av8PDd8BUevhu+wsMPh193+G74Cg/fDV/h4bvhKzx8N3yFh++Gr+7wfaJy5eG74Ss8fDd8hYfvhq/w8MPh1x2+G77Cw3fDV3j4bvgKD98NX+Hhu+GrO/zFDV/h4bvhKzx8N3yFh++Gr/Dww+HXHb4bvsLDd8NXePhu+AoP3w1f4eG74as7/NUNX+Hhu+ErPHw3fIWH74av8PDD4dcdvhu+wsN3w1d4+G74Cg/fDd87DH8dPg7epu8ifw7JTdz7D2lzY3aCIbnZOsGQ3EC9wZC2+4n0YX4wJDdFJxhSOKT3H5KblxMMyQ3Js0Nq87yfSdsefby7b8AorXeM0samKLsl/CzlMg53k7Y9oLRXMUqrEqO0/TDKkPLZj53hC2V/QOkl+rOUR89f716iY5ReomOUXqJDlOPgJTpG6SU6RuklOkbpJTpGGVJSlP6pA6O0djBKawejtHYwSmuHohytHYzS2sEorR2M0trBKENKitLawSitHYzS2sEorR2M0tqhKCdrB6O0djBKawejtHYwypCSorR2MEprB6O0djBKawejtHYoytnagSjDr0BhlH4FiqO0wTFKGxyjtMExypCSorTBMUobHKO0wTFKGxyjtHYgyua3yThKawejtHYwSmsHowwpKUprB6O0djBKawejtHYwSmuHovTbZByltYNRWjsYpbWDUYaUFKW1g1FaOxDlNnuJ/izl5R4ets1GRd3hhxlUePiGW+Hhm5qFh28cFx5+OPy6w3cBUXj4rkwKD98/aRcevhu+wsN3w1d3+M0NX+Hhu+ErPHw3fIWH74av8PDD4dcdvhu+wsN3w1d4+G74Cg/fDV/h4bvhqzv8xQ1f4eG74Ss8fDd8hYfvhq/w8MPh1x2+G77Cw3fDV3j4bvgKD98NX+Hhu+GrO/zVDV/h4bvhKzx8N3yFh++Gr/Dww+HXHb4bvsLDd8NXePhu+AoP3w1f4eG74as7/M0NX+Hhu+ErPHw3fIWH74av8PDD4dcdvhu+wsN3w1d4+G74Cg/fDd87DH8dPg7epu8ifw7JTdz7D6m7MTvBkNxsnWBIbqDeYEjb/UT6MD8YkpuiEwwpHNL7D8nNywmG5Ibk2SG1ed7PpG2PPt7dN2CU1jtGaWNDlH2whJ+lXMbhbtK2B5T2KkZpVWKUth9GGVI++7EzfKHsDyi9RH+W8uD5633wEh2j9BIdo/QSnaIcvUTHKL1Exyi9RMcovUTHKENKitI/dWCU1g5Gae1glNYORmntUJSTtYNRWjsYpbWDUVo7GGVISVFaOxiltYNRWjsYpbWDUVo7FOVs7WCU1g5Gae1glNYORhlSUpTWDkZp7WCU1g5Gae1glNYORRnWDkO5zF6ic5ReomOUISVF6SU6RuklOkbpJTpG6SU6RuklOkXpJTpH6R8kMEprB6O0djDKkJKitHYwSmsHo7R2MEprB6O0dijKZu1glNYORmntYJTWDkYZUlKU1g5Gae1glNYORmntYJTWDkS5ek+2pymv9vCwZfUucpWHb5wXHr7rhMLDdwFSePjh8OsO3yVT4eG7Fis8fBd5hYfv6rHw8N3w1R2+d06tPHw3fIWH74av8PDd8BUefjj8usN3w1d4+G74Cg/fDV/h4bvhKzx8N3x1h+/dwisP3w1f4eG74Ss8fDd8hYcfDr/u8N3wFR6+G77Cw3fDV3j4bvgKD98NX93he/vdysN3w1d4+G74Cg/fDV/h4YfDrzt8N3yFh++Gr/Dw3fAVHr4bvsLDd8NXd/jecr7y8N3wFR6+G77Cw3fDV3j44fDrDt8NX+Hhu+ErPHw3fIWH74av8PDd8L3D8Nfh4+Bt+i7yx5AWN3EnGJIbsxMMyc3WCYbkBuoNhrTdT6QP84MhhUN6/yG50TnBkNy8nGBIbkieHVKb5/1M2vbo4919A0ZpvVOUq42NUVrCz1Iu43A3adsDSnsVo7QqMcqQkqK00J7+2Bm+UPYHlF6iP0t59Pz11Ut0jNJLdIpy8xIdo/QSHaP0Eh2j9BIdowwpKUov0TFK/9SBUVo7GKW1g1FaOxRlt3YwSmsHo7R2MEprB6MMKSlKawejtHYwSmsHo7R2MEprB6LcBmsHo7R2MEprB6O0djDKkJKitHYwSmsHo7R2MEprB6O0dijK0drBKK0dhnKdfIwnR+knOEbpJzhG6Sc4RenjDzlKP8ExSveVGKX7SowypKQo3VdilNYORmntYJTWDkZp7VCUPgqKo7R2MEprB6O0djDKkJKitHYwSmsHo7R2MEprB6O0dihKH7fBUVo7GKW1g1FaOxDl4h9vn6a82sPDbsP3Lanw8H0TLTz8cPh1h+9arvDwXSQWHr6rz8LDd1lbePiul+sO33/+U3n4bvgKD98NX+Hhu+ErPPxw+HWH74av8PDd8BUevhu+wsN3w1d4+G746g7ff/Jaefhu+AoP3w1f4eG74Ss8/HD4dYfvhq/w8N3wFR6+G77Cw3fDV3j4bvjqDn91w1d4+G74Cg/fDV/h4bvhKzz8cPh1h++Gr/Dw3fAVHr4bvsLDd8NXePhu+OoOf3PDV3j4bvgKD98NX+Hhu+ErPPxw+HWH74av8PDd8BUevhu+wsN3w1d4+G746g6/u+ErPHw3fO8w/HX4OHibvov8OSQ3cScYkhuzEwwpHNL7D8kN1BsMabufSB/mB0NyU3SCIbnROcGQ3LycYEhuSJ4dUpvn/Uza9uPH+zq4b8AorXeM0sbGKC3hZymXcbibtO0BZUhJUVqVGKXth1FaaE9/7AxfKPsDSi/Rn6U8eP76OnqJjlF6iY5ReomOUXqJjlGGlBSll+gYpZfoGKWX6Bilf+rAKK0dinKydjBKawejtHYwSmsHowwpKUprB6O0djBKawejtHYwSmuHopytHYzS2sEorR2M0trBKENKitLawSitHYzS2sEorR2M0tqhKMPawSitHYzS2sEorR2Gchv9IipH6Sc4RDn5dVGO0k9wjNJPcIzST3CMMqSkKN1XYpTuKzFK95UYpbWDUVo7FKXfvOUorR2M0trBKK0djDKkpCitHYzS2sEorR2M0trBKK0ditJv3nKU1g5Gae1glNYORhlSUpTWDkS5lP666DL3/byXbTk4erwd/nH0uAzrt6P/pKx8iQ5TVr5EZylLf10Upqx8iQ5TVr5EhykrX6L/GuXyhbJvDyhDSoqy8iU6TFn5DxIwpbWDUVo7GGXl2un3hxG1vs5HlOv9pxy3Mb4cPT04em37lNY+Hh17/wmH4QvHo5Po0fdHfffWvjySOz7mWfo7q1ecZ+Xuu+I8K8fnFedZuYCvOM9wnpeaZ+VdwBXnWXkhccV5Vt6KXHGelVczV5yn+6HXzLPvJ7It68Gxbdj/Hc0ytINjDwfaXBA9O9BtmfaB9pgO4Mf43LTGt9eePuDd5CTBu3JJgnc3kgQfwufAu21Ignct8Br41u9H3/62eHR0Hz5fu23fLj7/yqWqu4ELDtUFwcWC0g3BtQa6FN4QLOO6n/cyzdvB0Vvf9rfGPgyfa7n+8LRvEOt+3m2el6+H/wlfeEOQC194Q5ALX3hDkAsfwufAF94Q5MIX3hDkwheu+Fx4S/tiYWZpX2ugq3+Lv9hAHxb88PHfDAejnLdpP3Te2o9v6Ov00lev/Nfa2x+V9vOOPnw7+k+cEOffx/H71n+cN3BDhdXvW2OUft8ao/T71hild5eiKDfvLoVRenepZymPbqiweXcpjNK7S2GUISVFae1glNYORum/lXzNKjHpe3ebf7y51jz9282l5tn908215um3M681T7/0ea15+l3Sa80znOel5uk3X681T79Qe615uh96zTyz/qlZd0H07EDZWw10Nzkp8OvgyiUJ3t1IErxLjCR4tw1J8CH8S+ATb/myDu4GLjhUFwSXCsp1cENwsYEW3hBkfvF6HQpvCFLhR+9c9SR8H8b5Dt/6z+FvFxfj/Trjy5VD+1D3tlUZ6t6zKkPdG1ZlqIfqCerequo16p/Vvn6ph13d+1RlqHuTqgx1CzVD3TxNUJ9s0wx12zRD3TbNULdNM9RD9QR12zRD3TbNULdNM9Rt0wx12zRBfbZNM9Rt0wx12zRD3TbNUI/C6tu07OpbGw+OPoKsnJsoZOWCRCErRyEKWbnzUMjK6UZCRuUaQyErBxYKWbmZUMjKGYRChpAMpGUDQVo2EKRlA0FaNhCkZcNANssGgrRsIEjLBoK0bCDIEJKBtGwgSMsGgrRsIEjLBoK0bBjIxbKBIC0bCNKygSAtGwgyhGQgLRsI0rKBIC0bCNKygSAtGwZytWwgSMsGgrRsIEjLBoIMIRlIywaCtGwgSMsGgrRsIEjLhoHcLBsI0rKBIC0bCNKygSBDSAbSsoEgLRsI0rKBIC0bCNKyYSC7ZQNBWjYQpGUDQXojtT8gf/uzBXsInwPvrb6T4L3bdxK8N/xOgvee3ynw2/Dw8nD4+G+GA/J5m/ZD5609ePX5pa8eL3319tJXX1766usrX913yWd/WX/tlsLrfH8o6Br/tj823yJT1H0swu9Xv32wqZ6gXvgdpsW6O7bow7ej/8Qp/EZwiDMW/n09xim8yj7GKbyePsYpvHI+wLn9D6fyG/Iy9/28l205OHq8Hb5/7C/D+iNl5adQ0ZSV3+xhysofDTBl5Q8SmDKkpCgL/33xFymXL5R9e0BZ+C+GNGXh7TZNWXmhBFNaOxRl5ac80ZSVa6fP9wVFX+cjyvX+U47bl39cOI7Tg6PXtk9p7ePRsfefcPj6h92HfyyIHh8H99Y+T/lm8zHPysl1xXlW7r4rzjOc56XmWbmArzjPyhl+xXlW3gVccZ6VFxJXnGflrcgF51n5MXWXnKf7odfMs+8nsi3rwbFt2P/N5zK0g2OPB+qC6NmBbsv928Q9pgP4WzncN63x7bWnD3g3OUnwIXwOvLuRJHiXGEnwbhuS4F0LvAa+fd5RZYnh6Og+fL52275dfP6VS1V3A9cbauWnPV4yKCs/dfKaA618v7G8O3nc4L0/WRJ8CP/3F3xZfYn7l9WXL1cO7UPdm5NlqHtnsgx1b7iToe4NdzLUveHOa9R/cnPbPpZ+1mieeuWbXOepW6gZ6uZphnqonqBum2ao26YZ6rZphrptmqFumyaol35abJ66bZqhbptmqNumGeqheoK6bZqhbptmqNumGeq2aYa6bZqgXvp5v3nqtmmGum2aoW6bZqiH6gnqtmmGum2aoW6bZqjbphnqtunvV598iGaKum2aoW6bZqjbphnqoXqCum2aoW6bZqjbpi9R/9nj12/qtmmGeuU23aZlV9/aeHD0wZtG5WfAs5CVCxKFrByFKGTlzkMhQ0gGsnKNoZCVAwuFrNxMKGTlDEIhLRsGcrJsIEjLBoK0bCBIywaCDCEZSMsGgrRsIEjLBoK0bCBIy4aBnC0bCNKygSAtGwjSsoEgQ0gG0rKBIC0bCNKygSAtGwjSsmEgw7KBIC0bCNKygSAtGwgyhGQgLRsI0rKBIC0bCNKygSAtGwayWTYQpGUDQVo2EKRlA0GGkAykZQNBWjYQpGUDQVo2EKRlw0Aulg0EadlAkJYNBGnZQJAhJANp2UCQlg0EadlAkJYNBGnZMJCrZQNBWjYQpGUDQVo2EGQIyUBaNhCkZQNBWjYQpGUDQVo2DORm2UCQlg0EadlAkJYNBBlCMpCWDQRp2UCQlg0EadlAkJYNA9ktGwjSsoEgLRsI0rKBIENIBtKygSAtGwjSsoEgLRsI0rJBIOfBsoEgLRsI0rKBIC0bCDKEZCAtGwjSsoEgLRsI0rKBIC0bBnK0bCBIywaCtGwgSMsGggwhGUjLBoK0bCBIywaCtGwgSMuGgZwsGwjSsoEgLRsI0rKBIENIBtKygSAtGwjSsoEgLRsI0rJhIGfLBoK0bCBIywaCtGwgyBCSgbRsIEjLBoK0bCBIywaCtGwYyLBsIEjLBoK0bCBIywaCDCEZSMsGgrRsIEjLBoK0bCBIy4aBbJYNBGnZQJCWDQRp2UCQISQDadlAkJYNBGnZQJCWDQRp2TCQi2UDQVo2EKRlA0FaNhBkCMlAWjYQpGUDQVo2EKRlA0FaNgzkatlAkJYNBFm5bMZ1P+9lmreDo7e+7ZB9GD7Z+8PTvkGs+3m3eV6+Hv4nfOUSSoUP4XPgK5dWKnzlMkuFr1xymfDbw+vs4eO/GQ7I523aD5239uDVx5e++vTSV59f+urx0ldvL3z1Vvre/r/0y9qHcb7/srb+81/WcZ3He3/Ev+2PVvpBAHnqlTdjeeqV12hp6qWfR5CnXnlBl6de+B2mxbo7tujDt6P/wKl8+95jnMK/r8c4hZfkxziFF9nHOCHOv4ezln5DXua+n/eyLQdHj7fD94/9ZVgfUFZ++4YpK7/Zw5SVPxpgysofJDBl4b9D0pSFd+a/SLl8oezbA8rCi3CasvB2m6asvFBiKSvfY52mtHYwysq10+f7guImcUS53n/KcfvyD2nHcXpw9Nr2Ka19PDr2/hMOX/8Rw8M/FkSPj4N7a5+nfLP5mGfl5LriPMN5XmqelePzivOsXMBXnGflDL/iPCvvAq44z8oLiQvOs/LzGS45z8qrmSvO0/3Qa+bZ9xPZlvXg2Dbs/+ZzGdrBsccDdUH07EC35f7N+R7TAfwYn5vW+Pba0wd8CJ8D78olCd7dSBK8S4wkeLcNSfCuBV4D3z7vHrTEcHR0Hz5fu23fLj7/wqVq5SecXHeoLgiuFZSVn/pyzYF6Z7I/JH/3XWvW0k+rSYX3zmRPwv/al9WXuH9Zffly5dA+1L3hToa6N9zJUPeGOxnq3nAnQb3043teqf6zGzmvpZ/1k6fu7bMz1C3UDPVQPUHdNs1Qt00z1G3TDHXbNEPdNk1QL/0Apjx12zRD3TbNULdNM9RD9QR12zRD3TbNULdNM9Rt0wx12zRBfbNNM9Rt0wx12zRD3TbNUA/VE9Rt0wx12zRD3TbNULdNM9Rt0wT1bptmqNumGeq2aYa6bZqhHqonqNumGeq2aYa6bZqhbptmqNumv199G2zTDHXbNEPdNs1Qt00z1EP1BHXbNEPdNs1Qt00z1G3TDHXbNEF9tE0z1G3TDHXbNEPdNs1QD9UT1G3TDHXbNEPdNs1Qt00z1G3TBPXJNs1Qt00z1G3TDHXbNEM9VE9Qt00z1G3TDHXbNEPdNn2J+jrfn2ayxo/qtmmC+ly5TW+farv61saDow/eNObKuYlCVi5IFLJyFKKQISQDWTndUMjKNYZCVg4sFLJyM6GQlTOIhAzLBoK0bCBIywaCtGwgyBCSgbRsIEjLBoK0bCBIywaCtGwYyGbZQJCWDQRp2UCQlg0EGUIykJYNBGnZQJCWDQRp2UCQlg0DuVg2EKRlA0FaNhCkZQNBhpAMpGUDQVo2EKRlA0FaNhCkZcNArpYNBGnZQJCWDQRp2UCQISQDadlAkJYNBGnZQJCWDQRp2TCQm2UDQVo2EKRlA0FaNhBkCMlAWjYQpGUDQVo2EKRlA0FaNgxkt2wgSMsGgrRsIEjLBoIMIRlIywaCtGwgSMsGgrRsIEjLBoHsg2UDQVo2EKRlA0FaNhBkCMlAWjYQpGUDQVo2EKRlA0FaNgzkaNlAkJYNBGnZQJCWDQQZQjKQlg0EadlAkJYNBGnZQJCWDQM5WTYQpGUDQVo2EKRlA0GGkAykZQNBWjYQpGUDQVo2EKRlw0DOlg0EadlAkJYNBGnZQJAhJANp2UCQlg0EadlAkJYNBGnZMJBh2UCQlg0EadlAkJYNBBlCMpCWDQRp2UCQlg0EadlAkJYNA9ksGwjSsoEgLRsI0rKBIENIBtKygSAtGwjSsoEgLRsI0rJhIBfLBoK0bCBIywaCtGwgyBCSgbRsIEjLBoK0bCBIywaCtGwYyNWygSAtGwjSsoEgLRsIMoRkIC0bCNKygSAtGwjSsoEgLRsGcrNsIEjLBoK0bCBIywaCDCEZSMsGgrRsIEjLBoK0bCBIy4aB7JYNBGnZQJCWDQRp2UCQISQDadlAkJYNBGnZQJCWDQRp2RCQ43D7/5SEJG0bStK4oSStG0oylIQk7RtK0sChJC0cStLEoSRtHEhytHEoSRuHkrRxKEkbh5IMJSFJG4eStHEoSRuHkrRxKEkbB5KcbBxK0sahJG0cStLGoSRDSUjSxqEkbRxK0sahJG0cStLGgSRnG4eStHEoSRuHkrRxKMlQEpK0cShJG4eStHEoSRuHkrRxIMmwcShJG4eStHEoSRuHkgwlIUkbh5K0cShJG4eStHEoSRsHkmw2DiVp41CSNg4laeNQkqEkJGnjUJI2DiVp41CSNg4laeNAkouNQ0naOJSkjUNJ2jiUZCgJSdo4lKSNQ0naOJSkjUNJ2jiQ5GrjUJI2DiVp41CSNg4lGUpCkjYOJWnjUJI2DiVp41CSNg4kudk4lKSNQ0naOJSkjUNJhpKQpI1DSdo4lKSNQ0naOJSkjQNJdhuHkrRxKEkbh5K0cSjJUBKStHEoSRuHkrRxKEkbh5K0cRjJm6WSkKSNQ0naOJSkjUNJhpKQpI1DSdo4lKSNQ0naOJSkjQNJjjYOJWnjUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVp40CSk41DSdo4lKSNQ0naOJRkKAlJ2jiUpI1DSdo4lKSNQ0naOJDkbONQkjYOJWnjUJI2DiUZSkKSNg4laeNQkjYOJWnjUJI2DiQZNg4laeNQkjYOJWnjUJKhJCRp41CSNg4laeNQkjYOJWnjQJLNxqEkbRxK0sahJG0cSjKUhCRtHErSxqEkbRxK0sahJG0cSHKxcShJG4eStHEoSRuHkgwlIUkbh5K0cShJG4eStHEoSRsHklxtHErSxqEkbRxKsnLjjOt+3ss0bwdHb33bJfswfLr3h6d9g1j3827zvHw9/EM+lE+Sr9xQufKVmytXvnKj5cpXbrpU+e3h9fbw8R8NB+bzNu2Hzlt79PLTa19+fu3Lx2tfvr325ZdXvvxc+kkBv/Q724dxvv/Otv7z39lbbYz3GIkfYmQu/ViBRPbKu7I89tIPLEhkr7yFS2SvvLLLY698x+AW6w7Zog/fjv7QKfxe8IRO4V/ZJ3QKb86f0Al1fqJTeAN9qNNKvysvc9/Pe9mWg6PH2+H7p/8yrI8sK7+H05aV3/Fpy8qfD7Rl5U8T2rLwXyhxy8Jb9F+0XL5Y9u2RZeHVOG5ZeN9NW1a+WztuafdwlnYPZ1m5e/p831b0dT6yXO8/5bh9+de24zg9OHpt+5jWPh4de/8Jh6//uuHh3w+ix8fBvbXPU77Z7AMNB3qtgVYuwEsOtHKGXnKglVv4kgOtHOSXHGjlrcAVB1r5IQvXHGjl/cglB1p5SXPJgbopes1A+34i27IeHNuG/R+ELkM7OPaJiYYTfXKi23L/pn2P6UB+jM+ta3x77WmXd6eTJe/yJUveLUmWvOuMLHn3DknylZ9Q8lL59nnPoSWGo6P78Pnabft2DfpXrlgrPy3lwlN1VXCxsqz8BJmLTjT8iu/fM+5000o/+SZX3juaPSn/a19rX+L+tfbly+VD29m9QU8KuzfoSWH3Bj0Z7KWf7pPI7g16XsP+0ztBt9LPDUpk9wbcKewhewa7oZrCbqWmsFupKexWagq7lZrBXvr5TInsVmoKu5Wawm6lprCH7BnsVmoKu5Wawm6lprBbqSnsVmoG+2alprBbqSnsVmoKu5Wawh6yZ7BbqSnsVmoKu5Wawm6lprBbqRns3UpNYbdSU9it1BR2KzWFPWTPYLdSU9it1BR2KzWF3UpNYbdSE9iXwUpNYbdSU9it1BR2KzWFPWTPYLdSU9it1BR2KzWF3UpNYbdSM9hHKzWF3UpNYbdSU9it1BT2kD2D3UpNYbdSU9it1BR2KzWF3UrNYJ+s1BR2KzWF3UpNYbdSU9hD9gx2KzWF3UpNYbdSU9it1BR2K/Ul7Ot8fyTKGj+yz1ZqCnvlSt2mZWff2nhw9NH7xlw5PFnJyi3JSoaSkGTl4mMlK0ccK1m5y1jJyqnFSlauJ1QyKgcRK2njUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVp40CSzcahJG0cStLGoSRtHEoylIQkbRxK0sahJG0cStLGoSRtHEhysXEoSRuHkrRxKEkbh5IMJSFJG4eStHEoSRuHkrRxKEkbB5JcbRxK0sahJG0cStLGoSRDSUjSxqEkbRxK0sahJG0cStLGgSQ3G4eStHEoSRuHkrRxKMlQEpK0cShJG4eStHEoSRuHkrRxIMlu41CSNg4laeNQkjYOJRlKQpI2DiVp41CSNg4laeNQkjYOI7kONg4laeNQkjYOJWnjUJKhJCRp41CSNg4laeNQkjYOJWnjQJKjjUNJ2jiUpI1DSdo4lGQoCUnaOJSkjUNJ2jiUpI1DSdo4kORk41CSNg4laeNQkjYOJRlKQpI2DiVp41CSNg4laeNQkjYOJDnbOJSkjUNJ2jiUpI1DSYaSkKSNQ0naOJSkjUNJ2jiUpI0DSYaNQ0naOJSkjUNJ2jiUZCgJSdo4lKSNQ0naOJSkjUNJ2jiQZLNxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweSXGwcStLGoSRtHErSxqEkQ0lI0sahJG0cStLGoSRtHErSxoEkVxuHkrRxKEkbh5K0cSjJUBKStHEoSRuHkrRxKEkbh5K0cSDJzcahJG0cStLGoSRtHEoylIQkbRxK0sahJG0cStLGoSRtHEiy2ziUpI1DSdo4lKSNQ0mGkpCkjUNJ2jiUpI1DSdo4lKSNw0hug41DSdo4lKSNQ0naOJRkKAlJ2jiUpI1DSdo4lKSNQ0naOJDkaONQkjYOJWnjUJI2DiUZSkKSNg4laeNQkjYOJWnjUJI2DiQ52TiUpI1DSdo4lKSNQ0mGkpCkjUNJ2jiUpI1DSdo4lKSNA0nONg4laeNQkjYOJWnjUJKhJCRp41CSNg4laeNQkjYOJWnjQJJh41CSNg4laeNQkjYOJRlKQpI2DiVp41CSNg4laeNQkjYOJNlsHErSxqEkbRxK0sahJENJSNLGoSRtHErSxqEkbRxK0saBJBcbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgydXGoSRtHErSxqEkbRxKMpSEJG0cStLGoSRtHErSxqEkbRxIcrNxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweS7DYOJWnjUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVp4zCSfbBxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweSHG0cStLGoSRtHErSxqEkQ0lI0sahJG0cStLGoSRtHErSxoEkJxuHkrRxKEkbh5K0cSjJUBKStHEoSRuHkrRxKEkbh5K0cSDJ2cahJG0cStLGoSRtHEoylIQkbRxK0sahJG0cStLGoSRtHEgybBxK0sahJG0cStLGoSRDSUjSxqEkbRxK0sahJG0cStLGgSSbjUNJ2jiUpI1DSdo4lGQoCUnaOJSkjUNJ2jiUpI1DSdo4kORi41CSNg4laeNQkjYOJRlKQpI2DiVp41CSNg4laeNQkjYOJLnaOJSkjUNJ2jiUpI1DSUZhyXHdz3uZ5u3g6K1vu2Qfhk/3/vC0bxDrft5tnpevh3/IV26iXPnKDZUrX7m5cuUrN1qufOWmS5XfHl5vDx//0XBgPm/Tfui8tUcvP7/25eO1L99e+/LLa19+feHL3/7X6bvlk7+zfRjn++9s6z//nR3XebzHSPzbGLn9P+BbZQZ76WcQJLJXXqwlslfewiWyV17Z5bFXvmNwi3WHbNGHb0d/6BR+L3hCp/Cv7BM6oc5PdApvt5/QKbyBPtSZS78rL3Pfz3vZloOjx9vh+6f/MqyPLCu/h9OWld/xacvKnw+0ZeVPE9qy8F8occvCW/RftFy+WPbtkWXh1ThtWfle7bhl5f0SbWn3cJZ2D2cZhS37fN9W9HU+slzvP+W4ffnXtreNz4Oj17aPae3j0bH3n3D4+q8bHv79IHp8HNxb+zzlm80+0MrxdcmBVi7ASw60coZecqCVW/iSA60c5FccaOWnG1xzoJVXE5ccaOX9yCUHWnlJc8mBhgN9yUD7fiLbsh4c24b9H4QuQzs49omJuip6dqLbcv+mfY/pQH6Mz61rfHvtaZd3p5Ml7/IlS94tSZa864wk+cpPHEmWd0HwGvn2ec+hJYajo/vw+dpt+3YN+leuWCs/LeXCU3VVcLGyrPwEmYtO1Dua/UH5u+90c5P3jmZZ8t7R7En5X/ta+xL3r7UvXy4f2s7uDXpS2L1BTwZ76Qf2JLJ7g54Udm/Q8xr2n90J+sbuDXpS2EP2DHZbNYXdUE1ht1JT2K3UFHYrNYO99COXEtmt1BR2KzWF3UpNYQ/ZM9it1BR2KzWF3UpNYbdSU9it1Az2zUpNYbdSU9it1BR2KzWFPWTPYLdSU9it1BR2KzWF3UpNYbdSM9i7lZrCbqWmsFupKexWagp7yJ7BbqWmsFupKexWagq7lZrCbqUmsMdgpaawW6kp7FZqCruVmsIesmewW6kp7FZqCruVmsJupaawW6kZ7KOVmsJupaawW6kp7FZqCnvInsFupaawW6kp7FZqCruVmsJupWawT1ZqCruVmsJupaawW6kp7CF7BruVmsJupaawW6kp7FZqCruVmsE+W6kvYV/n+yNR1njAbqWmsFeu1G1advatjQdHH75vVA5PVjKUhCQr5yErWbn4WMnKEcdKVu4yVrJyaqGSUbmeWMnKQcRK2jiUpI1DSYaSkKSNQ0naOJSkjUNJ2jiUpI0DSTYbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgycXGoSRtHErSxqEkbRxKMpSEJG0cStLGoSRtHErSxqEkbRxIcrVxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweS3GwcStLGoSRtHErSxqEkQ0lI0sahJG0cStLGoSRtHErSxoEku41DSdo4lKSNQ0naOJRkKAlJ2jiUpI1DSdo4lKSNQ0naOIxkG2wcStLGoSRtHErSxqEkQ0lI0sahJG0cStLGoSRtHErSxoEkRxuHkrRxKEkbh5K0cSjJUBKStHEoSRuHkrRxKEkbh5K0cSDJycahJG0cStLGoSRtHEoylIQkbRxK0sahJG0cStLGoSRtHEhytnEoSRuHkrRxKEkbh5IMJSFJG4eStHEoSRuHkrRxKEkbB5IMG4eStHEoSRuHkrRxKMlQEpK0cShJG4eStHEoSRuHkrRxIMlm41CSNg4laeNQkjYOJRlKQpI2DiVp41CSNg4laeNQkjYOJLnYOJSkjUNJ2jiUpI1DSYaSkKSNQ0naOJSkjUNJ2jiUpI0DSa42DiVp41CSNg4laeNQkqEkJGnjUJI2DiVp41CSNg4laeNAkpuNQ0naOJSkjUNJ2jiUZCgJSdo4lKSNQ0naOJSkjUNJ2jiQZLdxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJG4eRXAYbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgydHGoSRtHErSxqEkbRxKMpSEJG0cStLGoSRtHErSxqEkbRxIcrJxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweSnG0cStLGoSRtHErSxqEkQ0lI0sahJG0cStLGoSRtHErSxoEkw8ahJG0cStLGoSRtHEoylIQkbRxK0sahJG0cStLGoSRtHEiy2TiUpI1DSdo4lKSNQ0mGkpCkjUNJ2jiUpI1DSdo4lKSNA0kuNg4laeNQkjYOJWnjUJKhJCRp41CSNg4laeNQkjYOJWnjQJKrjUNJ2jiUpI1DSdo4lGQoCUnaOJSkjUNJ2jiUpI1DSdo4kORm41CSNg4laeNQkjYOJRlKQpI2DiVp41CSNg4laeNQkjYOJNltHErSxqEkbRxK0sahJENJSNLGoSRtHErSxqEkbRxK0sZhJNfBxqEkbRxK0sahJG0cSjKUhCRtHErSxqEkbRxK0sahJG0cSHK0cShJG4eStHEoSRuHkgwlIUkbh5K0cShJG4eStHEoSRsHkpxsHErSxqEkbRxK0sahJENJSNLGoSRtHErSxqEkbRxK0saBJGcbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgybBxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweSbDYOJWnjUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVp40CSi41DSdo4lKSNQ0naOJRkKAlJ2jiUpI1DSdo4lKSNQ0naOJDkauNQkjYOJWnjUJI2DiUZSkKSlRvntp7dJad5Ozh669su2Yfh070/PO0bxLqfd5vn5evhH/KVmyhXvnJD5cpXbq5c+cqNliq/VW66XPmH19vDx380HJjP27QfOm/t0cvHa1++vfbll9e+/Pral99e+fK99JMCful3tg/jfP+dbf3nv7P/uE3KPUbihxjppR8rkMheeVeWyF55sZbIXnkLl8gesiewV75jcIt1h2zRh29Hf+gUfi94Qqfwr+wTOoU350/oFN5uP6FTeAN9pDONpd+Vl7nv571sy8HR4+3w/dN/GdZHlpXfw2nLyu/4tGXlzwfasvKnCW1Z+C+UuGXhLfovWi5fLPv2wLLyndpxy8L7btyy8n6JtrR7OMvQErOs3D19vm8r+jofWa73n3Lcvvxr23GcHhy9tn1Max+Pjr3/hMPXf93w8O8H0ePj4N7a5ynfbPaBVo6vSw60cgFecqCVM/SSA63cwlccaOXHClxzoJW3ApccaOXVxCUHWnk/csmBhgO91kDdFL1moH0/kW1ZD45tw/4PQpehHRz7xERdFT070W25f9O+x3Qgf4O9b13j22tPu7w7nSx5ly9Z8m5JkuQrP0EkWd69Q5a8C4LXyLfPew4tMRwd3YfP127bt2vQv3LFWvlpKReeajjVa5Vl5SfIXHSi3tHsD8rffaebm7x3NMuS945mT8r/2tfal7h/rX35cvnQdnZv0JPBXvoZPIns3qAnhd0b9KSwe4Oe17D/7E7QN/aQPYPdG3CnsNuqKeyGagq7lZrCbqVmsJd+ilIiu5Wawm6lprBbqSnsIXsGu5Wawm6lprBbqSnsVmoKu5Wawe5zoXLYrdQUdis1hd1KTWEP2TPYrdQUdis1hd1KTWG3UlPYrdQM9m6lprBbqSnsVmoKu5Wawh6yZ7BbqSnsVmoKu5Wawm6lprBbqQns02ClprBbqSnsVmoKu5Wawh6yZ7BbqSnsVmoKu5Wawm6lprBbqRnso5Wawm6lprBbqSnsVmoKe8iewW6lprBbqSnsVmoKu5Wawm6lZrBPVmoKu5Wawm6lprBbqSnsIXsGu5Wawm6lprBbqSnsVmoKu5WawT5bqSnsVupL2Nf5/kiUNR6wW6kp7JUrdZuWnX1r48HRh+8boSQkWbklWcnKechKVi4+VrJyxLGSlbsMlYzKqcVKVq4nVrJyELGSNg4lGUpCkjYOJWnjUJI2DiVp41CSNg4k2WwcStLGoSRtHErSxqEkQ0lI0sahJG0cStLGoSRtHErSxoEkFxuHkrRxKEkbh5K0cSjJUBKStHEoSRuHkrRxKEkbh5K0cSDJ1cahJG0cStLGoSRtHEoylIQkbRxK0sahJG0cStLGoSRtHEhys3EoSRuHkrRxKEkbh5IMJSFJG4eStHEoSRuHkrRxKEkbB5LsNg4laeNQkjYOJWnjUJKhJCRp41CSNg4laeNQkjYOJWnjMJLzYONQkjYOJWnjUJI2DiUZSkKSNg4laeNQkjYOJWnjUJI2DiQ52jiUpI1DSdo4lKSNQ0mGkpCkjUNJ2jiUpI1DSdo4lKSNA0lONg4laeNQkjYOJWnjUJKhJCRp41CSNg4laeNQkjYOJWnjQJKzjUNJ2jiUpI1DSdo4lGQoCUnaOJSkjUNJ2jiUpI1DSdo4kGTYOJSkjUNJ2jiUpI1DSYaSkKSNQ0naOJSkjUNJ2jiUpI0DSTYbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgycXGoSRtHErSxqEkbRxKMpSEJG0cStLGoSRtHErSxqEkbRxIcrVxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweS3GwcStLGoSRtHErSxqEkQ0lI0sahJG0cStLGoSRtHErSxoEku41DSdo4lKSNQ0naOJRkKAlJ2jiUpI1DSdo4lKSNQ0naOIxkDDYOJWnjUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVp40CSo41DSdo4lKSNQ0naOJRkKAlJ2jiUpI1DSdo4lKSNQ0naOJDkZONQkjYOJWnjUJI2DiUZSkKSNg4laeNQkjYOJWnjUJI2DiQ52ziUpI1DSdo4lKSNQ0mGkpCkjUNJ2jiUpI1DSdo4lKSNA0mGjUNJ2jiUpI1DSdo4lGQoCUnaOJSkjUNJ2jiUpI1DSdo4kGSzcShJG4eStHEoSRuHkgwlIUkbh5K0cShJG4eStHEoSRsHklxsHErSxqEkbRxK0sahJENJSNLGoSRtHErSxqEkbRxK0saBJFcbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgyc3GoSRtHErSxqEkbRxKMpSEJG0cStLGoSRtHErSxqEkbRxIsts4lKSNQ0naOJSkjUNJhpKQpI1DSdo4lKSNQ0naOJSkjcNItsHGoSRtHErSxqEkbRxKMpSEJG0cStLGoSRtHErSxqEkbRxIcrRxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweSnGwcStLGoSRtHErSxqEkQ0lI0sahJG0cStLGoSRtHErSxoEkZxuHkrRxKEkbh5K0cSjJUBKStHEoSRuHkrRxKEkbh5K0cSDJsHEoSRuHkrRxKEkbh5IMJSFJG4eStHEoSRuHkrRxKEkbB5JsNg4laeNQkjYOJWnjUJKhJCRp41CSNg4laeNQkjYOJWnjQJKLjUNJ2jiUpI1DSdo4lGQoCUnaOJSkjUNJ2jiUpI1DSdo4kORq41CSNg4laeNQkjYOJRlKQpI2DiVZuXHGdT/vZZq3g6O3vu2SfRg+3fvD075BrPt5t3levh7+IV+5iXLlKzdUrnzl5kqV3yo3Wq585abLlY9H8sPHfzQcmM/btB86b+3Ry7fXvvzy2pdfX/vy22tfvr/y5dfSTwr4pd/ZPozz/Xe29Z//zo7rPN5jJH6IkbX0YwUS2SvvyhLZKy/WEtlD9gz2yiu7PPbKdwxuse6QLfrw7egPncLvBU/oFP6VfUKn8Ob8CZ3C2+0ndApvoA91eul35WXu+3kv23Jw9Hg7fP/0X4b1kWXl93DasvI7Pm1Z+fOBtqz8aUJbFv4LJW1Z+T7tv2i5fLHs2yPLwqtx3LLwvhu3rLxfoi1DS8zS7uEsK3fP7R1uP+++zkeW6/2nHLcv/9p2HKcHR69tH9Pax6Nj7z/h8PVfNzz8+0H0+Di4t/Z5yjebfaCV4+uSA61cgJccaOUMveJAK9/P/5oDrRzklxxo5a3AJQdaeTVxyYGGA73WQCsvaS45UDdFrxlo309kW9aDY9uw/4PQZWgHxz4xUVdFz050W+7ftL9dTB7Ij/G5dY1vrz3t8u50suRdviTJV34iSLK864wsefcOWfIuCF4j3z7vObTEcHR0Hz5fu23frkH/yhVr5aelXHiqrgouVpaVnyBz0Yl6R7M/KH/7nW566Sff5Mp7R7Mn5X/ta+1L3L/Wvny5fPj4Wnsv/VidRHZv0JPC7g16Uti9QU8Ke8j+Evaf3gm6l35uUCK7N+BOYbdVU9gN1RR2KzWDvfSDkRLZrdQUdis1hd1KTWEP2TPYrdQUdis1hd1KTWG3UlPYrdQMdh8NlcNupaawW6kp7FZqCnvInsFupaawW6kp7FZqCruVmsJupWawdys1hd1KTWG3UlPYrdQU9pA9g91KTWG3UlPYrdQUdis1hd1K/f3s8zBYqSnsVmoKu5Wawm6lprCH7BnsVmoKu5Wawm6lprBbqSnsVmoG+2ilprBbqSnsVmoKu5Wawh6yZ7BbqSnsVmoKu5Wawm6lprBbqRnsk5Wawm6lprBbqSnsVmoKe8iewW6lprBbqSnsVmoKu5Wawm6lZrDPVmoKu5Wawm6lvoR9ne+PRFnjAbuVmsIehdm3adnZtzYeHH34vlE5PFnJyi3JSlbOQ1aycvGxkpUjDpWMyl3GSlZOLVaycj2xkpWDiJUMJSFJG4eStHEoSRuHkrRxKEkbB5JsNg4laeNQkjYOJWnjUJKhJCRp41CSNg4laeNQkjYOJWnjQJKLjUNJ2jiUpI1DSdo4lGQoCUnaOJSkjUNJ2jiUpI1DSdo4kORq41CSNg4laeNQkjYOJRlKQpI2DiVp41CSNg4laeNQkjYOJLnZOJSkjUNJ2jiUpI1DSYaSkKSNQ0naOJSkjUNJ2jiUpI0DSXYbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEYyXGwcShJG4eStHEoSRuHkgwlIUkbh5K0cShJG4eStHEoSRsHkhxtHErSxqEkbRxK0sahJENJSNLGoSRtHErSxqEkbRxK0saBJCcbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgydnGoSRtHErSxqEkbRxKMpSEJG0cStLGoSRtHErSxqEkbRxIMmwcStLGoSRtHErSxqEkQ0lI0sahJG0cStLGoSRtHErSxoEkm41DSdo4lKSNQ0naOJRkKAlJ2jiUpI1DSdo4lKSNQ0naOJDkYuNQkjYOJWnjUJI2DiUZSkKSNg4laeNQkjYOJWnjUJI2DiS52jiUpI1DSdo4lKSNQ0mGkpCkjUNJ2jiUpI1DSdo4lKSNA0luNg4laeNQkjYOJWnjUJKhJCRp41CSNg4laeNQkjYOJWnjQJLdxqEkbRxK0sahJG0cSjKUhCRtHErSxqEkbRxK0sahJG0cRnIabBxK0sahJG0cStLGoSRDSUjSxqEkbRxK0sahJG0cStLGgSRHG4eStHEoSRuHkrRxKMlQEpK0cShJG4eStHEoSRuHkrRxIMnJxqEkbRxK0sahJG0cSjKUhCRtHErSxqEkbRxK0sahJG0cSHK2cShJG4eStHEoSRuHkgwlIUkbh5K0cShJG4eStHEoSRsHkgwbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgyWbjUJI2DiVp41CSNg4lGUpCkjYOJWnjUJI2DiVp41CSNg4kudg4lKSNQ0naOJSkjUNJhpKQpI1DSdo4lKSNQ0naOJSkjQNJrjYOJWnjUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVp40CSm41DSdo4lKSNQ0naOJRkKAlJ2jiUpI1DSdo4lKSNQ0naOJBkt3EoSRuHkrRxKEkbh5IMJSFJG4eStHEoSRuHkrRxKEkbh5GcBxuHkrRxKEkbh5K0cSjJUBKStHEoSRuHkrRxKEkbh5K0cSDJ0cahJG0cStLGoSRtHEoylIQkbRxK0sahJG0cStLGoSRtHEhysnEoSRuHkrRxKEkbh5IMJSFJG4eStHEoSRuHkrRxKEkbB5KcbRxK0sahJG0cStLGoSRDSUjSxqEkbRxK0sahJG0cStLGgSTDxqEkbRxK0sahJG0cSjKUhCRtHErSxqEkbRxK0sahJG0cSLLZOJSkjUNJ2jiUpI1DSYaSkKSNQ0naOJSkjUNJ2jiUpI0DSS42DiVp41CSNg4laeNQkqEkJGnjUJI2DiVp41CSNg4laeNAkquNQ0naOJSkjUNJ2jiUZCgJSdo4lKSNQ0lWbpxx3c97mebt4Oitb7tkH4ZP9/7wtG8Q637e7XbZ/vXwD/nKTZQrX7mhUuW3ys2VK1+50XLlKzddrvzD6+3h4z8aDsxvg9sPvb3So5dfXvvy62tffnvty/eXvvzjh1tTL99KPyngl35n+zDO99/Z1n/+Ozuu83iPkfghRlrpxwokslfelSWyh+wZ7JW3cInslVd2eeyV7xjcYt0hW/Th29EfOoXfC57QKfwr+4RO4c35EzqFt9tP6BTeQB/qrKXflZe57+e9bMvB0ePt8P3TfxnWR5aV38Npy8rv+LRl5c8H2rLypwlsWfku7bhl4S36L1ouXyz79siy8Goctyy878YtQ0vM0u7hLO0ezrJy9/T5vq3o63xkud5/ynH78q9tx3F6cPTa9jGtfTw69v4TDl//dcPDvx9Ej4+De2ufp3yz2QdaOb4uOdDKBXjFgVa+kf41B1q5hS850MpBfsmBVt4KXHKg4UCvNdDK+5FLDrTykuaSA3VT9JqB9v1EtmU9OLYN+z8IXYZ2cOwTE3VV9OxEt+X+Tfse04H8GJ9b1/j22tMu704nSb7yEz6S5d2SZMm7zsiSd++QJR/Kv0S+fd5zaInh6Og+fL52275dg/6VK9bKT0u58FRdFVysLCs/QeaiE/WOZn9Q/vY73ayln3yTKl/6STkv/Fr7EvevtS9fLh/azu4NelLYvUFPCrs36ElhD9kz2L1Bz2vYf3on6LX0c4MS2b0Bdwq7rZrCbqhmsJd+1lEiu5Wawm6lprBbqSnsIXsGu5Wawm6lprBbqSnsVmoKu5Wawe7ToXLYrdQUdis1hd1KTWEP2TPYrdQUdis1hd1KTWG3UlPYrdQM9m6lprBbqSnsVmoKu5Wawh6yZ7BbqSnsVmoKu5Wawm6lprBbqQns22ClprBbqSnsVmoKu5Wawh6yZ7BbqSnsVmoKu5Wawm6lprBbqRnso5Wawm6lprBbqSnsVmoKe8iewW6lprBbqSnsVmoKu5Wawm6lZrBPVmoKu5Wawm6lprBbqSnsIXsGu5Wawm6lprBbqSnsVmoKu5WawT5bqSnsVmoKu5Wawm6lvoR9ne+PRFnjAXvInsFeuVJvsbizb208OPrwfaNyeLKSlVuSlaych6xk5eJDJaNyxLGSlbuMlaycWqxk5XpiJUNJSNLGoSRtHErSxqEkbRxK0saBJJuNQ0naOJSkjUNJ2jiUZCgJSdo4lKSNQ0naOJSkjUNJ2jiQ5GLjUJI2DiVp41CSNg4lGUpCkjYOJWnjUJI2DiVp41CSNg4kudo4lKSNQ0naOJSkjUNJhpKQpI1DSdo4lKSNQ0naOJSkjQNJbjYOJWnjUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVp40CS3cahJG0cStLGoSRtHEoylIQkbRxK0sahJG0cStLGoSRtHEayDzYOJWnjUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVp40CSo41DSdo4lKSNQ0naOJRkKAlJ2jiUpI1DSdo4lKSNQ0naOJDkZONQkjYOJWnjUJI2DiUZSkKSNg4laeNQkjYOJWnjUJI2DiQ52ziUpI1DSdo4lKSNQ0mGkpCkjUNJ2jiUpI1DSdo4lKSNA0mGjUNJ2jiUpI1DSdo4lGQoCUnaOJSkjUNJ2jiUpI1DSdo4kGSzcShJG4eStHEoSRuHkgwlIUkbh5K0cShJG4eStHEoSRsHklxsHErSxqEkbRxK0sahJENJSNLGoSRtHErSxqEkbRxK0saBJFcbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgyc3GoSRtHErSxqEkbRxKMpSEJG0cStLGoSRtHErSxqEkbRxIsts4lKSNQ0naOJSkjUNJhpKQpI1DSdo4lKSNQ0naOJSkjYNIxjDYOJSkjUNJ2jiUpI1DSYaSkKSNQ0naOJSkjUNJ2jiUpI0DSY42DiVp41CSNg4laeNQkqEkJGnjUJI2DiVp41CSNg4laeNAkpONQ0naOJSkjUNJ2jiUZCgJSdo4lKSNQ0naOJSkjUNJ2jiQ5GzjUJI2DiVp41CSNg4lGUpCkjYOJWnjUJI2DiVp41CSNg4kGTYOJWnjUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVp40CSzcahJG0cStLGoSRtHEoylIQkbRxK0sahJG0cStLGoSRtHEhysXEoSRuHkrRxKEkbh5IMJSFJG4eStHEoSRuHkrRxKEkbB5JcbRxK0sahJG0cStLGoSRDSUjSxqEkbRxK0sahJG0cStLGgSQ3G4eStHEoSRuHkrRxKMlQEpK0cShJG4eStHEoSRuHkrRxIMlu41CSNg4laeNQkjYOJRlKQpI2DiVp41CSNg4laeNQkjYOIzkONg4laeNQkjYOJWnjUJKhJCRp41CSNg4laeNQkjYOJWnjQJKjjUNJ2jiUpI1DSdo4lGQoCUnaOJSkjUNJ2jiUpI1DSdo4kORk41CSNg4laeNQkjYOJRlKQpI2DiVp41CSNg4laeNQkjYOJDnbOJSkjUNJ2jiUpI1DSYaSkKSNQ0naOJSkjUNJ2jiUpI0DSYaNQ0naOJSkjUNJ2jiUZCgJSdo4lKSNQ0naOJSkjUNJ2jiQZLNxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweSXGwcStLGoSRtHErSxqEkQ0lI0sahJG0cStLGoSRtHErSxoEkVxuHkrRxKEkbh5K0cSjJUBKStHEoSRuHkrRxKMnKjXN7b9slp3k7OHrr2y7Zh+HTvT887RvEup93m+fl6+Ef8pWbKFV+q9xQufKVmytXvnKj5cpXbrpc+YfX28PHfzQcmM/btB86b+3Ry6+vffnttS/fX/ryj5/jzb38+MqXn0s/KeCXfmf7MM7339nWf/47e9tvjfcYiR9iZC79WIFE9pA9g73yYi2RvfIWLpG98souj73yHYNbrDtkiz58O/pDp/B7wRM6hX9ln9ApvDl/QqfwdvtYp/JddQ91Wul35WXu+3kv23Jw9Hg7fP/0X4b1kWXl93DasvI7Pm1Z+fMBtiz9aUJbFv4LJW5ZeIv+i5bLF8u+PbIsvBrHLUNLzLLyfom2tHs4S7uHs6zcPX2+byv6Oh9Zrvefcty+/GvbcZweHL22fUxrH4+Ovf+Ew9d/3fDw7wfR4+Pg3trnKd9s9oFWjq8rDrTyHeyvOdDKGXrJgVZu4UsOtHKQX3Kg4UCvNdDKq4lLDrTyfuSSA628pLnkQN0UvWagfT+RbVkPjm3D/g9Cl6EdHPvERF0VPTvRbbl/077HdCA/xufWNb699vQhX/mJHcnyLl+y5N2SZMm7zsiSD+WT5F0QvEa+fd5zaInh6Og+fL52275dg/6VK9bKT0u58FRdFVysLCs/QeaiE/WOZn9Q/vY73bTST77JlfeOZk/K/9rX2pe4f619+XL50HZ2b9CTwu4NelLYQ/YMdm/Qk8LuDXpew/7TO0G30s8NSmT3Btwp7LZqBnvpxxclslupKexWagq7lZrCHrJnsFupKexWagq7lZrCbqWmsFupGew+ICqH3UpNYbdSU9it1BT2kD2D3UpNYbdSU9it1BR2KzWF3UrNYO9Wagq7lZrCbqWmsFupKewhewa7lZrCbqWmsFupKexWagq7lZrAvgxWagq7lZrCbqWmsFupKewhewa7lZrCbqWmsFupKexWagq7lZrBPlqpKexWagq7lZrCbqWmsIfsGexWagq7lZrCbqWmsFupKexWagb7ZKWmsFupKexWagq7lZrCHrJnsFupKexWagq7lZrCbqWmsFupGeyzlZrCbqWmsFupKexWagp7yP4K9nW+PxJljQfsVmoKe+VK3aZlZ9/aeHD04ftG5fBkJSu3JCtZOQ9RyahcfKxk5YhjJSt3GStZObVYyVASkqwcRKykjUNJ2jiUpI1DSdo4kGSzcShJG4eStHEoSRuHkgwlIUkbh5K0cShJG4eStHEoSRsHklxsHErSxqEkbRxK0sahJENJSNLGoSRtHErSxqEkbRxK0saBJFcbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgyc3GoSRtHErSxqEkbRxKMpSEJG0cStLGoSRtHErSxqEkbRxIsts4lKSNQ0naOJSkjUNJhpKQpI1DSdo4lKSNQ0naOJSkjcNIroONQ0naOJSkjUNJ2jiUZCgJSdo4lKSNQ0naOJSkjUNJ2jiQ5GjjUJI2DiVp41CSNg4lGUpCkjYOJWnjUJI2DiVp41CSNg4kOdk4lKSNQ0naOJSkjUNJhpKQpI1DSdo4lKSNQ0naOJSkjQNJzjYOJWnjUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVp40CSYeNQkjYOJWnjUJI2DiUZSkKSNg4laeNQkjYOJWnjUJI2DiTZbBxK0sahJG0cStLGoSRDSUjSxqEkbRxK0sahJG0cStLGgSQXG4eStHEoSRuHkrRxKMlQEpK0cShJG4eStHEoSRuHkrRxIMnVxqEkbRxK0sahJG0cSjKUhCRtHErSxqEkbRxK0sahJG0cSHKzcShJG4eStHEoSRuHkgwlIUkbh5K0cShJG4eStHEoSRsHkuw2DiVp41CSNg4laeNQkqEkJGnjUJI2DiVp41CSNg4laeMwkttg41CSNg4laeNQkjYOJRlKQpI2DiVp41CSNg4laeNQkjYOJDnaOJSkjUNJ2jiUpI1DSYaSkKSNQ0naOJSkjUNJ2jiUpI0DSU42DiVp41CSNg4laeNQkqEkJGnjUJI2DiVp41CSNg4laeNAkrONQ0naOJSkjUNJ2jiUZCgJSdo4lKSNQ0naOJSkjUNJ2jiQZNg4lKSNQ0naOJSkjUNJhpKQpI1DSdo4lKSNQ0naOJSkjQNJNhuHkrRxKEkbh5K0cSjJUBKStHEoSRuHkrRxKEkbh5K0cSDJxcahJG0cStLGoSRtHEoylIQkbRxK0sahJG0cStLGoSRtHEhytXEoSRuHkrRxKEkbh5IMJSFJG4eStHEoSRuHkrRxKEkbB5LcbBxK0sahJG0cStLGoSRDSUjSxqEkbRxK0sahJG0cStLGgSS7jUNJ2jiUpI1DSdo4lGQoCUnaOJSkjUNJ2jiUpI1DSdo4jGQfbBxK0sahJG0cStLGoSRDSUjSxqEkbRxK0sahJG0cStLGgSRHG4eStHEoSRuHkrRxKMlQEpK0cShJG4eStHEoSRuHkrRxIMnJxqEkbRxK0sahJG0cSjKUhCRtHErSxqEkbRxK0sahJG0cSHK2cShJG4eStHEoSRuHkgwlIUkbh5K0cShJG4eStHEoSRsHkgwbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgyWbjUJI2DiVp41CSNg4lGUpCkjYOJWnjUJI2DiVp41CSNg4kudg4lKSNQ0naOJSkjUNJhpKQpI1DSdo4lKSNQ0naOJSkjQNJrjYOJWnjUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVZuXHGdT/vZZq3g6O3vu2SfRg+3fvD075BrPt5t3levh7+p/xWuYly5Ss3VK585ebKla/caLnyoXyS/MPr7eHjPxoOzOdt2g+dt/bo5bfXvnx/6cs/fmQ59/Lja19+euHLt7H0kwJ+6Xe2D+N8/51t/ee/s+M6j/cYiX8bIzd23ypT2CvvyhLZKy/WEtkrb+ES2Suv7PLYK98xuMW6Q7bow7ejP3QKvxc8oVP4V/YJncKb82OdynfgfUKn8Ab6UGcu/a68zH0/72VbDo4eb4fvn/7LsD6yrPweTltWfseHLUt/PtCWlT9NaMvCf6HELQtv0X/Rcvli2bdHlqElZll4341bVt4v0ZZ2D2dp93CWlbunz/dtRV/nI8v1/lOO25d/bTuO04Oj17aPae3j0bH3n3D4+q8bHv79IHp8HNxb+zzlm83HQCvfOv6aA61cgJccaOUMveRAK7fwJQcaDvRaA628FbjkQCuvJi450Mr7kUsOtPKS5pIDdVP0moH2/US2ZT04tg37PwhdhnZw7PFEKz+B4xcnui33b9r3mA7kx/jcusa31552eXc6WfIuX7Lk3ZJkyYfySfLuHbLkXRC8Rr593nNoieHo6D58vnbbvl2D/qUrVrcEV5yqq4KrlaW7gotNtPSTbBLvdHOT945mWfLe0exJ+V/7WvsS96+1L18uH9rO7g16UthD9gx2b9CTwu4NelLYvUHPa9h/difoG7s36Elh9wbcGeyln0iUyG6oprBbqSnsVmoKe8iewW6lprBbqSnsVmoKu5Wawm6lZrD7jKgcdis1hd1KTWG3UlPYQ/YMdis1hd1KTWG3UlPYrdQUdis1g71bqSnsVmoKu5Wawm6lprCH7BnsVmoKu5Wawm6lprBbqSnsVmoCewxWagq7lZrCbqWmsFupKewhewa7lZrCbqWmsFupKexWagq7lZrBPlqpKexWagq7lZrCbqWmsIfsGexWagq7lZrCbqWmsFupKexWagb7ZKWmsFupKexWagq7lZrCHrJnsFupKexWagq7lZrCbqWmsFupGeyzlZrCbqWmsFupKexWagp7yJ7BbqW+hH2d749EWeMBu5Wawl65Urdp2dm3Nh4cffi+UTk8WcnKLYlKRuU8ZCUrFx8rWTniWMnKXcZKhpKQZOV6YiUrBxEraeNQkjYOJWnjQJLNxqEkbRxK0sahJG0cSjKUhCRtHErSxqEkbRxK0sahJG0cSHKxcShJG4eStHEoSRuHkgwlIUkbh5K0cShJG4eStHEoSRsHklxtHErSxqEkbRxK0sahJENJSNLGoSRtHErSxqEkbRxK0saBJDcbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgyW7jUJI2DiVp41CSNg4lGUpCkjYOJWnjUJI2DiVp41CSNg4j2QYbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgydHGoSRtHErSxqEkbRxKMpSEJG0cStLGoSRtHErSxqEkbRxIcrJxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweSnG0cStLGoSRtHErSxqEkQ0lI0sahJG0cStLGoSRtHErSxoEkw8ahJG0cStLGoSRtHEoylIQkbRxK0sahJG0cStLGoSRtHEiy2TiUpI1DSdo4lKSNQ0mGkpCkjUNJ2jiUpI1DSdo4lKSNA0kuNg4laeNQkjYOJWnjUJKhJCRp41CSNg4laeNQkjYOJWnjQJKrjUNJ2jiUpI1DSdo4lGQoCUnaOJSkjUNJ2jiUpI1DSdo4kORm41CSNg4laeNQkjYOJRlKQpI2DiVp41CSNg4laeNQkjYOJNltHErSxqEkbRxK0sahJENJSNLGoSRtHErSxqEkbRxK0sZhJJfBxqEkbRxK0sahJG0cSjKUhCRtHErSxqEkbRxK0sahJG0cSHK0cShJG4eStHEoSRuHkgwlIUkbh5K0cShJG4eStHEoSRsHkpxsHErSxqEkbRxK0sahJENJSNLGoSRtHErSxqEkbRxK0saBJGcbh5K0cShJG4eStHEoyVASkrRxKEkbh5K0cShJG4eStHEgybBxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweSbDYOJWnjUJI2DiVp41CSoSQkaeNQkjYOJWnjUJI2DiVp40CSi41DSdo4lKSNQ0naOJRkKAlJ2jiUpI1DSdo4lKSNQ0naOJDkauNQkjYOJWnjUJI2DiUZSkKSNg4laeNQkjYOJWnjUJI2DiS52TiUpI1DSdo4lKSNQ0mGkpCkjUNJ2jiUpI1DSdo4lKSNA0l2G4eStHEoSRuHkrRxKMlQEpK0cShJG4eStHEoSRuHkrRxGMl1sHEoSRuHkrRxKEkbh5IMJSFJG4eStHEoSRuHkrRxKEkbB5IcbRxK0sahJG0cStLGoSRDSUjSxqEkbRxK0sahJG0cStLGgSQnG4eStHEoSRuHkrRxKMlQEpK0cShJG4eStHEoSRuHkrRxIMnZxqEkbRxK0sahJG0cSjKUhCRtHErSxqEkbRxK0sahJG0cSDJsHErSxqEkbRxK0sahJENJSNLGoSRtHErSxqEkbRxK0saBJJuNQ0naOJSkjUNJ2jiUZCgJSdo4lKSNQ0naOJSkjUNJ2jiQ5GLjUJI2DiVp41CSNg4lGUpCkjYOJWnjUJI2DiVp41CSNg4kudo4lKSNQ0naOJSkjUNJhpKQpI1DSdo4lKSNQ0naOJSkjQNJbpUbZ1z3816meTs4euvbLtmH4dO9PzztG8S6n3eb5+Xr4R/ylZsoV75yQ+XKV26uXPlQPkm+ctPlyj+83h4+/qPhwHzepv3QeWuPXr6/9OUfP52de/nxtS8/vfbl51e+fC/9pIBf+p3twzjff2db//nv7LjO4z1G4ocY6aUfK5DIXnlXlsheebGWyF55C5fIXnlll8de+Y7BLdYdskUfvh39oVP4veAJncK/ssc6le/W+4RO4e32EzqFN9BHOstY+l15mft+3su2HBw93g7fP/2XYX1kWfk9HLYs/Y5PW1b+fKAtK3+a0JaF/0KJW4aWT1ouXyz79siy8Goctyy878YtK++XaEu7h7O0ezDLyvdsv+1q7tuKvs5Hluv9pxy3L//adhynB0evbR/T2sejY+8/4fD1Xzc8/PtB9Pg4uLf2eco3m32glePrkgOtXICXHGjlDL3kQMOBXmuglYP8kgOtvBW45EArryYuOdDK+5FLDrTykuaKA6385IuXDrTvJ7It68Gxbdj/QegytINjn5ioq6JnJ7ot92/a95gO5G+Xm/eta3x77WmXd6eTJe/yJUs+lE+Sd52RJe/eIUveBcFr5NvnPYeWGI6O7sPna7ft2zXoX7pidUtwxam6KrhYWVZ+gsxFJ+odzf6g/N13urnJe0ezLHnvaPak/K99rX2J+9faly+XD21nD9kz2L1BTwq7N+hJYfcGPSns3qDnNew/uxP0jd0b9GSwl37IUCK7rZrCbqimsFupKewhewa7lZrCbqWmsFupKexWagq7lZrB7mOictit1BR2KzWF3UpNYQ/ZM9it1BR2KzWF3UpNYbdSU9it1Az2bqWmsFupKexWagq7lZrCHrJnsFupKexWagq7lZrCbqWmsFupCezTYKWmsFupKexWagq7lZrCHrJnsFupKexWagq7lZrCbqWmsFupGeyjlZrCbqWmsFupKexWagp7yJ7BbqWmsFupKexWagq7lZrCbqVmsE9Wagq7lZrCbqWmsFupKewhewa7lZrCbqWmsFupKexWagq7lZrBPlupKexWagq7lZrCbqWmsIfsGexWagq7lfoS9nW+PxJljQfsVmoKe+VK3aZlZ9/aeHD04ftG5fBEJaNyS7KSlfOQlaxcfKxk5YhjJUNJSLJyarGSleuJlawcRKykjUNJ2jiQZLNxKEkbh5K0cShJG4eSDCUhSRuHkrRxKEkbh5K0cShJGweSXGwcStLGoSRtHErSxqEkQ0lI0sahJG0cStLGoSRtHErSxoEkVxuHkrRxKEkb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"},{"name":"claim_cards","is_unconstrained":false,"custom_attributes":["aztec(private)"],"abi":{"error_types":{},"parameters":[{"name":"inputs","type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"aztec::protocol_types::transaction::tx_context::TxContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::context::inputs::private_context_inputs::PrivateContextInputs"},"visibility":"private"},{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"cards_fields","type":{"kind":"array","length":4,"type":{"kind":"field"}},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"min_revertible_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"is_fee_payer","type":{"kind":"boolean"}},{"name":"max_block_number","type":{"fields":[{"name":"_opt","type":{"fields":[{"name":"_is_some","type":{"kind":"boolean"}},{"name":"_value","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::option::Option"}}],"kind":"struct","path":"aztec::protocol_types::abis::max_block_number::MaxBlockNumber"}},{"name":"note_hash_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"nullifier_read_requests","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::read_request::ReadRequest"}}},{"name":"key_validation_requests_and_generators","type":{"kind":"array","length":16,"type":{"fields":[{"name":"request","type":{"fields":[{"name":"pk_m","type":{"fields":[{"name":"x","type":{"kind":"field"}},{"name":"y","type":{"kind":"field"}},{"name":"is_infinite","type":{"kind":"boolean"}}],"kind":"struct","path":"std::embedded_curve_ops::EmbeddedCurvePoint"}},{"name":"sk_app","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::validation_requests::key_validation_request::KeyValidationRequest"}},{"name":"sk_app_generator","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::validation_requests::key_validation_request_and_generator::KeyValidationRequestAndGenerator"}}},{"name":"note_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::note_hash::NoteHash"}}},{"name":"nullifiers","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::nullifier::Nullifier"}}},{"name":"private_call_requests","type":{"kind":"array","length":4,"type":{"fields":[{"name":"target","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"call_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"function_selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_delegate_call","type":{"kind":"boolean"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::call_context::CallContext"}},{"name":"function_data","type":{"fields":[{"name":"selector","type":{"fields":[{"name":"inner","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::function_selector::FunctionSelector"}},{"name":"is_private","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::function_data::FunctionData"}},{"name":"args_hash","type":{"kind":"field"}},{"name":"returns_hash","type":{"kind":"field"}},{"name":"caller_context","type":{"fields":[{"name":"msg_sender","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"storage_contract_address","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"is_static_call","type":{"kind":"boolean"}}],"kind":"struct","path":"aztec::protocol_types::abis::caller_context::CallerContext"}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::private_call_request::PrivateCallRequest"}}},{"name":"public_call_stack_hashes","type":{"kind":"array","length":16,"type":{"kind":"field"}}},{"name":"public_teardown_function_hash","type":{"kind":"field"}},{"name":"l2_to_l1_msgs","type":{"kind":"array","length":2,"type":{"fields":[{"name":"recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"content","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::messaging::l2_to_l1_message::L2ToL1Message"}}},{"name":"start_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"end_side_effect_counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"note_encrypted_logs_hashes","type":{"kind":"array","length":16,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"note_hash_counter","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::NoteLogHash"}}},{"name":"encrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}},{"name":"randomness","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::EncryptedLogHash"}}},{"name":"unencrypted_logs_hashes","type":{"kind":"array","length":4,"type":{"fields":[{"name":"value","type":{"kind":"field"}},{"name":"counter","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"length","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::log_hash::LogHash"}}},{"name":"historical_header","type":{"fields":[{"name":"last_archive","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"content_commitment","type":{"fields":[{"name":"num_txs","type":{"kind":"field"}},{"name":"txs_effects_hash","type":{"kind":"field"}},{"name":"in_hash","type":{"kind":"field"}},{"name":"out_hash","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::content_commitment::ContentCommitment"}},{"name":"state","type":{"fields":[{"name":"l1_to_l2_message_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"partial","type":{"fields":[{"name":"note_hash_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"nullifier_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}},{"name":"public_data_tree","type":{"fields":[{"name":"root","type":{"kind":"field"}},{"name":"next_available_leaf_index","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::append_only_tree_snapshot::AppendOnlyTreeSnapshot"}}],"kind":"struct","path":"aztec::protocol_types::partial_state_reference::PartialStateReference"}}],"kind":"struct","path":"aztec::protocol_types::state_reference::StateReference"}},{"name":"global_variables","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"block_number","type":{"kind":"field"}},{"name":"timestamp","type":{"kind":"integer","sign":"unsigned","width":64}},{"name":"coinbase","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::eth_address::EthAddress"}},{"name":"fee_recipient","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"gas_fees","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}}],"kind":"struct","path":"aztec::protocol_types::abis::global_variables::GlobalVariables"}},{"name":"total_fees","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::header::Header"}},{"name":"tx_context","type":{"fields":[{"name":"chain_id","type":{"kind":"field"}},{"name":"version","type":{"kind":"field"}},{"name":"gas_settings","type":{"fields":[{"name":"gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"teardown_gas_limits","type":{"fields":[{"name":"da_gas","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"l2_gas","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"aztec::protocol_types::abis::gas::Gas"}},{"name":"max_fees_per_gas","type":{"fields":[{"name":"fee_per_da_gas","type":{"kind":"field"}},{"name":"fee_per_l2_gas","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_fees::GasFees"}},{"name":"inclusion_fee","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::abis::gas_settings::GasSettings"}}],"kind":"struct","path":"aztec::protocol_types::transaction::tx_context::TxContext"}}],"kind":"struct","path":"aztec::protocol_types::abis::private_circuit_public_inputs::PrivateCircuitPublicInputs"},"visibility":"public"}},"bytecode":"","debug_symbols":""},{"name":"view_game_cards","is_unconstrained":true,"custom_attributes":[],"abi":{"error_types":{},"parameters":[{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"player","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"offset","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"storage","type":{"kind":"array","length":10,"type":{"fields":[{"name":"strength","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"points","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"cards::Card"}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::collections::bounded_vec::BoundedVec"},"visibility":"public"}},"bytecode":"","debug_symbols":""},{"name":"view_collection_cards","is_unconstrained":true,"custom_attributes":[],"abi":{"error_types":{},"parameters":[{"name":"owner","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"},"visibility":"private"},{"name":"offset","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"}],"return_type":{"abi_type":{"fields":[{"name":"storage","type":{"kind":"array","length":10,"type":{"fields":[{"name":"strength","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"points","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"cards::Card"}}},{"name":"len","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"std::collections::bounded_vec::BoundedVec"},"visibility":"public"}},"bytecode":"","debug_symbols":"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"}],"outputs":{"globals":{"notes":[{"fields":[{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000071421477"},{"kind":"string","value":"ValueNote"}],"kind":"tuple"}],"storage":[{"fields":[{"name":"collections","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000001"}}],"kind":"struct"}},{"name":"game_decks","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000002"}}],"kind":"struct"}},{"name":"games","value":{"fields":[{"name":"slot","value":{"kind":"integer","sign":false,"value":"0000000000000000000000000000000000000000000000000000000000000003"}}],"kind":"struct"}}],"kind":"struct"}]},"structs":{"functions":[{"fields":[{"name":"parameters","type":{"fields":[{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"card","type":{"fields":[{"name":"strength","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"points","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"cards::Card"}}],"kind":"struct","path":"CardGame::play_card_parameters"}}],"kind":"struct","path":"CardGame::play_card_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"CardGame::start_game_parameters"}}],"kind":"struct","path":"CardGame::start_game_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"seed","type":{"kind":"field"}}],"kind":"struct","path":"CardGame::buy_pack_parameters"}}],"kind":"struct","path":"CardGame::buy_pack_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"cards_fields","type":{"kind":"array","length":4,"type":{"kind":"field"}}}],"kind":"struct","path":"CardGame::claim_cards_parameters"}}],"kind":"struct","path":"CardGame::claim_cards_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"player","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"deck_strength","type":{"kind":"integer","sign":"unsigned","width":32}}],"kind":"struct","path":"CardGame::on_game_joined_parameters"}}],"kind":"struct","path":"CardGame::on_game_joined_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"player","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"cards_hash","type":{"kind":"field"}}],"kind":"struct","path":"CardGame::on_cards_claimed_parameters"}}],"kind":"struct","path":"CardGame::on_cards_claimed_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"cards_fields","type":{"kind":"array","length":2,"type":{"kind":"field"}}}],"kind":"struct","path":"CardGame::join_game_parameters"}}],"kind":"struct","path":"CardGame::join_game_abi"},{"fields":[{"name":"parameters","type":{"fields":[{"name":"game","type":{"kind":"integer","sign":"unsigned","width":32}},{"name":"player","type":{"fields":[{"name":"inner","type":{"kind":"field"}}],"kind":"struct","path":"aztec::protocol_types::address::aztec_address::AztecAddress"}},{"name":"card_as_field","type":{"kind":"field"}}],"kind":"struct","path":"CardGame::on_card_played_parameters"}}],"kind":"struct","path":"CardGame::on_card_played_abi"}]}},"file_map":{"102":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/encrypted_logs/payload.nr","source":"use dep::protocol_types::{\n    address::AztecAddress, scalar::Scalar, point::{Point, pub_key_to_bytes},\n    constants::{GENERATOR_INDEX__IVSK_M, GENERATOR_INDEX__OVSK_M}, hash::poseidon2_hash\n};\n\nuse std::field::bytes32_to_field;\n\nuse crate::oracle::unsafe_rand::unsafe_rand;\n\nuse crate::event::event_interface::EventInterface;\nuse crate::note::note_interface::NoteInterface;\n\nuse crate::encrypted_logs::{\n    header::EncryptedLogHeader, incoming_body::EncryptedLogIncomingBody,\n    outgoing_body::EncryptedLogOutgoingBody\n};\n\npub fn compute_encrypted_event_log<Event, NB, MB, OB>(\n    contract_address: AztecAddress,\n    randomness: Field,\n    ovsk_app: Field,\n    ovpk: Point,\n    ivpk: Point,\n    event: Event\n) -> [u8; OB] where Event: EventInterface<NB, MB> {\n    // @todo Need to draw randomness from the full domain of Fq not only Fr\n    let eph_sk: Scalar = fr_to_fq(unsafe_rand());\n    let eph_pk = eph_sk.derive_public_key();\n\n    // TODO: (#7177) This value needs to be populated!\n    let recipient = AztecAddress::from_field(0);\n\n    let ivpk_app = compute_ivpk_app(ivpk, contract_address);\n\n    let header = EncryptedLogHeader::new(contract_address);\n\n    let incoming_header_ciphertext: [u8; 48] = header.compute_ciphertext(eph_sk, ivpk);\n    let outgoing_Header_ciphertext: [u8; 48] = header.compute_ciphertext(eph_sk, ovpk);\n    let incoming_body_ciphertext = EncryptedLogIncomingBody::from_event(event, randomness).compute_ciphertext(eph_sk, ivpk_app);\n    let outgoing_body_ciphertext: [u8; 176] = EncryptedLogOutgoingBody::new(eph_sk, recipient, ivpk_app).compute_ciphertext(fr_to_fq(ovsk_app), eph_pk);\n\n    let mut encrypted_bytes: [u8; OB] = [0; OB];\n    // @todo We ignore the tags for now \n\n    let eph_pk_bytes = pub_key_to_bytes(eph_pk);\n    for i in 0..64 {\n        encrypted_bytes[64 + i] = eph_pk_bytes[i];\n    }\n    for i in 0..48 {\n        encrypted_bytes[128 + i] = incoming_header_ciphertext[i];\n        encrypted_bytes[176 + i] = outgoing_Header_ciphertext[i];\n    }\n    for i in 0..176 {\n        encrypted_bytes[224 + i] = outgoing_body_ciphertext[i];\n    }\n    // Then we fill in the rest as the incoming body ciphertext\n    let size = OB - 400;\n    assert_eq(size, incoming_body_ciphertext.len(), \"ciphertext length mismatch\");\n    for i in 0..size {\n        encrypted_bytes[400 + i] = incoming_body_ciphertext[i];\n    }\n\n    // Current unoptimized size of the encrypted log\n    // incoming_tag (32 bytes)\n    // outgoing_tag (32 bytes)\n    // eph_pk (64 bytes)\n    // incoming_header (48 bytes)\n    // outgoing_header (48 bytes)\n    // outgoing_body (176 bytes)\n    // incoming_body_fixed (64 bytes)\n    // incoming_body_variable (N * 32 bytes + 16 bytes padding)\n    encrypted_bytes\n}\n\npub fn compute_encrypted_note_log<Note, N, NB, M>(\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    ovsk_app: Field,\n    ovpk: Point,\n    ivpk: Point,\n    note: Note\n) -> [u8; M] where Note: NoteInterface<N, NB> {\n    // @todo Need to draw randomness from the full domain of Fq not only Fr\n    let eph_sk: Scalar = fr_to_fq(unsafe_rand());\n    let eph_pk = eph_sk.derive_public_key();\n\n    // TODO: (#7177) This value needs to be populated!\n    let recipient = AztecAddress::from_field(0);\n\n    let ivpk_app = compute_ivpk_app(ivpk, contract_address);\n\n    let header = EncryptedLogHeader::new(contract_address);\n\n    let incoming_header_ciphertext: [u8; 48] = header.compute_ciphertext(eph_sk, ivpk);\n    let outgoing_Header_ciphertext: [u8; 48] = header.compute_ciphertext(eph_sk, ovpk);\n    let incoming_body_ciphertext = EncryptedLogIncomingBody::from_note(note, storage_slot).compute_ciphertext(eph_sk, ivpk_app);\n    let outgoing_body_ciphertext: [u8; 176] = EncryptedLogOutgoingBody::new(eph_sk, recipient, ivpk_app).compute_ciphertext(fr_to_fq(ovsk_app), eph_pk);\n\n    let mut encrypted_bytes: [u8; M] = [0; M];\n    // @todo We ignore the tags for now \n\n    let eph_pk_bytes = pub_key_to_bytes(eph_pk);\n    for i in 0..64 {\n        encrypted_bytes[64 + i] = eph_pk_bytes[i];\n    }\n    for i in 0..48 {\n        encrypted_bytes[128 + i] = incoming_header_ciphertext[i];\n        encrypted_bytes[176 + i] = outgoing_Header_ciphertext[i];\n    }\n    for i in 0..176 {\n        encrypted_bytes[224 + i] = outgoing_body_ciphertext[i];\n    }\n    // Then we fill in the rest as the incoming body ciphertext\n    let size = M - 400;\n    assert_eq(size, incoming_body_ciphertext.len(), \"ciphertext length mismatch\");\n    for i in 0..size {\n        encrypted_bytes[400 + i] = incoming_body_ciphertext[i];\n    }\n\n    // Current unoptimized size of the encrypted log\n    // incoming_tag (32 bytes)\n    // outgoing_tag (32 bytes)\n    // eph_pk (64 bytes)\n    // incoming_header (48 bytes)\n    // outgoing_header (48 bytes)\n    // outgoing_body (176 bytes)\n    // incoming_body_fixed (64 bytes)\n    // incoming_body_variable (N * 32 bytes + 16 bytes padding)\n    encrypted_bytes\n}\n\n/// Converts a base field elememt to scalar field element.\n/// This is fine because modulus of the base field is smaller than the modulus of the scalar field.\nfn fr_to_fq(r: Field) -> Scalar {\n    let r_bytes = r.to_be_bytes(32);\n\n    let mut high_bytes = [0; 32];\n    let mut low_bytes = [0; 32];\n\n    for i in 0..16 {\n        high_bytes[16 + i] = r_bytes[i];\n        low_bytes[16 + i] = r_bytes[i + 16];\n    }\n\n    let low = bytes32_to_field(low_bytes);\n    let high = bytes32_to_field(high_bytes);\n\n    Scalar::new(low, high)\n}\n\nfn compute_ivpk_app(ivpk: Point, contract_address: AztecAddress) -> Point {\n    // It is useless to compute this, it brings no value to derive fully.\n    // Issue(#6955)\n    ivpk\n    /*\n    // @todo Just setting infinite to false, but it should be checked.\n    // for example user could define ivpk = infinity using the registry\n    assert((ivpk.x != 0) & (ivpk.y != 0), \"ivpk is infinite\");\n\n    let i = fr_to_fq(poseidon2_hash([contract_address.to_field(), ivpk.x, ivpk.y, GENERATOR_INDEX__IVSK_M]));\n    let I = i.derive_public_key();\n\n    let embed_I = Point { x: I.x, y: I.y, is_infinite: false };\n    let embed_ivpk = Point { x: ivpk.x, y: ivpk.y, is_infinite: false };\n\n    let embed_result = embedded_curve_add(embed_I, embed_ivpk);\n\n    Point::new(embed_result.x, embed_result.y)*/\n}\n"},"103":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/encrypted_logs/encrypted_note_emission.nr","source":"use crate::{\n    context::PrivateContext, note::{note_emission::NoteEmission, note_interface::NoteInterface},\n    encrypted_logs::payload::compute_encrypted_note_log, oracle::logs_traits::LensForEncryptedLog\n};\nuse dep::protocol_types::{\n    hash::sha256_to_field, address::AztecAddress, point::Point, abis::note_hash::NoteHash,\n    constants::MAX_NOTE_HASHES_PER_CALL, utils::arrays::find_index\n};\n\nunconstrained fn compute_unconstrained<Note, N, NB, M>(\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    ovsk_app: Field,\n    ovpk: Point,\n    ivpk: Point,\n    note: Note\n) -> ([u8; M], Field) where Note: NoteInterface<N, NB>, [Field; N]: LensForEncryptedLog<N, M> {\n    compute(contract_address, storage_slot, ovsk_app, ovpk, ivpk, note)\n}\n\nfn compute<Note, N, NB, M>(\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    ovsk_app: Field,\n    ovpk: Point,\n    ivpk: Point,\n    note: Note\n) -> ([u8; M], Field) where Note: NoteInterface<N, NB>, [Field; N]: LensForEncryptedLog<N, M> {\n    let encrypted_log: [u8; M] = compute_encrypted_note_log(contract_address, storage_slot, ovsk_app, ovpk, ivpk, note);\n    let log_hash = sha256_to_field(encrypted_log);\n    (encrypted_log, log_hash)\n}\n\nfn emit_with_keys<Note, N, NB, M>(\n    context: &mut PrivateContext,\n    note: Note,\n    ovpk: Point,\n    ivpk: Point,\n    inner_compute: fn(AztecAddress, Field, Field, Point, Point, Note) -> ([u8; M], Field)\n) where Note: NoteInterface<N, NB>, [Field; N]: LensForEncryptedLog<N, M> {\n    let note_header = note.get_header();\n    let note_hash_counter = note_header.note_hash_counter;\n    let storage_slot = note_header.storage_slot;\n\n    let note_exists_index = find_index(\n        context.note_hashes.storage,\n        |n: NoteHash| n.counter == note_hash_counter\n    );\n    assert(\n        note_exists_index as u32 != MAX_NOTE_HASHES_PER_CALL, \"Can only emit a note log for an existing note.\"\n    );\n\n    let contract_address: AztecAddress = context.this_address();\n    let ovsk_app: Field  = context.request_ovsk_app(ovpk.hash());\n\n    let (encrypted_log, log_hash) = inner_compute(contract_address, storage_slot, ovsk_app, ovpk, ivpk, note);\n\n    context.emit_raw_note_log(note_hash_counter, encrypted_log, log_hash);\n}\n\npub fn encode_and_encrypt_note<Note, N, NB, M>(\n    context: &mut PrivateContext,\n    ov: AztecAddress,\n    iv: AztecAddress\n) -> fn[(&mut PrivateContext, AztecAddress, AztecAddress)](NoteEmission<Note>) -> () where Note: NoteInterface<N, NB>, [Field; N]: LensForEncryptedLog<N, M> {\n    | e: NoteEmission<Note> | {\n        let header = context.get_header();\n        let ovpk = header.get_ovpk_m(context, ov);\n        let ivpk = header.get_ivpk_m(context, iv);\n        emit_with_keys(context, e.note, ovpk, ivpk, compute);\n    }\n}\n\npub fn encode_and_encrypt_note_unconstrained<Note, N, NB, M>(\n    context: &mut PrivateContext,\n    ov: AztecAddress,\n    iv: AztecAddress\n) -> fn[(&mut PrivateContext, AztecAddress, AztecAddress)](NoteEmission<Note>) -> () where Note: NoteInterface<N, NB>, [Field; N]: LensForEncryptedLog<N, M> {\n    | e: NoteEmission<Note> | {\n        let header = context.get_header();\n        let ovpk = header.get_ovpk_m(context, ov);\n        let ivpk = header.get_ivpk_m(context, iv);\n        emit_with_keys(context, e.note, ovpk, ivpk, compute_unconstrained);\n    }\n}\n\npub fn encode_and_encrypt_note_with_keys<Note, N, NB, M>(\n    context: &mut PrivateContext,\n    ovpk: Point,\n    ivpk: Point\n) -> fn[(&mut PrivateContext, Point, Point)](NoteEmission<Note>) -> () where Note: NoteInterface<N, NB>, [Field; N]: LensForEncryptedLog<N, M> {\n    | e: NoteEmission<Note> | {\n        emit_with_keys(context, e.note, ovpk, ivpk, compute);\n    }\n}\n\npub fn encode_and_encrypt_note_with_keys_unconstrained<Note, N, NB, M>(\n    context: &mut PrivateContext,\n    ovpk: Point,\n    ivpk: Point\n) -> fn[(&mut PrivateContext, Point, Point)](NoteEmission<Note>) -> () where Note: NoteInterface<N, NB>, [Field; N]: LensForEncryptedLog<N, M> {\n    | e: NoteEmission<Note> | {\n        emit_with_keys(context, e.note, ovpk, ivpk, compute_unconstrained);\n    }\n}\n"},"104":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/encrypted_logs/outgoing_body.nr","source":"use dep::protocol_types::{\n    address::AztecAddress, scalar::Scalar, point::Point, constants::GENERATOR_INDEX__SYMMETRIC_KEY,\n    hash::poseidon2_hash\n};\n\nuse std::aes128::aes128_encrypt;\n\nuse crate::keys::point_to_symmetric_key::point_to_symmetric_key;\n\nstruct EncryptedLogOutgoingBody {\n    eph_sk: Scalar,\n    recipient: AztecAddress,\n    recipient_ivpk_app: Point,\n}\n\nimpl EncryptedLogOutgoingBody {\n    pub fn new(eph_sk: Scalar, recipient: AztecAddress, recipient_ivpk_app: Point) -> Self {\n        Self { eph_sk, recipient, recipient_ivpk_app }\n    }\n\n    pub fn compute_ciphertext(self, ovsk_app: Scalar, eph_pk: Point) -> [u8; 176] {\n        // Again, we could compute `eph_pk` here, but we keep the interface more similar\n        // and also make it easier to optimise it later as we just pass it along\n\n        let mut buffer: [u8; 160] = [0; 160];\n\n        let serialized_eph_sk_high = self.eph_sk.hi.to_be_bytes(32);\n        let serialized_eph_sk_low = self.eph_sk.lo.to_be_bytes(32);\n\n        let address_bytes = self.recipient.to_field().to_be_bytes(32);\n        let serialized_recipient_ivpk_app = self.recipient_ivpk_app.serialize();\n        let serialized_recipient_ivpk_app_x = serialized_recipient_ivpk_app[0].to_be_bytes(32);\n        let serialized_recipient_ivpk_app_y = serialized_recipient_ivpk_app[1].to_be_bytes(32);\n\n        for i in 0..32 {\n            buffer[i] = serialized_eph_sk_high[i];\n            buffer[i + 32] = serialized_eph_sk_low[i];\n            buffer[i + 64] = address_bytes[i];\n            buffer[i + 96] = serialized_recipient_ivpk_app_x[i];\n            buffer[i + 128] = serialized_recipient_ivpk_app_y[i];\n        }\n\n        // We compute the symmetric key using poseidon.\n        let full_key: [u8; 32] = poseidon2_hash(\n            [\n            ovsk_app.hi, ovsk_app.lo, eph_pk.x, eph_pk.y,\n            GENERATOR_INDEX__SYMMETRIC_KEY as Field\n        ]\n        ).to_be_bytes(32).as_array();\n\n        let mut sym_key = [0; 16];\n        let mut iv = [0; 16];\n\n        for i in 0..16 {\n            sym_key[i] = full_key[i];\n            iv[i] = full_key[i + 16];\n        }\n        aes128_encrypt(buffer, iv, sym_key).as_array()\n    }\n}\n\nmod test {\n    use crate::encrypted_logs::outgoing_body::EncryptedLogOutgoingBody;\n    use dep::protocol_types::{\n        address::AztecAddress, traits::Empty, constants::GENERATOR_INDEX__NOTE_NULLIFIER,\n        scalar::Scalar, point::Point, hash::poseidon2_hash\n    };\n\n    use crate::context::PrivateContext;\n\n    #[test]\n    fn test_encrypted_log_outgoing_body() {\n        let eph_sk = Scalar::new(\n            0x00000000000000000000000000000000d0d302ee245dfaf2807e604eec4715fe,\n            0x000000000000000000000000000000000f096b423017226a18461115fa8d34bb\n        );\n        let recipient_ivsk_app = Scalar::new(\n            0x000000000000000000000000000000004828f8f95676ebb481df163f87fd4022,\n            0x000000000000000000000000000000000f4d97c25d578f9348251a71ca17ae31\n        );\n        let sender_ovsk_app = Scalar::new(\n            0x0000000000000000000000000000000074d2e28c6bc5176ac02cf7c7d36a444e,\n            0x00000000000000000000000000000000089c6887cb1446d86c64e81afc78048b\n        );\n\n        let eph_pk = eph_sk.derive_public_key();\n        let recipient_ivpk_app = recipient_ivsk_app.derive_public_key();\n\n        let recipient = AztecAddress::from_field(0xdeadbeef);\n\n        let body = EncryptedLogOutgoingBody::new(eph_sk, recipient, recipient_ivpk_app);\n\n        let ciphertext = body.compute_ciphertext(sender_ovsk_app, eph_pk);\n\n        let expected_outgoing_body_ciphertext = [\n            127, 84, 96, 176, 101, 107, 236, 57, 68, 8, 53, 202, 138, 74, 186, 54, 74, 193, 245, 7, 109, 59, 218, 33, 1, 31, 205, 225, 241, 209, 64, 222, 94, 245, 4, 150, 47, 241, 187, 64, 152, 20, 102, 158, 200, 217, 213, 82, 1, 240, 170, 185, 51, 80, 27, 109, 63, 231, 235, 120, 174, 44, 133, 248, 10, 97, 60, 40, 222, 190, 147, 76, 187, 48, 91, 206, 48, 106, 56, 118, 38, 127, 82, 4, 182, 188, 44, 224, 31, 129, 47, 107, 134, 252, 20, 25, 122, 191, 158, 69, 35, 255, 215, 171, 196, 45, 91, 184, 83, 80, 238, 201, 1, 233, 235, 159, 171, 130, 158, 64, 176, 165, 132, 30, 84, 81, 71, 195, 145, 47, 82, 247, 210, 192, 23, 4, 220, 90, 56, 109, 46, 105, 79, 251, 165, 141, 185, 233, 191, 118, 219, 153, 191, 162, 99, 238, 241, 249, 9, 74, 210, 241, 54, 28, 126, 226, 85, 235, 174, 75, 239, 207, 100, 184, 248, 194\n        ];\n\n        for i in 0..expected_outgoing_body_ciphertext.len() {\n            assert_eq(ciphertext[i], expected_outgoing_body_ciphertext[i]);\n        }\n        assert_eq(expected_outgoing_body_ciphertext.len(), ciphertext.len());\n    }\n}\n"},"105":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/encrypted_logs/header.nr","source":"use dep::protocol_types::{address::AztecAddress, scalar::Scalar, point::Point};\n\nuse crate::keys::point_to_symmetric_key::point_to_symmetric_key;\n\nuse std::aes128::aes128_encrypt;\n\nstruct EncryptedLogHeader {\n    address: AztecAddress,\n}\n\nimpl EncryptedLogHeader {\n    fn new(address: AztecAddress) -> Self {\n        EncryptedLogHeader { address }\n    }\n\n    fn compute_ciphertext(self, secret: Scalar, point: Point) -> [u8; 48] {\n        let full_key = point_to_symmetric_key(secret, point);\n        let mut sym_key = [0; 16];\n        let mut iv = [0; 16];\n\n        for i in 0..16 {\n            sym_key[i] = full_key[i];\n            iv[i] = full_key[i + 16];\n        }\n\n        let input: [u8; 32] = self.address.to_field().to_be_bytes(32).as_array();\n        aes128_encrypt(input, iv, sym_key).as_array()\n    }\n}\n\n#[test]\nfn test_encrypted_log_header() {\n    let address = AztecAddress::from_field(0xdeadbeef);\n    let header = EncryptedLogHeader::new(address);\n    let secret = Scalar::new(\n        0x00000000000000000000000000000000649e7ca01d9de27b21624098b897babd,\n        0x0000000000000000000000000000000023b3127c127b1f29a7adff5cccf8fb06\n    );\n    let point = Point::new(\n        0x2688431c705a5ff3e6c6f2573c9e3ba1c1026d2251d0dbbf2d810aa53fd1d186,\n        0x1e96887b117afca01c00468264f4f80b5bb16d94c1808a448595f115556e5c8e,\n        false\n    );\n\n    let ciphertext = header.compute_ciphertext(secret, point);\n\n    let expected_header_ciphertext = [\n        228, 9, 65, 81, 62, 59, 249, 207, 90, 196, 206, 72, 39, 199, 82, 196, 23, 131, 32, 226, 26, 176, 43, 39, 239, 177, 177, 192, 85, 216, 17, 15, 18, 187, 35, 225, 135, 192, 63, 88, 29, 173, 232, 46, 72, 82, 187, 139\n    ];\n\n    assert_eq(ciphertext, expected_header_ciphertext);\n}\n"},"106":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/encrypted_logs/incoming_body.nr","source":"use crate::note::note_interface::NoteInterface;\nuse crate::event::event_interface::EventInterface;\nuse dep::protocol_types::{scalar::Scalar, point::Point};\n\nuse std::aes128::aes128_encrypt;\nuse crate::keys::point_to_symmetric_key::point_to_symmetric_key;\n\nstruct EncryptedLogIncomingBody<M> {\n    plaintext: [u8; M]\n}\n\nimpl<M> EncryptedLogIncomingBody<M> {\n    pub fn from_note<T, N>(note: T, storage_slot: Field) -> Self where T: NoteInterface<N, M> {\n        let mut plaintext = note.to_be_bytes(storage_slot);\n        EncryptedLogIncomingBody { plaintext }\n    }\n\n    pub fn from_event<T, MR>(event: T, randomness: Field) -> Self where T: EventInterface<M, MR> {\n        let mut plaintext = event.private_to_be_bytes(randomness);\n        EncryptedLogIncomingBody { plaintext }\n    }\n\n    pub fn compute_ciphertext(self, eph_sk: Scalar, ivpk_app: Point) -> [u8] {\n        let full_key = point_to_symmetric_key(eph_sk, ivpk_app);\n        let mut sym_key = [0; 16];\n        let mut iv = [0; 16];\n\n        for i in 0..16 {\n            sym_key[i] = full_key[i];\n            iv[i] = full_key[i + 16];\n        }\n        aes128_encrypt(self.plaintext, iv, sym_key)\n    }\n}\n\nmod test {\n    use crate::encrypted_logs::incoming_body::EncryptedLogIncomingBody;\n    use dep::protocol_types::{\n        address::AztecAddress, traits::Empty, constants::GENERATOR_INDEX__NOTE_NULLIFIER,\n        scalar::Scalar, point::Point, traits::Serialize, abis::event_selector::EventSelector\n    };\n\n    use crate::{\n        note::{note_header::NoteHeader, note_interface::NoteInterface},\n        event::event_interface::EventInterface, oracle::unsafe_rand::unsafe_rand,\n        context::PrivateContext\n    };\n\n    struct AddressNote {\n        address: AztecAddress,\n        owner: AztecAddress,\n        randomness: Field,\n        header: NoteHeader,\n    }\n\n    global ADDRESS_NOTE_LEN: Field = 3;\n    global ADDRESS_NOTE_BYTES_LEN = 32 * 3 + 64;\n\n    impl NoteInterface<ADDRESS_NOTE_LEN, ADDRESS_NOTE_BYTES_LEN> for AddressNote {\n        fn compute_note_content_hash(self) -> Field {1}\n\n        fn get_note_type_id() -> Field {\n            1\n        }\n\n        fn get_header(self) -> NoteHeader { self.header}\n\n        fn set_header(&mut self, header: NoteHeader) {self.header = header; }\n\n        fn compute_note_hash_and_nullifier(self, context: &mut PrivateContext) -> (Field, Field) {\n            (1, 1)\n        }\n\n        fn compute_note_hash_and_nullifier_without_context(self) -> (Field, Field) {(1,1)}\n\n        fn serialize_content(self) -> [Field; ADDRESS_NOTE_LEN] { [self.address.to_field(), self.owner.to_field(), self.randomness]}\n\n        fn deserialize_content(fields: [Field; ADDRESS_NOTE_LEN]) -> Self {\n            AddressNote { address: AztecAddress::from_field(fields[0]), owner: AztecAddress::from_field(fields[1]), randomness: fields[2], header: NoteHeader::empty() }\n        }\n\n        fn to_be_bytes(self, storage_slot: Field) -> [u8; ADDRESS_NOTE_BYTES_LEN] {\n            let serialized_note = self.serialize_content();\n\n            let mut buffer: [u8; ADDRESS_NOTE_BYTES_LEN] = [0; ADDRESS_NOTE_BYTES_LEN];\n\n            let storage_slot_bytes = storage_slot.to_be_bytes(32);\n            let note_type_id_bytes = AddressNote::get_note_type_id().to_be_bytes(32);\n\n            for i in 0..32 {\n                buffer[i] = storage_slot_bytes[i];\n                buffer[32 + i] = note_type_id_bytes[i];\n            }\n\n            for i in 0..serialized_note.len() {\n                let bytes = serialized_note[i].to_be_bytes(32);\n                for j in 0..32 {\n                    buffer[64 + i * 32 + j] = bytes[j];\n                }\n            }\n            buffer\n        }\n    }\n\n    impl AddressNote {\n        pub fn new(address: AztecAddress, owner: AztecAddress, randomness: Field) -> Self {\n            AddressNote { address, owner, randomness, header: NoteHeader::empty() }\n        }\n    }\n\n    #[test]\n    fn test_encrypted_note_log_incoming_body() {\n        let note = AddressNote::new(\n            AztecAddress::from_field(0x1),\n            AztecAddress::from_field(0x2),\n            3\n        );\n\n        let storage_slot = 2;\n\n        let eph_sk = Scalar::new(\n            0x00000000000000000000000000000000649e7ca01d9de27b21624098b897babd,\n            0x0000000000000000000000000000000023b3127c127b1f29a7adff5cccf8fb06\n        );\n        let ivpk_app = Point::new(\n            0x2688431c705a5ff3e6c6f2573c9e3ba1c1026d2251d0dbbf2d810aa53fd1d186,\n            0x1e96887b117afca01c00468264f4f80b5bb16d94c1808a448595f115556e5c8e,\n            false\n        );\n\n        let body = EncryptedLogIncomingBody::from_note(note, storage_slot);\n\n        let ciphertext = body.compute_ciphertext(eph_sk, ivpk_app);\n\n        let expected_note_body_ciphertext = [\n            228, 9, 65, 81, 62, 59, 249, 207, 90, 196, 206, 72, 39, 199, 82, 196, 63, 127, 188, 251, 150, 188, 238, 205, 3, 86, 102, 164, 175, 12, 137, 158, 163, 111, 205, 10, 229, 230, 46, 202, 110, 107, 156, 180, 67, 192, 161, 201, 48, 153, 169, 1, 25, 182, 93, 39, 39, 207, 251, 218, 234, 147, 156, 13, 110, 180, 190, 199, 41, 6, 211, 203, 176, 110, 165, 186, 110, 127, 199, 22, 201, 149, 92, 249, 219, 68, 145, 68, 179, 29, 233, 34, 98, 123, 197, 234, 169, 53, 44, 14, 81, 60, 92, 27, 250, 134, 49, 248, 57, 119, 236, 118, 158, 104, 82, 243, 98, 164, 60, 72, 74, 27, 177, 194, 221, 225, 193, 150, 67, 235, 205, 106, 150, 24, 126, 186, 220, 178, 199, 189, 113, 54, 181, 55, 46, 15, 236, 236, 9, 159, 5, 172, 237, 154, 110, 50, 241, 64, 92, 13, 37, 53, 20, 140, 42, 146, 229, 63, 97, 25, 159, 63, 235, 104, 68, 100\n        ];\n\n        assert_eq(expected_note_body_ciphertext.len(), ciphertext.len());\n\n        for i in 0..expected_note_body_ciphertext.len() {\n            assert_eq(ciphertext[i], expected_note_body_ciphertext[i]);\n        }\n    }\n\n    struct TestEvent {\n        value0: Field,\n        value1: Field,\n        value2: Field,\n    }\n\n    impl Serialize<3> for TestEvent {\n        fn serialize(self) -> [Field; 3] {\n            [self.value0, self.value1, self.value2]\n        }\n    }\n\n    global TEST_EVENT_LEN: Field = 3;\n    global TEST_EVENT_BYTES_LEN = 32 * 3 + 64;\n    global TEST_EVENT_BYTES_LEN_WITHOUT_RANDOMNESS = 32 * 3 + 32;\n\n    impl EventInterface<TEST_EVENT_BYTES_LEN, TEST_EVENT_BYTES_LEN_WITHOUT_RANDOMNESS> for TestEvent {\n        fn get_event_type_id() -> EventSelector {\n            EventSelector::from_signature(\"TestEvent(Field,Field,Field)\")\n        }\n\n        fn private_to_be_bytes(self, randomness: Field) -> [u8; TEST_EVENT_BYTES_LEN] {\n            let mut buffer: [u8; TEST_EVENT_BYTES_LEN] = [0; TEST_EVENT_BYTES_LEN];\n\n            let randomness_bytes = randomness.to_be_bytes(32);\n            let event_type_id_bytes = TestEvent::get_event_type_id().to_field().to_be_bytes(32);\n\n            for i in 0..32 {\n                buffer[i] = randomness_bytes[i];\n                buffer[32 + i] = event_type_id_bytes[i];\n            }\n\n            let serialized_event = self.serialize();\n\n            for i in 0..serialized_event.len() {\n                let bytes = serialized_event[i].to_be_bytes(32);\n                for j in 0..32 {\n                    buffer[64 + i * 32 + j] = bytes[j];\n                }\n            }\n\n            buffer\n        }\n\n        fn to_be_bytes(self) -> [u8; TEST_EVENT_BYTES_LEN_WITHOUT_RANDOMNESS] {\n             let mut buffer: [u8; TEST_EVENT_BYTES_LEN_WITHOUT_RANDOMNESS] = [0; TEST_EVENT_BYTES_LEN_WITHOUT_RANDOMNESS];\n\n             let event_type_id_bytes = TestEvent::get_event_type_id().to_field().to_be_bytes(32);\n\n             for i in 0..32 {\n                 buffer[i] = event_type_id_bytes[i];\n            }\n\n             let serialized_event = self.serialize();\n\n             for i in 0..serialized_event.len() {\n                 let bytes = serialized_event[i].to_be_bytes(32);\n                 for j in 0..32 {\n                     buffer[32 + i * 32 + j] = bytes[j];\n                }\n            }\n\n             buffer\n        }\n\n        fn emit<Env>(self, _emit: fn[Env](Self) -> ()) {\n            _emit(self);\n        }\n    }\n\n    #[test]\n    fn test_encrypted_log_event_incoming_body() {\n        let test_event = TestEvent { value0: 1, value1: 2, value2: 3 };\n\n        let eph_sk = Scalar::new(\n            0x00000000000000000000000000000000649e7ca01d9de27b21624098b897babd,\n            0x0000000000000000000000000000000023b3127c127b1f29a7adff5cccf8fb06\n        );\n\n        let ivpk_app = Point::new(\n            0x2688431c705a5ff3e6c6f2573c9e3ba1c1026d2251d0dbbf2d810aa53fd1d186,\n            0x1e96887b117afca01c00468264f4f80b5bb16d94c1808a448595f115556e5c8e,\n            false\n        );\n\n        let randomness = 2;\n\n        let body = EncryptedLogIncomingBody::from_event(test_event, randomness);\n\n        let ciphertext = body.compute_ciphertext(eph_sk, ivpk_app);\n\n        let expected_event_body_ciphertext = [\n            228, 9, 65, 81, 62, 59, 249, 207, 90, 196, 206, 72, 39, 199, 82, 196, 63, 127, 188, 251, 150, 188, 238, 205, 3, 86, 102, 164, 175, 12, 137, 158, 163, 111, 205, 10, 229, 230, 46, 202, 110, 107, 156, 180, 67, 192, 161, 201, 66, 122, 29, 35, 42, 33, 153, 216, 199, 208, 103, 207, 126, 153, 189, 136, 19, 220, 238, 15, 169, 29, 255, 11, 123, 107, 70, 192, 53, 40, 36, 93, 187, 32, 123, 136, 104, 23, 229, 245, 152, 90, 84, 2, 136, 112, 42, 27, 82, 214, 104, 14, 250, 48, 199, 245, 88, 22, 200, 77, 38, 51, 127, 56, 138, 255, 16, 46, 179, 129, 215, 185, 185, 116, 148, 16, 133, 62, 56, 180, 10, 132, 109, 77, 206, 199, 21, 167, 7, 163, 171, 158, 244, 23, 18, 121, 108, 42, 107, 7, 48, 84, 212, 104, 39, 16, 109, 7, 108, 129, 60, 80, 112, 241, 223, 140, 186, 158, 38, 74, 230, 213, 159, 175, 142, 228, 128, 160\n        ];\n\n        assert_eq(expected_event_body_ciphertext.len(), ciphertext.len());\n\n        for i in 0..expected_event_body_ciphertext.len() {\n            assert_eq(ciphertext[i], expected_event_body_ciphertext[i]);\n        }\n    }\n}\n"},"110":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/note/note_getter/mod.nr","source":"use dep::protocol_types::{constants::{MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, GET_NOTES_ORACLE_RETURN_LENGTH}};\nuse crate::context::PrivateContext;\nuse crate::note::{\n    constants::{GET_NOTE_ORACLE_RETURN_LENGTH, MAX_NOTES_PER_PAGE, VIEW_NOTE_ORACLE_RETURN_LENGTH},\n    note_getter_options::{NoteGetterOptions, Select, Sort, SortOrder, Comparator, NoteStatus, PropertySelector},\n    note_interface::NoteInterface, note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_request\n};\nuse crate::oracle;\n\nmod test;\n\nfn extract_property_value_from_selector<N>(\n    serialized_note: [Field; N],\n    selector: PropertySelector\n) -> Field {\n    // Selectors use PropertySelectors in order to locate note properties inside the serialized note. \n    // This allows easier packing and custom (de)serialization schemas. A note property is located\n    // inside the serialized note using the index inside the array, a byte offset and a length.\n    let value = serialized_note[selector.index].to_be_bytes(32);\n    let offset = selector.offset;\n    let length = selector.length;\n    let mut value_field = 0 as Field;\n    let mut acc: Field = 1;\n    for i in 0..32 {\n        if i < length {\n            value_field += value[31 + offset - i] as Field * acc;\n            acc = acc * 256;\n        }\n    }\n    value_field\n}\n\nfn check_note_header<Note, N, M>(\n    context: PrivateContext,\n    storage_slot: Field,\n    note: Note\n) where Note: NoteInterface<N, M> {\n    let header = note.get_header();\n    let contract_address = context.this_address();\n    assert(header.contract_address.eq(contract_address), \"Mismatch note header contract address.\");\n    assert(header.storage_slot == storage_slot, \"Mismatch note header storage slot.\");\n}\n\nfn check_note_fields<N>(serialized_note: [Field; N], selects: BoundedVec<Option<Select>, N>) {\n    for i in 0..selects.len {\n        let select = selects.get_unchecked(i).unwrap_unchecked();\n        let value_field = extract_property_value_from_selector(serialized_note, select.property_selector);\n\n        // Values are computed ahead of time because circuits evaluate all branches\n        let is_equal = value_field == select.value.to_field();\n        let is_lt = value_field.lt(select.value.to_field());\n\n        if (select.comparator == Comparator.EQ) {\n            assert(is_equal, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.NEQ) {\n            assert(!is_equal, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.LT) {\n            assert(is_lt, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.LTE) {\n            assert(is_lt | is_equal, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.GT) {\n            assert(!is_lt & !is_equal, \"Mismatch return note field.\");\n        } else if (select.comparator == Comparator.GTE) {\n            assert(!is_lt, \"Mismatch return note field.\");\n        }\n    }\n}\n\nfn check_notes_order<N>(\n    fields_0: [Field; N],\n    fields_1: [Field; N],\n    sorts: BoundedVec<Option<Sort>, N>\n) {\n    for i in 0..sorts.len {\n        let sort = sorts.get_unchecked(i).unwrap_unchecked();\n        let field_0 = extract_property_value_from_selector(fields_0, sort.property_selector);\n        let field_1 = extract_property_value_from_selector(fields_1, sort.property_selector);\n        let eq = field_0 == field_1;\n        let lt = field_0.lt(field_1);\n        if sort.order == SortOrder.ASC {\n            assert(eq | lt, \"Return notes not sorted in ascending order.\");\n        } else if !eq {\n            assert(!lt, \"Return notes not sorted in descending order.\");\n        }\n    }\n}\n\npub fn get_note<Note, N, M>(\n    context: &mut PrivateContext,\n    storage_slot: Field\n) -> Note where Note: NoteInterface<N, M> {\n    let note = get_note_internal(storage_slot);\n\n    check_note_header(*context, storage_slot, note);\n\n    let note_hash_for_read_request = compute_note_hash_for_read_request(note);\n\n    context.push_note_hash_read_request(note_hash_for_read_request);\n    note\n}\n\npub fn get_notes<Note, N, M, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    options: NoteGetterOptions<Note, N, M, FILTER_ARGS>\n) -> BoundedVec<Note, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL> where Note: NoteInterface<N, M> {\n    let opt_notes = get_notes_internal(storage_slot, options);\n\n    constrain_get_notes_internal(context, storage_slot, opt_notes, options)\n}\n\nfn constrain_get_notes_internal<Note, N, M, FILTER_ARGS>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    opt_notes: [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    options: NoteGetterOptions<Note, N, M, FILTER_ARGS>\n) -> BoundedVec<Note, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL> where Note: NoteInterface<N, M> {\n    let mut returned_notes = BoundedVec::new();\n\n    // The filter is applied first to avoid pushing note read requests for notes we're not interested in. Note that\n    // while the filter function can technically mutate the contents of the notes (as opposed to simply removing some),\n    // the private kernel will later validate that these note actually exist, so transformations would cause for that\n    // check to fail.\n    let filter_fn = options.filter;\n    let filter_args = options.filter_args;\n    let filtered_notes = filter_fn(opt_notes, filter_args);\n\n    let mut prev_fields = [0; N];\n    for i in 0..options.limit {\n        let opt_note = filtered_notes[i];\n        if opt_note.is_some() {\n            let note = opt_note.unwrap_unchecked();\n            let fields = note.serialize_content();\n            check_note_header(*context, storage_slot, note);\n            check_note_fields(fields, options.selects);\n            if i != 0 {\n                check_notes_order(prev_fields, fields, options.sorts);\n            }\n            prev_fields = fields;\n\n            let note_hash_for_read_request = compute_note_hash_for_read_request(note);\n            // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1410): test to ensure\n            // failure if malicious oracle injects 0 nonce here for a \"pre-existing\" note.\n            context.push_note_hash_read_request(note_hash_for_read_request);\n\n            // The below code is used to collapse a sparse array into one where the values are guaranteed to be at the \n            // front of the array. This is highly useful because the caller knows that the returned array won't have\n            // more than option.limits notes, and can therefore loop over this limit value instead of the entire array,\n            // resulting in a smaller circuit and faster proving times.\n            // We write at returned_notes[num_notes] because num_notes is only advanced when we have a value in \n            // filtered_notes.\n            returned_notes.push(note);\n        };\n    }\n\n    // As long as we only loop till `options.limit` the array will be guaranteed to be at most of length `options.limit`.\n    assert(returned_notes.len() <= options.limit, \"Got more notes than limit.\");\n    // We will however check that nothing else was returned after the limit.\n    for i in options.limit..filtered_notes.len() {\n        assert(filtered_notes[i].is_none(), \"Got more notes than limit.\");\n    }\n\n    assert(returned_notes.len() != 0, \"Cannot return zero notes\");\n\n    returned_notes\n}\n\nunconstrained fn get_note_internal<Note, N, M>(storage_slot: Field) -> Note where Note: NoteInterface<N, M> {\n    let placeholder_note = [Option::none()];\n    let placeholder_fields = [0; GET_NOTE_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n    oracle::notes::get_notes(\n        storage_slot,\n        0,\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        [],\n        1, // limit\n        0, // offset\n        NoteStatus.ACTIVE,\n        placeholder_note,\n        placeholder_fields,\n        placeholder_note_length\n    )[0].unwrap() // Notice: we don't allow dummies to be returned from get_note (singular).\n}\n\nunconstrained fn get_notes_internal<Note, N, M, FILTER_ARGS>(\n    storage_slot: Field,\n    options: NoteGetterOptions<Note, N, M, FILTER_ARGS>\n) -> [Option<Note>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] where Note: NoteInterface<N, M> {\n    // This function simply performs some transformations from NoteGetterOptions into the types required by the oracle.\n\n    let (num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTE_HASH_READ_REQUESTS_PER_CALL];\n    let placeholder_fields = [0; GET_NOTES_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n\n    oracle::notes::get_notes(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        options.limit,\n        options.offset,\n        options.status,\n        placeholder_opt_notes,\n        placeholder_fields,\n        placeholder_note_length\n    )\n}\n\nunconstrained pub fn view_notes<Note, N, M>(\n    storage_slot: Field,\n    options: NoteViewerOptions<Note, N, M>\n) -> BoundedVec<Note, MAX_NOTES_PER_PAGE> where Note: NoteInterface<N, M> {\n    let (num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order) = flatten_options(options.selects, options.sorts);\n    let placeholder_opt_notes = [Option::none(); MAX_NOTES_PER_PAGE];\n    let placeholder_fields = [0; VIEW_NOTE_ORACLE_RETURN_LENGTH];\n    let placeholder_note_length = [0; N];\n\n    let notes_array = oracle::notes::get_notes(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        options.limit,\n        options.offset,\n        options.status,\n        placeholder_opt_notes,\n        placeholder_fields,\n        placeholder_note_length\n    );\n\n    let mut notes = BoundedVec::new();\n    for i in 0..notes_array.len() {\n        if notes_array[i].is_some() {\n            notes.push(notes_array[i].unwrap_unchecked());\n        }\n    }\n\n    notes\n}\n\nunconstrained fn flatten_options<Note, N>(\n    selects: BoundedVec<Option<Select>, N>,\n    sorts: BoundedVec<Option<Sort>, N>\n) -> (u8, [u8; N], [u8; N], [u8; N], [Field; N], [u8; N], [u8; N], [u8; N], [u8; N], [u8; N]) {\n    let mut num_selects = 0;\n    let mut select_by_indexes = [0; N];\n    let mut select_by_offsets = [0; N];\n    let mut select_by_lengths = [0; N];\n    let mut select_values = [0; N];\n    let mut select_comparators = [0; N];\n\n    for i in 0..selects.len {\n        let select = selects.get(i);\n        if select.is_some() {\n            select_by_indexes[num_selects] = select.unwrap_unchecked().property_selector.index;\n            select_by_offsets[num_selects] = select.unwrap_unchecked().property_selector.offset;\n            select_by_lengths[num_selects] = select.unwrap_unchecked().property_selector.length;\n            select_values[num_selects] = select.unwrap_unchecked().value;\n            select_comparators[num_selects] = select.unwrap_unchecked().comparator;\n            num_selects += 1;\n        };\n    }\n\n    let mut sort_by_indexes = [0; N];\n    let mut sort_by_offsets = [0; N];\n    let mut sort_by_lengths = [0; N];\n    let mut sort_order = [0; N];\n    for i in 0..sorts.len {\n        let sort = sorts.get(i);\n        if sort.is_some() {\n            sort_by_indexes[i] = sort.unwrap_unchecked().property_selector.index;\n            sort_by_offsets[i] = sort.unwrap_unchecked().property_selector.offset;\n            sort_by_lengths[i] = sort.unwrap_unchecked().property_selector.length;\n            sort_order[i] = sort.unwrap_unchecked().order;\n        };\n    }\n\n    (\n        num_selects, select_by_indexes, select_by_offsets, select_by_lengths, select_values, select_comparators, sort_by_indexes, sort_by_offsets, sort_by_lengths, sort_order\n    )\n}\n"},"112":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/note/utils.nr","source":"use crate::{context::PrivateContext, note::{note_header::NoteHeader, note_interface::NoteInterface}};\n\nuse dep::protocol_types::{\n    constants::GENERATOR_INDEX__INNER_NOTE_HASH,\n    hash::{\n    pedersen_hash, compute_unique_note_hash, compute_siloed_note_hash as compute_siloed_note_hash,\n    compute_siloed_nullifier as compute_siloed_nullifier_from_preimage\n},\n    utils::arr_copy_slice\n};\n\npub fn compute_inner_note_hash_from_preimage(storage_slot: Field, note_content_hash: Field) -> Field {\n    pedersen_hash(\n        [storage_slot, note_content_hash],\n        GENERATOR_INDEX__INNER_NOTE_HASH\n    )\n}\n\nfn compute_inner_note_hash<Note, N, M>(note: Note) -> Field where Note: NoteInterface<N, M> {\n    let header = note.get_header();\n    let note_hash = note.compute_note_content_hash();\n\n    compute_inner_note_hash_from_preimage(header.storage_slot, note_hash)\n}\n\npub fn compute_siloed_nullifier<Note, N, M>(\n    note_with_header: Note,\n    context: &mut PrivateContext\n) -> Field where Note: NoteInterface<N, M> {\n    let header = note_with_header.get_header();\n    let (_, inner_nullifier) = note_with_header.compute_note_hash_and_nullifier(context);\n\n    compute_siloed_nullifier_from_preimage(header.contract_address, inner_nullifier)\n}\n\nfn compute_note_hash_for_read_request_from_innter_and_nonce(\n    inner_note_hash: Field,\n    nonce: Field\n) -> Field {\n    // TODO(#1386): This if-else can be nuked once we have nonces injected from public\n    if (nonce == 0) {\n        // If nonce is zero, that means we are reading a public note.\n        inner_note_hash\n    } else {\n        compute_unique_note_hash(nonce, inner_note_hash)\n    }\n}\n\npub fn compute_note_hash_for_read_request<Note, N, M>(note: Note) -> Field where Note: NoteInterface<N, M> {\n    let inner_note_hash = compute_inner_note_hash(note);\n    let nonce = note.get_header().nonce;\n\n    compute_note_hash_for_read_request_from_innter_and_nonce(inner_note_hash, nonce)\n}\n\npub fn compute_note_hash_for_consumption<Note, N, M>(note: Note) -> Field where Note: NoteInterface<N, M> {\n    let header = note.get_header();\n    // There are 3 cases for reading a note intended for consumption:\n    // 1. The note was inserted in this transaction, and is transient.\n    // 2. The note was inserted in a previous transaction, and was inserted in public\n    // 3. The note was inserted in a previous transaction, and was inserted in private\n\n    let inner_note_hash = compute_inner_note_hash(note);\n\n    if (header.note_hash_counter != 0) {\n        // If a note is transient, we just read the inner_note_hash (kernel will silo by contract address).\n        inner_note_hash\n    } else {\n        // If a note is not transient, that means we are reading a settled note (from tree) created in a\n        // previous TX. So we need the siloed_note_hash which has already been hashed with\n        // nonce and then contract address. This hash will match the existing leaf in the note hash\n        // tree, so the kernel can just perform a membership check directly on this hash/leaf.\n        let unique_note_hash = compute_note_hash_for_read_request_from_innter_and_nonce(inner_note_hash, header.nonce);\n        compute_siloed_note_hash(header.contract_address, unique_note_hash)\n        // IMPORTANT NOTE ON REDUNDANT SILOING BY CONTRACT ADDRESS: The note hash computed above is\n        // \"siloed\" by contract address. When a note hash is computed solely for the purpose of\n        // nullification, it is not strictly necessary to silo the note hash before computing\n        // its nullifier. In other words, it is NOT NECESSARY for protocol security that a nullifier\n        // be computed from a siloed note hash. After all, persistable note hashes and nullifiers are\n        // siloed by the kernel circuit. That being said, the siloed note hash computed above CAN be\n        // used for nullifier computation, and this achieves the (arguably unnecessary) property that\n        // nullifiers are computed from a note hash's fully-computed note hash tree leaf.\n    }\n}\n\npub fn compute_note_hash_and_optionally_a_nullifier<T, N, M, S>(\n    deserialize_content: fn([Field; N]) -> T,\n    note_header: NoteHeader,\n    compute_nullifier: bool,\n    serialized_note: [Field; S]\n) -> [Field; 4] where T: NoteInterface<N, M> {\n    let mut note = deserialize_content(arr_copy_slice(serialized_note, [0; N], 0));\n    note.set_header(note_header);\n\n    let inner_note_hash = compute_inner_note_hash(note);\n    let unique_note_hash = compute_note_hash_for_read_request_from_innter_and_nonce(inner_note_hash, note_header.nonce);\n    let siloed_note_hash = compute_siloed_note_hash(note_header.contract_address, unique_note_hash);\n\n    let inner_nullifier = if compute_nullifier {\n        let (_, nullifier) = note.compute_note_hash_and_nullifier_without_context();\n        nullifier\n    } else {\n        0\n    };\n    // docs:start:compute_note_hash_and_optionally_a_nullifier_returns\n    [inner_note_hash, unique_note_hash, siloed_note_hash, inner_nullifier]\n    // docs:end:compute_note_hash_and_optionally_a_nullifier_returns\n}\n"},"113":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/note/lifecycle.nr","source":"use crate::context::{PrivateContext, PublicContext};\nuse crate::note::{\n    note_header::NoteHeader, note_interface::NoteInterface,\n    utils::{compute_inner_note_hash, compute_note_hash_for_consumption}, note_emission::NoteEmission\n};\nuse crate::oracle::notes::{notify_created_note, notify_nullified_note};\n\npub fn create_note<Note, N, M>(\n    context: &mut PrivateContext,\n    storage_slot: Field,\n    note: &mut Note\n) -> NoteEmission<Note> where Note: NoteInterface<N, M> {\n    let contract_address = (*context).this_address();\n    let note_hash_counter = context.side_effect_counter;\n\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, note_hash_counter };\n    note.set_header(header);\n    let inner_note_hash = compute_inner_note_hash(*note);\n\n    let serialized_note = Note::serialize_content(*note);\n    assert(\n        notify_created_note(\n        storage_slot,\n        Note::get_note_type_id(),\n        serialized_note,\n        inner_note_hash,\n        note_hash_counter\n    )\n        == 0\n    );\n\n    context.push_note_hash(inner_note_hash);\n\n    NoteEmission::new(*note)\n}\n\npub fn create_note_hash_from_public<Note, N, M>(\n    context: &mut PublicContext,\n    storage_slot: Field,\n    note: &mut Note\n) where Note: NoteInterface<N, M> {\n    let contract_address = (*context).this_address();\n    // Public note hashes are transient, but have no side effect counters, so we just need note_hash_counter != 0\n    let header = NoteHeader { contract_address, storage_slot, nonce: 0, note_hash_counter: 1 };\n    note.set_header(header);\n    let inner_note_hash = compute_inner_note_hash(*note);\n\n    context.push_note_hash(inner_note_hash);\n}\n\npub fn destroy_note<Note, N, M>(\n    context: &mut PrivateContext,\n    note: Note\n) where Note: NoteInterface<N, M> {\n    let (note_hash, nullifier) = note.compute_note_hash_and_nullifier(context);\n\n    let note_hash_counter = note.get_header().note_hash_counter;\n    let note_hash_for_consumption = if (note_hash_counter == 0) {\n        // Counter is zero, so we're nullifying a non-transient note and we don't populate the note_hash with real\n        // value (if we did so the `notifyNullifiedNote` oracle would throw).\n        0\n    } else {\n        // A non-zero note hash counter implies that we're nullifying a transient note (i.e. one that has not yet been\n        // persisted in the trees and is instead in the pending new note hashes array). In such a case we populate its\n        // hash with real value to inform the kernel which note we're nullifyng so that it can find it and squash both\n        // the note and the nullifier.\n        note_hash\n    };\n\n    let nullifier_counter = context.side_effect_counter;\n    assert(notify_nullified_note(nullifier, note_hash_for_consumption, nullifier_counter) == 0);\n\n    context.push_nullifier(nullifier, note_hash_for_consumption)\n}\n"},"114":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/note/note_emission.nr","source":"/**\n * A note emission struct containing the information required for emitting a note.\n * The exact `emit` logic is passed in by the application code\n */\nstruct NoteEmission<Note> {\n    note: Note\n}\n\nimpl<Note> NoteEmission<Note> {\n    pub fn new(note: Note) -> Self {\n        Self { note }\n    }\n\n    pub fn emit<Env>(self, _emit: fn[Env](Self) -> ()) {\n        _emit(self);\n    }\n\n    pub fn discard(self) {}\n}\n\n/**\n * A struct wrapping note emission in `Option<T>`.\n * This is the struct provided to application codes, which can be used to emit\n * only when a note was actually inserted.\n * It is fairly common to have cases where a function conditionally inserts,\n * and this allows us to keep the same API for emission in both cases (e.g. inserting  \n * a change note in a token's transfer function only when there is \"change\" left).\n */\nstruct OuterNoteEmission<Note> {\n    emission: Option<NoteEmission<Note>>,\n}\n\nimpl<Note> OuterNoteEmission<Note> {\n    pub fn new(emission: Option<NoteEmission<Note>>) -> Self {\n        Self { emission }\n    }\n\n    pub fn emit<Env>(self, _emit: fn[Env](NoteEmission<Note>) -> ()) {\n        if self.emission.is_some() {\n            _emit(self.emission.unwrap());\n        }\n    }\n\n    pub fn discard(self) {}\n}\n"},"117":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/note/note_header.nr","source":"use dep::protocol_types::address::AztecAddress;\nuse dep::protocol_types::traits::{Empty, Eq, Serialize};\n\nstruct NoteHeader {\n    contract_address: AztecAddress,\n    nonce: Field,\n    storage_slot: Field,\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/1386)\n    // Check the nonce to see whether a note is transient or not.\n    note_hash_counter: u32, // a note_hash_counter of 0 means non-transient\n}\n\nimpl Empty for NoteHeader {\n    fn empty() -> Self {\n        NoteHeader { contract_address: AztecAddress::zero(), nonce: 0, storage_slot: 0, note_hash_counter: 0 }\n    }\n}\n\nimpl Eq for NoteHeader {\n    fn eq(self, other: Self) -> bool {\n        (self.contract_address == other.contract_address) & \n        (self.nonce == other.nonce) & \n        (self.storage_slot == other.storage_slot)& \n        (self.note_hash_counter == other.note_hash_counter)\n    }\n}\n\nimpl NoteHeader {\n    pub fn new(contract_address: AztecAddress, nonce: Field, storage_slot: Field) -> Self {\n        NoteHeader { contract_address, nonce, storage_slot, note_hash_counter: 0 }\n    }\n}\n\nimpl Serialize<4> for NoteHeader {\n    fn serialize(self) -> [Field; 4] {\n        [self.contract_address.to_field(), self.nonce, self.storage_slot, self.note_hash_counter as Field]\n    }\n}\n"},"121":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/hash.nr","source":"use dep::protocol_types::{\n    address::{AztecAddress, EthAddress},\n    constants::{\n    GENERATOR_INDEX__SECRET_HASH, GENERATOR_INDEX__MESSAGE_NULLIFIER, ARGS_HASH_CHUNK_COUNT,\n    GENERATOR_INDEX__FUNCTION_ARGS, ARGS_HASH_CHUNK_LENGTH, MAX_ARGS_LENGTH\n},\n    traits::Hash, hash::{pedersen_hash, compute_siloed_nullifier, sha256_to_field}\n};\nuse crate::oracle::logs_traits::{LensForEncryptedLog, ToBytesForUnencryptedLog};\n\npub fn compute_secret_hash(secret: Field) -> Field {\n    pedersen_hash([secret], GENERATOR_INDEX__SECRET_HASH)\n}\n\npub fn compute_unencrypted_log_hash<T, N, M>(\n    contract_address: AztecAddress,\n    log: T\n) -> Field where T: ToBytesForUnencryptedLog<N, M> {\n    let message_bytes: [u8; N] = log.to_be_bytes_arr();\n    // can't use N - not in scope error\n    let n = message_bytes.len();\n    let mut hash_bytes = [0; M];\n    // Address is converted to 32 bytes in ts\n    let address_bytes = contract_address.to_be_bytes_arr();\n    for i in 0..32 {\n        hash_bytes[i] = address_bytes[i];\n    }\n    let len_bytes = (n as Field).to_be_bytes(4);\n    for i in 0..4 {\n        hash_bytes[32 + i] = len_bytes[i];\n    }\n    for i in 0..n {\n        hash_bytes[36 + i] = message_bytes[i];\n    }\n\n    sha256_to_field(hash_bytes)\n}\n\npub fn compute_message_hash(\n    sender: EthAddress,\n    chain_id: Field,\n    recipient: AztecAddress,\n    version: Field,\n    content: Field,\n    secret_hash: Field\n) -> Field {\n    let mut hash_bytes = [0 as u8; 192];\n    let sender_bytes = sender.to_field().to_be_bytes(32);\n    let chain_id_bytes = chain_id.to_be_bytes(32);\n    let recipient_bytes = recipient.to_field().to_be_bytes(32);\n    let version_bytes = version.to_be_bytes(32);\n    let content_bytes = content.to_be_bytes(32);\n    let secret_hash_bytes = secret_hash.to_be_bytes(32);\n\n    for i in 0..32 {\n        hash_bytes[i] = sender_bytes[i];\n        hash_bytes[i + 32] = chain_id_bytes[i];\n        hash_bytes[i + 64] = recipient_bytes[i];\n        hash_bytes[i + 96] = version_bytes[i];\n        hash_bytes[i + 128] = content_bytes[i];\n        hash_bytes[i + 160] = secret_hash_bytes[i];\n    }\n\n    sha256_to_field(hash_bytes)\n}\n\n// The nullifier of a l1 to l2 message is the hash of the message salted with the secret and index of the message hash\n// in the L1 to L2 message tree\npub fn compute_message_nullifier(message_hash: Field, secret: Field, leaf_index: Field) -> Field {\n    pedersen_hash(\n        [message_hash, secret, leaf_index],\n        GENERATOR_INDEX__MESSAGE_NULLIFIER\n    )\n}\n\nstruct ArgsHasher {\n    fields: [Field],\n}\n\nimpl Hash for ArgsHasher {\n    fn hash(self) -> Field {\n        hash_args(self.fields)\n    }\n}\n\nimpl ArgsHasher {\n    pub fn new() -> Self {\n        Self { fields: [] }\n    }\n\n    pub fn add(&mut self, field: Field) {\n        self.fields = self.fields.push_back(field);\n    }\n\n    pub fn add_multiple<N>(&mut self, fields: [Field; N]) {\n        for i in 0..N {\n            self.fields = self.fields.push_back(fields[i]);\n        }\n    }\n}\n\npub fn hash_args_array<N>(args: [Field; N]) -> Field {\n    hash_args(args.as_slice())\n}\n\npub fn hash_args(args: [Field]) -> Field {\n    if args.len() == 0 {\n        0\n    } else {\n        assert(args.len() <= MAX_ARGS_LENGTH, \"Args length exceeds maximum\");\n        let mut chunks_hashes = [0; ARGS_HASH_CHUNK_COUNT];\n        let mut current_chunk_values = [0; ARGS_HASH_CHUNK_LENGTH];\n\n        let mut current_chunk_index = 0;\n        let mut index_inside_current_chunk = 0;\n        for i in 0..args.len() {\n            current_chunk_values[index_inside_current_chunk] = args[i];\n            index_inside_current_chunk+=1;\n            if index_inside_current_chunk == ARGS_HASH_CHUNK_LENGTH {\n                chunks_hashes[current_chunk_index] = pedersen_hash(current_chunk_values, GENERATOR_INDEX__FUNCTION_ARGS);\n                current_chunk_values = [0; ARGS_HASH_CHUNK_LENGTH];\n                current_chunk_index+=1;\n                index_inside_current_chunk = 0;\n            }\n        }\n        if index_inside_current_chunk > 0 {\n            chunks_hashes[current_chunk_index] = pedersen_hash(current_chunk_values, GENERATOR_INDEX__FUNCTION_ARGS);\n        }\n        pedersen_hash(chunks_hashes, GENERATOR_INDEX__FUNCTION_ARGS)\n    }\n}\n\n#[test]\nfn compute_var_args_hash() {\n    let mut input = ArgsHasher::new();\n    for i in 0..MAX_ARGS_LENGTH {\n        input.add(i as Field);\n    }\n    let hash = input.hash();\n    assert(hash == 0x11e40f2a780822f7971803048c9a2100579de352e7dadd99981760964da65b57);\n}\n\n#[test]\nfn compute_unenc_log_hash_array() {\n    let contract_address = AztecAddress::from_field(0x233a3e0df23b2b15b324194cb4a151f26c0b7333250781d34cc269d85dc334c6);\n    let log = [\n        0x20660de09f35f876e3e69d227b2a35166ad05f09d82d06366ec9b6f65a51fec2,\n        0x1b52bfe3b8689761916f76dc3d38aa8810860db325cd39ca611eed980091f01c,\n        0x2e559c4045c378a56ad13b9edb1e8de4e7ad3b3aa35cc7ba9ec77f7a68fa43a4,\n        0x25d0f689c4a4178a29d59306f2675824d19be6d25e44fa03b03f49c263053dd2,\n        0x2d513a722d6f352dc0961f156afdc5e31495b9f0e35cb069261a8e55e2df67fd\n    ];\n    let hash = compute_unencrypted_log_hash(contract_address, log);\n    assert(hash == 0x0095b2d17ab72f4b27a341f7ac63e49ec73935ae8c9181a0ac02023eb12f3284);\n}\n\n#[test]\nfn compute_unenc_log_hash_addr() {\n    let contract_address = AztecAddress::from_field(0x233a3e0df23b2b15b324194cb4a151f26c0b7333250781d34cc269d85dc334c6);\n    let log = AztecAddress::from_field(0x26aa302d4715fd8a687453cb26d616b0768027bd54bcae56b09d908ecd9f8303);\n    let hash = compute_unencrypted_log_hash(contract_address, log);\n    assert(hash == 0x0083ab647dfb26e7ddee90a0f4209d049d4660cab42000c544b986aaa84c55a3);\n}\n\n#[test]\nfn compute_unenc_log_hash_str() {\n    let contract_address = AztecAddress::from_field(0x1b401e1146c5c507962287065c81f0ef7590adae3802c533d7549d6bf0a41bd8);\n    let log = \"dummy\";\n    let hash = compute_unencrypted_log_hash(contract_address, log);\n    assert(hash == 0x00629e88ebd6374f44aa6cfe07e251ecf07213ebc7267e8f6b578ae57ffd6c20);\n}\n\n#[test]\nfn compute_unenc_log_hash_longer_str() {\n    let contract_address = AztecAddress::from_field(0x1b401e1146c5c507962287065c81f0ef7590adae3802c533d7549d6bf0a41bd8);\n    let log = \"Hello this is a string\";\n    let hash = compute_unencrypted_log_hash(contract_address, log);\n    assert(hash == 0x0098637962f7d34fa202b7ffad8a07a238c5d1fd897b82a108f7f467fa73b841);\n}\n"},"124":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/oracle/logs.nr","source":"use dep::protocol_types::{address::AztecAddress, point::Point};\n\n// = 480 + 32 * N bytes\n#[oracle(emitEncryptedNoteLog)]\nunconstrained fn emit_encrypted_note_log_oracle<M>(_note_hash_counter: u32, _encrypted_note: [u8; M], _counter: u32) {}\n\nunconstrained pub fn emit_encrypted_note_log<M>(\n    note_hash_counter: u32,\n    encrypted_note: [u8; M],\n    counter: u32\n) {\n    emit_encrypted_note_log_oracle(note_hash_counter, encrypted_note, counter)\n}\n\n#[oracle(emitEncryptedEventLog)]\nunconstrained fn emit_encrypted_event_log_oracle<M>(\n    _contract_address: AztecAddress,\n    _randomness: Field,\n    _encrypted_event: [u8; M],\n    _counter: u32\n) {}\n\nunconstrained pub fn emit_encrypted_event_log<M>(\n    contract_address: AztecAddress,\n    randomness: Field,\n    encrypted_event: [u8; M],\n    counter: u32\n) {\n    emit_encrypted_event_log_oracle(contract_address, randomness, encrypted_event, counter)\n}\n\n// = 480 + 32 * N bytes\n#[oracle(computeEncryptedNoteLog)]\nunconstrained fn compute_encrypted_note_log_oracle<N, M>(\n    _contract_address: AztecAddress,\n    _storage_slot: Field,\n    _note_type_id: Field,\n    _ovsk_app: Field,\n    _ovpk_m: Point,\n    _ivpk_m: Point,\n    _preimage: [Field; N]\n) -> [u8; M] {}\n\nunconstrained pub fn compute_encrypted_note_log<N, M>(\n    contract_address: AztecAddress,\n    storage_slot: Field,\n    note_type_id: Field,\n    ovsk_app: Field,\n    ovpk_m: Point,\n    ivpk_m: Point,\n    preimage: [Field; N]\n) -> [u8; M] {\n    compute_encrypted_note_log_oracle(\n        contract_address,\n        storage_slot,\n        note_type_id,\n        ovsk_app,\n        ovpk_m,\n        ivpk_m,\n        preimage\n    )\n}\n\n// = 480 + 32 * N bytes\n#[oracle(computeEncryptedEventLog)]\nunconstrained fn compute_encrypted_event_log_oracle<N, M>(\n    _contract_address: AztecAddress,\n    _randomness: Field,\n    _event_type_id: Field,\n    _ovsk_app: Field,\n    _ovpk_m: Point,\n    _ivpk_m: Point,\n    _preimage: [Field; N]\n) -> [u8; M] {}\n\nunconstrained pub fn compute_encrypted_event_log<N, M>(\n    contract_address: AztecAddress,\n    randomness: Field,\n    event_type_id: Field,\n    ovsk_app: Field,\n    ovpk_m: Point,\n    ivpk_m: Point,\n    preimage: [Field; N]\n) -> [u8; M] {\n    compute_encrypted_event_log_oracle(\n        contract_address,\n        randomness,\n        event_type_id,\n        ovsk_app,\n        ovpk_m,\n        ivpk_m,\n        preimage\n    )\n}\n\n#[oracle(emitUnencryptedLog)]\nunconstrained fn emit_unencrypted_log_oracle_private<T>(_contract_address: AztecAddress, _message: T, _counter: u32) -> Field {}\n\nunconstrained pub fn emit_unencrypted_log_private_internal<T>(\n    contract_address: AztecAddress,\n    message: T,\n    counter: u32\n) -> Field {\n    emit_unencrypted_log_oracle_private(contract_address, message, counter)\n}\n\n#[oracle(emitContractClassUnencryptedLog)]\nunconstrained fn emit_contract_class_unencrypted_log_private<N>(contract_address: AztecAddress, message: [Field; N], counter: u32) -> Field {}\n\nunconstrained pub fn emit_contract_class_unencrypted_log_private_internal<N>(contract_address: AztecAddress, message: [Field; N], counter: u32) -> Field {\n    emit_contract_class_unencrypted_log_private(contract_address, message, counter)\n}\n"},"125":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/oracle/arguments.nr","source":"#[oracle(packArgumentsArray)]\nunconstrained fn pack_arguments_array_oracle<N>(_args: [Field; N]) -> Field {}\n\n#[oracle(packArguments)]\nunconstrained fn pack_arguments_oracle(_args: [Field]) -> Field {}\n\n/// - Pack arguments (array version) will notify the simulator that these arguments will be used later at\n///   some point in the call. \n/// - When the external call is made later, the simulator will know what the values unpack to.\n/// - This oracle will not be required in public vm functions, as the vm will keep track of arguments \n///   itself.\nunconstrained pub fn pack_arguments_array<N>(args: [Field; N]) -> Field {\n    pack_arguments_array_oracle(args)\n}\n\n/// - Pack arguments (slice version) will notify the simulator that these arguments will be used later at\n///   some point in the call. \n/// - When the external call is made later, the simulator will know what the values unpack to.\n/// - This oracle will not be required in public vm functions, as the vm will keep track of arguments \n///   itself.\nunconstrained pub fn pack_arguments(args: [Field]) -> Field {\n    pack_arguments_oracle(args)\n}\n\n"},"128":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/oracle/get_public_data_witness.nr","source":"use dep::protocol_types::{\n    constants::PUBLIC_DATA_TREE_HEIGHT, hash::pedersen_hash,\n    public_data_tree_leaf_preimage::PublicDataTreeLeafPreimage, traits::{Hash, Serialize},\n    utils::arr_copy_slice\n};\n\nglobal LEAF_PREIMAGE_LENGTH: u32 = 4;\nglobal PUBLIC_DATA_WITNESS: Field = 45;\n\nstruct PublicDataWitness {\n    index: Field,\n    leaf_preimage: PublicDataTreeLeafPreimage,\n    path: [Field; PUBLIC_DATA_TREE_HEIGHT],\n}\n\n#[oracle(getPublicDataTreeWitness)]\nunconstrained fn get_public_data_witness_oracle(\n    _block_number: u32,\n    _leaf_slot: Field\n) -> [Field; PUBLIC_DATA_WITNESS] {}\n\nunconstrained pub fn get_public_data_witness(block_number: u32, leaf_slot: Field) -> PublicDataWitness {\n    let fields = get_public_data_witness_oracle(block_number, leaf_slot);\n    PublicDataWitness {\n        index: fields[0],\n        leaf_preimage: PublicDataTreeLeafPreimage { slot: fields[1], value: fields[2], next_index: fields[3] as u32, next_slot: fields[4] },\n        path: arr_copy_slice(fields, [0; PUBLIC_DATA_TREE_HEIGHT], 1 + LEAF_PREIMAGE_LENGTH)\n    }\n}\n"},"129":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/oracle/key_validation_request.nr","source":"use dep::protocol_types::abis::validation_requests::{KeyValidationRequest, key_validation_request::KEY_VALIDATION_REQUEST_LENGTH};\n\n#[oracle(getKeyValidationRequest)]\nunconstrained fn get_key_validation_request_oracle(\n    _pk_m_hash: Field,\n    _key_index: Field\n) -> [Field; KEY_VALIDATION_REQUEST_LENGTH] {}\n\nunconstrained fn get_key_validation_request_internal(\n    npk_m_hash: Field,\n    key_index: Field\n) -> KeyValidationRequest {\n    let result = get_key_validation_request_oracle(npk_m_hash, key_index);\n    KeyValidationRequest::deserialize(result)\n}\n\npub fn get_key_validation_request(pk_m_hash: Field, key_index: Field) -> KeyValidationRequest {\n    get_key_validation_request_internal(pk_m_hash, key_index)\n}\n\n"},"132":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/oracle/storage.nr","source":"use dep::protocol_types::{address::AztecAddress, traits::Deserialize};\n\n#[oracle(storageRead)]\nunconstrained fn storage_read_oracle<N>(\n    address: Field,\n    storage_slot: Field,\n    block_number: Field,\n    length: Field\n) -> [Field; N] {}\n\nunconstrained pub fn raw_storage_read<N>(\n    address: AztecAddress,\n    storage_slot: Field,\n    block_number: u32\n) -> [Field; N] {\n    storage_read_oracle(address.to_field(), storage_slot, block_number as Field, N)\n}\n\nunconstrained pub fn storage_read<T, N>(\n    address: AztecAddress,\n    storage_slot: Field,\n    block_number: u32\n) -> T where T: Deserialize<N> {\n    T::deserialize(raw_storage_read(address, storage_slot, block_number))\n}\n\nmod tests {\n    use crate::oracle::storage::{raw_storage_read, storage_read};\n    use dep::protocol_types::address::AztecAddress;\n\n    use std::test::OracleMock;\n    use crate::test::mocks::mock_struct::MockStruct;\n\n    global address = AztecAddress::from_field(29);\n    global slot = 7;\n    global block_number = 17;\n\n    #[test]\n    fn test_raw_storage_read() {\n        let written = MockStruct { a: 13, b: 42 };\n\n        let _ = OracleMock::mock(\"storageRead\").returns(written.serialize());\n\n        let read: [Field; 2] = raw_storage_read(address, slot, block_number);\n        assert_eq(read[0], 13);\n        assert_eq(read[1], 42);\n    }\n\n    #[test]\n    fn test_storage_read() {\n        let written = MockStruct { a: 13, b: 42 };\n\n        let _ = OracleMock::mock(\"storageRead\").returns(written.serialize());\n\n        let read: MockStruct = storage_read(address, slot, block_number);\n        assert_eq(read.a, 13);\n        assert_eq(read.b, 42);\n    }\n}\n"},"133":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/oracle/unsafe_rand.nr","source":"#[oracle(getRandomField)]\nunconstrained fn rand_oracle() -> Field {}\n\n// Called `unsafe_rand` because we do not constrain in circuit that we are dealing with an actual random value.\n// Instead we just trust our PXE.\nunconstrained pub fn unsafe_rand() -> Field {\n    rand_oracle()\n}\n"},"136":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/oracle/keys.nr","source":"use crate::keys::PublicKeys;\nuse dep::protocol_types::{address::{AztecAddress, PartialAddress}, point::Point};\n\n#[oracle(getPublicKeysAndPartialAddress)]\nunconstrained fn get_public_keys_and_partial_address_oracle(_address: AztecAddress) -> [Field; 13] {}\n\nunconstrained fn get_public_keys_and_partial_address_oracle_wrapper(address: AztecAddress) -> [Field; 13] {\n    get_public_keys_and_partial_address_oracle(address)\n}\n\nfn get_public_keys_and_partial_address(address: AztecAddress) -> (PublicKeys, PartialAddress) {\n    let result = get_public_keys_and_partial_address_oracle_wrapper(address);\n\n    let keys = PublicKeys {\n        npk_m: Point::new(result[0], result[1], result[2] as bool),\n        ivpk_m: Point::new(result[3], result[4], result[5] as bool),\n        ovpk_m: Point::new(result[6], result[7], result[8] as bool),\n        tpk_m: Point::new(result[9], result[10], result[11] as bool)\n    };\n\n    let partial_address = PartialAddress::from_field(result[12]);\n\n    (keys, partial_address)\n}\n"},"138":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/oracle/notes.nr","source":"use crate::note::{note_header::NoteHeader, note_interface::NoteInterface};\n\nuse dep::protocol_types::{address::AztecAddress, utils::arr_copy_slice};\n\n#[oracle(notifyCreatedNote)]\nunconstrained fn notify_created_note_oracle<N>(\n    _storage_slot: Field,\n    _note_type_id: Field,\n    _serialized_note: [Field; N],\n    _inner_note_hash: Field,\n    _counter: u32\n) -> Field {}\n\nunconstrained pub fn notify_created_note<N>(\n    storage_slot: Field,\n    note_type_id: Field,\n    serialized_note: [Field; N],\n    inner_note_hash: Field,\n    counter: u32\n) -> Field {\n    notify_created_note_oracle(\n        storage_slot,\n        note_type_id,\n        serialized_note,\n        inner_note_hash,\n        counter\n    )\n}\n\n#[oracle(notifyNullifiedNote)]\nunconstrained fn notify_nullified_note_oracle<N>(_nullifier: Field, _inner_note_hash: Field, _counter: u32) -> Field {}\n\nunconstrained pub fn notify_nullified_note<N>(\n    nullifier: Field,\n    inner_note_hash: Field,\n    counter: u32\n) -> Field {\n    notify_nullified_note_oracle(nullifier, inner_note_hash, counter)\n}\n\n#[oracle(getNotes)]\nunconstrained fn get_notes_oracle<N, S>(\n    _storage_slot: Field,\n    _num_selects: u8,\n    _select_by_indexes: [u8; N],\n    _select_by_offsets: [u8; N],\n    _select_by_lengths: [u8; N],\n    _select_values: [Field; N],\n    _select_comparators: [u8; N],\n    _sort_by_indexes: [u8; N],\n    _sort_by_offsets: [u8; N],\n    _sort_by_lengths: [u8; N],\n    _sort_order: [u8; N],\n    _limit: u32,\n    _offset: u32,\n    _status: u8,\n    _return_size: u32,\n    _placeholder_fields: [Field; S]\n) -> [Field; S] {}\n\nunconstrained fn get_notes_oracle_wrapper<N, S>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by_indexes: [u8; N],\n    select_by_offsets: [u8; N],\n    select_by_lengths: [u8; N],\n    select_values: [Field; N],\n    select_comparators: [u8; N],\n    sort_by_indexes: [u8; N],\n    sort_by_offsets: [u8; N],\n    sort_by_lengths: [u8; N],\n    sort_order: [u8; N],\n    limit: u32,\n    offset: u32,\n    status: u8,\n    mut placeholder_fields: [Field; S]\n) -> [Field; S] {\n    let return_size = placeholder_fields.len() as u32;\n    get_notes_oracle(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        limit,\n        offset,\n        status,\n        return_size,\n        placeholder_fields\n    )\n}\n\nunconstrained pub fn get_notes<Note, N, NB, M, S, NS>(\n    storage_slot: Field,\n    num_selects: u8,\n    select_by_indexes: [u8; M],\n    select_by_offsets: [u8; M],\n    select_by_lengths: [u8; M],\n    select_values: [Field; M],\n    select_comparators: [u8; M],\n    sort_by_indexes: [u8; M],\n    sort_by_offsets: [u8; M],\n    sort_by_lengths: [u8; M],\n    sort_order: [u8; M],\n    limit: u32,\n    offset: u32,\n    status: u8,\n    mut placeholder_opt_notes: [Option<Note>; S], // TODO: Remove it and use `limit` to initialize the note array.\n    placeholder_fields: [Field; NS], // TODO: Remove it and use `limit` to initialize the note array.\n    _placeholder_note_length: [Field; N] // Turbofish hack? Compiler breaks calculating read_offset unless we add this parameter\n) -> [Option<Note>; S] where Note: NoteInterface<N, NB> {\n    let fields = get_notes_oracle_wrapper(\n        storage_slot,\n        num_selects,\n        select_by_indexes,\n        select_by_offsets,\n        select_by_lengths,\n        select_values,\n        select_comparators,\n        sort_by_indexes,\n        sort_by_offsets,\n        sort_by_lengths,\n        sort_order,\n        limit,\n        offset,\n        status,\n        placeholder_fields\n    );\n    let num_notes = fields[0] as u32;\n    let contract_address = AztecAddress::from_field(fields[1]);\n    for i in 0..placeholder_opt_notes.len() {\n        if i < num_notes {\n            // lengths named as per typescript.\n            let return_header_length: u32 = 2; // num_notes & contract_address.\n            let extra_preimage_length: u32 = 2; // nonce & note_hash_counter.\n            let read_offset: u32 = return_header_length + i * (N + extra_preimage_length);\n            let nonce = fields[read_offset];\n            let note_hash_counter = fields[read_offset + 1] as u32;\n            let header = NoteHeader { contract_address, nonce, storage_slot, note_hash_counter };\n            let serialized_note = arr_copy_slice(fields, [0; N], read_offset + 2);\n            let mut note = Note::deserialize_content(serialized_note);\n            note.set_header(header);\n            placeholder_opt_notes[i] = Option::some(note);\n        };\n    }\n    placeholder_opt_notes\n}\n\n// Only ever use this in private!\n#[oracle(checkNullifierExists)]\nunconstrained fn check_nullifier_exists_oracle(_inner_nullifier: Field) -> Field {}\n\n// Only ever use this in private!\nunconstrained pub fn check_nullifier_exists(inner_nullifier: Field) -> bool {\n    check_nullifier_exists_oracle(inner_nullifier) == 1\n}\n"},"140":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/oracle/enqueue_public_function_call.nr","source":"use dep::protocol_types::{\n    abis::{\n    function_selector::FunctionSelector, public_call_stack_item::PublicCallStackItem,\n    function_data::FunctionData, public_circuit_public_inputs::PublicCircuitPublicInputs,\n    call_context::CallContext, read_request::ReadRequest, note_hash::NoteHash, nullifier::Nullifier,\n    log_hash::LogHash, global_variables::GlobalVariables, gas::Gas\n},\n    contrakt::{storage_read::StorageRead, storage_update_request::StorageUpdateRequest},\n    messaging::l2_to_l1_message::L2ToL1Message, header::Header, address::AztecAddress,\n    utils::reader::Reader,\n    constants::{\n    MAX_L1_TO_L2_MSG_READ_REQUESTS_PER_CALL, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL,\n    MAX_NOTE_HASHES_PER_CALL, MAX_L2_TO_L1_MSGS_PER_CALL, MAX_NULLIFIERS_PER_CALL,\n    MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_DATA_READS_PER_CALL,\n    MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL, MAX_NULLIFIER_READ_REQUESTS_PER_CALL,\n    MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL, MAX_UNENCRYPTED_LOGS_PER_CALL,\n    ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_LENGTH\n}\n};\n\n#[oracle(enqueuePublicFunctionCall)]\nunconstrained fn enqueue_public_function_call_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _side_effect_counter: u32,\n    _is_static_call: bool,\n    _is_delegate_call: bool\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_LENGTH] {}\n\nunconstrained pub fn enqueue_public_function_call_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    side_effect_counter: u32,\n    is_static_call: bool,\n    is_delegate_call: bool\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_LENGTH] {\n    enqueue_public_function_call_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        side_effect_counter,\n        is_static_call,\n        is_delegate_call\n    )\n}\n\n#[oracle(setPublicTeardownFunctionCall)]\nunconstrained fn set_public_teardown_function_call_oracle(\n    _contract_address: AztecAddress,\n    _function_selector: FunctionSelector,\n    _args_hash: Field,\n    _side_effect_counter: u32,\n    _is_static_call: bool,\n    _is_delegate_call: bool\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_LENGTH] {}\n\nunconstrained pub fn set_public_teardown_function_call_internal(\n    contract_address: AztecAddress,\n    function_selector: FunctionSelector,\n    args_hash: Field,\n    side_effect_counter: u32,\n    is_static_call: bool,\n    is_delegate_call: bool\n) -> [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_LENGTH] {\n    set_public_teardown_function_call_oracle(\n        contract_address,\n        function_selector,\n        args_hash,\n        side_effect_counter,\n        is_static_call,\n        is_delegate_call\n    )\n}\n\npub fn parse_public_call_stack_item_from_oracle(fields: [Field; ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_LENGTH]) -> PublicCallStackItem {\n    let mut reader = Reader::new(fields);\n\n    // Note: Not using PublicCirclePublicInputs::deserialize here, because everything below args_hash is 0 and\n    // there is no more data in fields because there is only ENQUEUE_PUBLIC_FUNCTION_CALL_RETURN_SIZE fields!\n    // WARNING: if updating, see comment in public_call_stack_item.ts's PublicCallStackItem.hash()\n    let item = PublicCallStackItem {\n        contract_address: AztecAddress::from_field(reader.read()),\n        function_data: FunctionData { selector: FunctionSelector::from_field(reader.read()), is_private: false },\n        public_inputs: PublicCircuitPublicInputs {\n            call_context: reader.read_struct(CallContext::deserialize),\n            start_side_effect_counter: reader.read_u32(),\n            args_hash: reader.read(),\n            returns_hash: 0,\n            note_hash_read_requests: [ReadRequest::empty(); MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n            nullifier_read_requests: [ReadRequest::empty(); MAX_NULLIFIER_READ_REQUESTS_PER_CALL],\n            nullifier_non_existent_read_requests: [ReadRequest::empty(); MAX_NULLIFIER_NON_EXISTENT_READ_REQUESTS_PER_CALL],\n            l1_to_l2_msg_read_requests: [ReadRequest::empty(); MAX_L1_TO_L2_MSG_READ_REQUESTS_PER_CALL],\n            contract_storage_update_requests: [StorageUpdateRequest::empty(); MAX_PUBLIC_DATA_UPDATE_REQUESTS_PER_CALL],\n            contract_storage_reads: [StorageRead::empty(); MAX_PUBLIC_DATA_READS_PER_CALL],\n            public_call_stack_hashes: [0; MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL],\n            note_hashes: [NoteHash::empty(); MAX_NOTE_HASHES_PER_CALL],\n            nullifiers: [Nullifier::empty(); MAX_NULLIFIERS_PER_CALL],\n            l2_to_l1_msgs: [L2ToL1Message::empty(); MAX_L2_TO_L1_MSGS_PER_CALL],\n            end_side_effect_counter: 0,\n            unencrypted_logs_hashes: [LogHash::empty(); MAX_UNENCRYPTED_LOGS_PER_CALL],\n            historical_header: Header::empty(),\n            global_variables: GlobalVariables::empty(),\n            prover_address: AztecAddress::zero(),\n            revert_code: 0,\n            start_gas_left: Gas::empty(),\n            end_gas_left: Gas::empty(),\n            transaction_fee: 0\n        },\n        is_execution_request: true\n    };\n    reader.finish();\n\n    item\n}\n"},"144":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/state_vars/map.nr","source":"use dep::protocol_types::{hash::pedersen_hash, storage::map::derive_storage_slot_in_map, traits::ToField};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:map\nstruct Map<K, V, Context> {\n    context: Context,\n    storage_slot: Field,\n    state_var_constructor: fn(Context, Field) -> V,\n}\n// docs:end:map\n\nimpl<K, T, Context> Storage<T> for Map<K, T, Context> {}\n\nimpl<K, V, Context> Map<K, V, Context> {\n    // docs:start:new\n    pub fn new(\n        context: Context,\n        storage_slot: Field,\n        state_var_constructor: fn(Context, Field) -> V\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Map { context, storage_slot, state_var_constructor }\n    }\n    // docs:end:new\n\n    // docs:start:at\n    pub fn at(self, key: K) -> V where K: ToField {\n        // TODO(#1204): use a generator index for the storage slot\n        let derived_storage_slot = derive_storage_slot_in_map(self.storage_slot, key);\n\n        let state_var_constructor = self.state_var_constructor;\n        state_var_constructor(self.context, derived_storage_slot)\n    }\n    // docs:end:at\n}\n"},"146":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/state_vars/public_mutable.nr","source":"use crate::context::{PublicContext, UnconstrainedContext};\nuse crate::oracle::storage::storage_read;\nuse dep::protocol_types::traits::{Deserialize, Serialize};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:public_mutable_struct\nstruct PublicMutable<T, Context> {\n    context: Context,\n    storage_slot: Field,\n}\n// docs:end:public_mutable_struct\n\nimpl<T, Context> Storage<T> for PublicMutable<T, Context> {}\n\nimpl<T, Context> PublicMutable<T, Context> {\n    // docs:start:public_mutable_struct_new\n    pub fn new(\n        // Note: Passing the contexts to new(...) just to have an interface compatible with a Map.\n        context: Context,\n        storage_slot: Field\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PublicMutable { context, storage_slot }\n    }\n    // docs:end:public_mutable_struct_new\n}\n\nimpl<T> PublicMutable<T, &mut PublicContext> {\n    // docs:start:public_mutable_struct_read\n    pub fn read<T_SERIALIZED_LEN>(self) -> T where T: Deserialize<T_SERIALIZED_LEN> {\n        self.context.storage_read(self.storage_slot)\n    }\n    // docs:end:public_mutable_struct_read\n\n    // docs:start:public_mutable_struct_write\n    pub fn write<T_SERIALIZED_LEN>(self, value: T) where T: Serialize<T_SERIALIZED_LEN> {\n        self.context.storage_write(self.storage_slot, value);\n    }\n    // docs:end:public_mutable_struct_write\n}\n\nimpl<T> PublicMutable<T, UnconstrainedContext> {\n    unconstrained pub fn read<T_SERIALIZED_LEN>(self) -> T where T: Deserialize<T_SERIALIZED_LEN> {\n        self.context.storage_read(self.storage_slot)\n    }\n}\n"},"153":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/state_vars/private_set.nr","source":"use dep::protocol_types::{constants::MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, abis::read_request::ReadRequest};\nuse crate::context::{PrivateContext, PublicContext, UnconstrainedContext};\nuse crate::note::{\n    constants::MAX_NOTES_PER_PAGE, lifecycle::{create_note, create_note_hash_from_public, destroy_note},\n    note_getter::{get_notes, view_notes}, note_getter_options::NoteGetterOptions,\n    note_header::NoteHeader, note_interface::NoteInterface, note_viewer_options::NoteViewerOptions,\n    utils::compute_note_hash_for_read_request, note_emission::NoteEmission\n};\nuse crate::state_vars::storage::Storage;\n\n// docs:start:struct\nstruct PrivateSet<Note, Context> {\n    context: Context,\n    storage_slot: Field,\n}\n// docs:end:struct\n\nimpl<T, Context> Storage<T> for PrivateSet<T, Context> {}\n\nimpl<Note, Context> PrivateSet<Note, Context> {\n    // docs:start:new\n    pub fn new(context: Context, storage_slot: Field) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        PrivateSet { context, storage_slot }\n    }\n    // docs:end:new\n}\n\nimpl<Note> PrivateSet<Note, &mut PublicContext> {\n    // docs:start:insert_from_public\n    pub fn insert_from_public<N, M>(self, note: &mut Note) where Note: NoteInterface<N, M> {\n        create_note_hash_from_public(self.context, self.storage_slot, note);\n    }\n    // docs:end:insert_from_public\n}\n\nimpl<Note> PrivateSet<Note, &mut PrivateContext> {\n    // docs:start:insert\n    pub fn insert<N, M>(self, note: &mut Note) -> NoteEmission<Note> where Note: NoteInterface<N, M> {\n        create_note(self.context, self.storage_slot, note)\n    }\n    // docs:end:insert\n\n    // docs:start:remove\n    pub fn remove<N, M>(self, note: Note) where Note: NoteInterface<N, M> {\n        let note_hash = compute_note_hash_for_read_request(note);\n        let has_been_read = self.context.note_hash_read_requests.any(|r: ReadRequest| r.value == note_hash);\n        assert(has_been_read, \"Can only remove a note that has been read from the set.\");\n\n        destroy_note(self.context, note);\n    }\n    // docs:end:remove\n\n    // docs:start:get_notes\n    pub fn get_notes<N, M, FILTER_ARGS>(\n        self,\n        options: NoteGetterOptions<Note, N, M, FILTER_ARGS>\n    ) -> BoundedVec<Note, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL> where Note: NoteInterface<N, M> {\n        get_notes(self.context, self.storage_slot, options)\n    }\n    // docs:end:get_notes\n}\n\nimpl<Note> PrivateSet<Note, UnconstrainedContext> {\n    // docs:start:view_notes\n    unconstrained pub fn view_notes<N, M>(\n        self,\n        options: NoteViewerOptions<Note, N, M>\n    ) -> BoundedVec<Note, MAX_NOTES_PER_PAGE> where Note: NoteInterface<N, M> {\n        view_notes(self.storage_slot, options)\n    }\n    // docs:end:view_notes\n}\n"},"155":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/state_vars/shared_mutable/scheduled_delay_change.nr","source":"use dep::protocol_types::traits::{Serialize, Deserialize, FromField, ToField};\nuse std::cmp::min;\n\nmod test;\n\n// This data structure is used by SharedMutable to store the minimum delay with which a ScheduledValueChange object can\n// schedule a change.\n// This delay is initally equal to INITIAL_DELAY, and can be safely mutated to any other value over time. This mutation \n// is performed via `schedule_change` in order to satisfy ScheduleValueChange constraints: if e.g. we allowed for the \n// delay to be decreased immediately then it'd be possible for the state variable to schedule a value change with a \n// reduced delay, invalidating prior private reads.\nstruct ScheduledDelayChange<INITIAL_DELAY> {\n    // Both pre and post are stored in public storage, so by default they are zeroed. By wrapping them in an Option, \n    // they default to Option::none(), which we detect and replace with INITIAL_DELAY. The end result is that a\n    // ScheduledDelayChange that has not been initialized has a delay equal to INITIAL_DELAY, which is the desired\n    // effect. Once initialized, the Option will never be none again.\n    pre: Option<u32>,\n    post: Option<u32>,\n    // Block at which `post` value is used instead of `pre`\n    block_of_change: u32,\n    // The _dummy variable forces INITIAL_DELAY to be interpreted as a numeric value. This is a workaround to\n    // https://github.com/noir-lang/noir/issues/4633. Remove once resolved.\n    _dummy: [Field; INITIAL_DELAY],\n}\n\nimpl<INITIAL_DELAY> ScheduledDelayChange<INITIAL_DELAY> {\n    pub fn new(pre: Option<u32>, post: Option<u32>, block_of_change: u32) -> Self {\n        Self { pre, post, block_of_change, _dummy: [0; INITIAL_DELAY] }\n    }\n\n    /// Returns the current value of the delay stored in the data structure.\n    /// This function only returns a meaningful value when called in public with the current block number - for\n    /// historical private reads use `get_effective_minimum_delay_at` instead.\n    pub fn get_current(self, current_block_number: u32) -> u32 {\n        // The post value becomes the current one at the block of change, so any transaction that is included in the\n        // block of change will use the post value.\n\n        if current_block_number < self.block_of_change {\n            self.pre.unwrap_or(INITIAL_DELAY)\n        } else {\n            self.post.unwrap_or(INITIAL_DELAY)\n        }\n    }\n\n    /// Returns the scheduled change, i.e. the post-change delay and the block at which it will become the current\n    /// delay. Note that this block may be in the past if the change has already taken place.\n    /// Additionally, further changes might be later scheduled, potentially canceling the one returned by this function.\n    pub fn get_scheduled(self) -> (u32, u32) {\n        (self.post.unwrap_or(INITIAL_DELAY), self.block_of_change)\n    }\n\n    /// Mutates the delay change by scheduling a change at the current block number. This function is only meaningful\n    /// when called in public with the current block number.\n    /// The block at which the new delay will become effective is determined automatically:\n    ///  - when increasing the delay, the change is effective immediately\n    ///  - when reducing the delay, the change will take effect after a delay equal to the difference between old and\n    ///    new delay. For example, if reducing from 3 days to 1 day, the reduction will be scheduled to happen after 2\n    ///    days.\n    pub fn schedule_change(&mut self, new: u32, current_block_number: u32) {\n        let current = self.get_current(current_block_number);\n\n        // When changing the delay value we must ensure that it is not possible to produce a value change with a delay\n        // shorter than the current one.\n        let blocks_until_change = if new > current {\n            // Increasing the delay value can therefore be done immediately: this does not invalidate prior contraints\n            // about how quickly a value might be changed (indeed it strengthens them).\n            0\n        } else {\n            // Decreasing the delay requires waiting for the difference between current and new delay in order to ensure\n            // that overall the current delay is respected.\n            //\n            //      current                    delay              earliest value block of change\n            //       block                 block of change         if delay remained unchanged\n            //  =======N=========================|================================X=================>\n            //         ^                         ^                                ^\n            //         |-------------------------|--------------------------------|\n            //         |   blocks until change               new delay            |\n            //         ------------------------------------------------------------\n            //                            current delay\n            current - new\n        };\n\n        self.pre = Option::some(current);\n        self.post = Option::some(new);\n        self.block_of_change = current_block_number + blocks_until_change;\n    }\n\n    /// Returns the minimum delay before a value might mutate due to a scheduled change, from the perspective of some\n    /// historical block number. It only returns a meaningful value when called in private with historical blocks. This \n    /// function can be used alongside `ScheduledValueChange.get_block_horizon` to properly constrain the\n    /// `max_block_number` transaction property when reading mutable shared state.\n    /// This value typically equals the current delay at the block following the historical one (the earliest one in\n    /// which a value change could be scheduled), but it also considers scenarios in which a delay reduction is \n    /// scheduled to happen in the near future, resulting in a way to schedule a change with an overall delay lower than\n    /// the current one.\n    pub fn get_effective_minimum_delay_at(self, historical_block_number: u32) -> u32 {\n        if self.block_of_change <= historical_block_number {\n            // If no delay changes were scheduled, then the delay value at the historical block (post) is guaranteed to\n            // hold due to how further delay changes would be scheduled by `schedule_change`.\n            self.post.unwrap_or(INITIAL_DELAY)\n        } else {\n            // If a change is scheduled, then the effective delay might be lower than the current one (pre). At the\n            // block of change the current delay will be the scheduled one, with an overall delay from the historical\n            // block number equal to the number of blocks until the change plus the new delay. If this value is lower\n            // than the current delay, then that is the effective minimum delay.\n            //\n            //       historical\n            //         block                  delay                  actual earliest value\n            //           v                block of change              block of change\n            //  =========NS=====================|=============================X===========Y=====>\n            //            ^                     ^                             ^           ^\n            //     earliest block in            |                             |           |\n            //   which to schedule change       |                             |           |\n            //           |                      |                             |           |\n            //           |----------------------|------------------------------           |\n            //           |         blocks                  new delay                      |\n            //           |      until change                                              |\n            //           |                                                                |\n            //           |----------------------------------------------------------------|\n            //                        current delay at the earliest block in \n            //                             which to scheduled value change\n\n            let blocks_until_change = self.block_of_change - (historical_block_number + 1);\n\n            min(\n                self.pre.unwrap_or(INITIAL_DELAY),\n                blocks_until_change + self.post.unwrap_or(INITIAL_DELAY)\n            )\n        }\n    }\n}\n\nimpl<INITIAL_DELAY> Serialize<1> for ScheduledDelayChange<INITIAL_DELAY> {\n    fn serialize(self) -> [Field; 1] {\n        // We pack all three u32 values into a single U128, which is made up of two u64 limbs.\n        // Low limb: [ pre_inner: u32 | post_inner: u32 ]\n        // High limb: [ empty | pre_is_some: u8 |  post_is_some: u8 | block_of_change: u32 ]\n\n        let lo = ((self.pre.unwrap_unchecked() as u64) * (1 << 32))\n            + (self.post.unwrap_unchecked() as u64);\n\n        let hi = (self.pre.is_some() as u64) * (1 << 33) \n            + (self.post.is_some() as u64 * (1 << 32)) \n            + self.block_of_change as u64;\n\n        let packed = U128::from_u64s_le(lo, hi);\n\n        [packed.to_integer()]\n    }\n}\n\nimpl<INITIAL_DELAY> Deserialize<1> for ScheduledDelayChange<INITIAL_DELAY> {\n    fn deserialize(input: [Field; 1]) -> Self {\n        let packed = U128::from_integer(input[0]);\n\n        // We use division and modulo to clear the bits that correspond to other values when unpacking.\n\n        let pre_is_some = ((packed.hi as u64) / (1 << 33)) as bool;\n        let pre_inner = ((packed.lo as u64) / (1 << 32)) as u32;\n\n        let post_is_some = (((packed.hi as u64) / (1 << 32)) % (1 << 1)) as bool;\n        let post_inner = ((packed.lo as u64) % (1 << 32)) as u32;\n\n        let block_of_change = ((packed.hi as u64) % (1 << 32)) as u32;\n\n        Self {\n            pre: if pre_is_some { Option::some(pre_inner) } else { Option::none() },\n            post: if post_is_some { Option::some(post_inner) } else { Option::none() },\n            block_of_change,\n            _dummy: [0; INITIAL_DELAY],\n        }\n    }\n}\n\nimpl<INITIAL_DELAY> Eq for ScheduledDelayChange<INITIAL_DELAY> {\n    fn eq(self, other: Self) -> bool {\n        (self.pre == other.pre) & (self.post == other.post) & (self.block_of_change == other.block_of_change)\n    }\n}\n"},"157":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/state_vars/shared_mutable/shared_mutable_private_getter.nr","source":"use dep::protocol_types::{\n    hash::{pedersen_hash, poseidon2_hash}, traits::{FromField, ToField}, address::AztecAddress,\n    header::Header\n};\n\nuse crate::context::PrivateContext;\nuse crate::state_vars::{\n    storage::Storage,\n    shared_mutable::{\n    shared_mutable::SharedMutable, scheduled_delay_change::ScheduledDelayChange,\n    scheduled_value_change::ScheduledValueChange\n}\n};\n\nstruct SharedMutablePrivateGetter<T, INITIAL_DELAY> {\n    context: &mut PrivateContext,\n    // The contract address of the contract we want to read from\n    other_contract_address: AztecAddress,\n    // The storage slot where the SharedMutable is stored on the other contract\n    storage_slot: Field,\n    // The _dummy variable forces INITIAL_DELAY to be interpreted as a numberic value. This is a workaround to\n    // https://github.com/noir-lang/noir/issues/4633. Remove once resolved.\n    _dummy: [Field; INITIAL_DELAY],\n}\n\n// We have this as a view-only interface to reading Shared Mutables in other contracts.\n// Currently the Shared Mutable does not support this. We can adapt SharedMutable at a later date\nimpl<T, INITIAL_DELAY> SharedMutablePrivateGetter<T, INITIAL_DELAY> {\n    pub fn new(\n        context: &mut PrivateContext,\n        other_contract_address: AztecAddress,\n        storage_slot: Field\n    ) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        assert(other_contract_address.to_field() != 0, \"Other contract address cannot be 0\");\n        Self { context, other_contract_address, storage_slot, _dummy: [0; INITIAL_DELAY] }\n    }\n\n    pub fn get_value_in_private(self, header: Header) -> T where T: FromField + ToField + Eq {\n        // We create a dummy SharedMutable state variable so that we can reuse its historical_read_from_public_storage\n        // method, greatly reducing code duplication. \n        let dummy: SharedMutable<T, INITIAL_DELAY, ()> = SharedMutable::new((), self.storage_slot);\n        let (value_change, delay_change, historical_block_number) = dummy.historical_read_from_public_storage(header, self.other_contract_address);\n\n        let effective_minimum_delay = delay_change.get_effective_minimum_delay_at(historical_block_number);\n        let block_horizon = value_change.get_block_horizon(historical_block_number, effective_minimum_delay);\n\n        // If our context has the same header as the one we pass in via the parameter, we are trying to read the \"current\" value\n        // and thus need to set the tx max block number below. If the context header is not the same as the one we pass in, this means\n        // we are trying to read a historical value and thus have no constraint on the max block number that this transaction can be included in.\n        if (self.context.historical_header.global_variables.block_number.eq(header.global_variables.block_number)) {\n            self.context.set_tx_max_block_number(block_horizon);\n        }\n\n        value_change.get_current_at(historical_block_number)\n    }\n}\n"},"159":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/state_vars/shared_mutable/scheduled_value_change.nr","source":"use dep::protocol_types::traits::{Serialize, Deserialize, FromField, ToField};\nuse std::cmp::min;\n\nmod test;\n\n// This data structure is used by SharedMutable to represent a value that changes from `pre` to `post` at some block\n// called the `block_of_change`. The value can only be made to change by scheduling a change event at some future block\n// of change after some minimum delay measured in blocks has elapsed. This means that at any given block number we know\n// both the current value and the smallest block number at which the value might change - this is called the\n// 'block horizon'.\nstruct ScheduledValueChange<T> {\n    pre: T,\n    post: T,\n    // Block at which `post` value is used instead of `pre`\n    block_of_change: u32,\n}\n\nimpl<T> ScheduledValueChange<T> {\n    pub fn new(pre: T, post: T, block_of_change: u32) -> Self {\n        Self { pre, post, block_of_change }\n    }\n\n    /// Returns the value stored in the data structure at a given block. This function can be called both in public\n    /// (where `block_number` is simply the current block number, i.e. the number of the block in which the current\n    /// transaction will be included) and in private (where `block_number` is the historical block number that is used\n    /// to construct the proof).\n    /// Reading in private is only safe if the transaction's `max_block_number` property is set to a value lower or\n    /// equal to the block horizon (see `get_block_horizon()`).\n    pub fn get_current_at(self, block_number: u32) -> T {\n        // The post value becomes the current one at the block of change. This means different things in each realm:\n        // - in public, any transaction that is included in the block of change will use the post value\n        // - in private, any transaction that includes the block of change as part of the historical state will use the\n        //   post value (barring any follow-up changes)\n\n        if block_number < self.block_of_change {\n            self.pre\n        } else {\n            self.post\n        }\n    }\n\n    /// Returns the scheduled change, i.e. the post-change value and the block at which it will become the current\n    /// value. Note that this block may be in the past if the change has already taken place.\n    /// Additionally, further changes might be later scheduled, potentially canceling the one returned by this function.\n    pub fn get_scheduled(self) -> (T, u32) {\n        (self.post, self.block_of_change)\n    }\n\n    /// Returns the largest block number at which the value returned by `get_current_at` is known to remain the current\n    /// value. This value is only meaningful in private when constructing a proof at some `historical_block_number`,\n    /// since due to its asynchronous nature private execution cannot know about any later scheduled changes.\n    /// The caller of this function must know how quickly the value can change due to a scheduled change in the form of\n    /// `minimum_delay`. If the delay itself is immutable, then this is just its duration. If the delay is mutable\n    /// however, then this value is the 'effective minimum delay' (obtained by calling\n    /// `ScheduledDelayChange.get_effective_minimum_delay_at`), which equals the minimum number of blocks that need to\n    /// elapse from the next block until the value changes, regardless of further delay changes.\n    /// The value returned by `get_current_at` in private when called with a historical block number is only safe to use\n    /// if the transaction's `max_block_number` property is set to a value lower or equal to the block horizon computed\n    /// using the same historical block number.\n    pub fn get_block_horizon(self, historical_block_number: u32, minimum_delay: u32) -> u32 {\n        // The block horizon is the very last block in which the current value is known. Any block past the horizon\n        // (i.e. with a block number larger than the block horizon) may have a different current value. Reading the\n        // current value in private typically requires constraining the maximum valid block number to be equal to the\n        // block horizon.\n\n        if historical_block_number >= self.block_of_change {\n            // Once the block of change has been mined, the current value (post) will not change unless a new value\n            // change is scheduled. This did not happen at the historical block number (or else it would not be\n            // greater or equal to the block of change), and therefore could only happen after the historical block\n            // number. The earliest would be the immediate next block, and so the smallest possible next block of change\n            // equals `historical_block_number + 1 + minimum_delay`. Our block horizon is simply the previous block to\n            // that one.\n            //\n            //      block of      historical\n            //       change         block            block horizon\n            //   =======|=============N===================H===========>\n            //                         ^                   ^\n            //                         ---------------------\n            //                             minimum delay\n\n            historical_block_number + minimum_delay\n        } else {\n            // If the block of change has not yet been mined however, then there are two possible scenarios.\n            //   a) It could be so far into the future that the block horizon is actually determined by the minimum\n            //      delay, because a new change could be scheduled and take place _before_ the currently scheduled one.\n            //      This is similar to the scenario where the block of change is in the past: the time horizon is the\n            //      block prior to the earliest one in which a new block of change might land.\n            //\n            //         historical\n            //           block                        block horizon      block of change\n            //        =====N=================================H=================|=========>\n            //              ^                                 ^\n            //              |                                 |\n            //              -----------------------------------\n            //                        minimum delay\n            //\n            //   b) It could be fewer than `minimum_delay` blocks away from the historical block number, in which case\n            //      the block of change would become the limiting factor for the time horizon, which would equal the\n            //      block right before the block of change (since by definition the value changes at the block of\n            //      change).\n            //\n            //           historical                         block horizon\n            //             block     block of change       if not scheduled\n            //        =======N=============|===================H=================>\n            //                ^           ^                     ^\n            //                |     actual horizon              |\n            //                -----------------------------------\n            //                          minimum delay\n            //\n            // Note that the current implementation does not allow the caller to set the block of change to an arbitrary\n            // value, and therefore scenario a) is not currently possible. However implementing #5501 would allow for\n            // this to happen.\n\n            // Because historical_block_number < self.block_of_change, then block_of_change > 0 and we can safely\n            // subtract 1.\n            min(\n                self.block_of_change - 1,\n                historical_block_number + minimum_delay\n            )\n        }\n    }\n\n    /// Mutates the value by scheduling a change at the current block number. This function is only meaningful when\n    /// called in public with the current block number.\n    pub fn schedule_change(\n        &mut self,\n        new_value: T,\n        current_block_number: u32,\n        minimum_delay: u32,\n        block_of_change: u32\n    ) {\n        assert(block_of_change >= current_block_number + minimum_delay);\n\n        self.pre = self.get_current_at(current_block_number);\n        self.post = new_value;\n        self.block_of_change = block_of_change;\n    }\n}\n\nimpl<T> Serialize<3> for ScheduledValueChange<T> {\n    fn serialize(self) -> [Field; 3] where T: ToField {\n        [self.pre.to_field(), self.post.to_field(), self.block_of_change.to_field()]\n    }\n}\n\nimpl<T> Deserialize<3> for ScheduledValueChange<T> {\n  fn deserialize(input: [Field; 3]) -> Self  where T: FromField {\n    Self {\n        pre: FromField::from_field(input[0]),\n        post: FromField::from_field(input[1]),\n        block_of_change: FromField::from_field(input[2]),\n    }\n  }\n}\n\nimpl<T> Eq for ScheduledValueChange<T>  {\n    fn eq(self, other: Self) -> bool where T: Eq {\n        (self.pre == other.pre) & (self.post == other.post) & (self.block_of_change == other.block_of_change)\n    }\n}\n"},"160":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/state_vars/shared_mutable/shared_mutable.nr","source":"use dep::protocol_types::{\n    hash::{pedersen_hash, poseidon2_hash}, header::Header, address::AztecAddress,\n    traits::{FromField, ToField}\n};\n\nuse crate::context::{PrivateContext, PublicContext};\nuse crate::state_vars::{\n    storage::Storage,\n    shared_mutable::{scheduled_value_change::ScheduledValueChange, scheduled_delay_change::ScheduledDelayChange}\n};\nuse crate::oracle::storage::storage_read;\nuse dep::std::unsafe::zeroed;\n\nmod test;\n\nstruct SharedMutable<T, INITIAL_DELAY, Context> {\n    context: Context,\n    storage_slot: Field,\n}\n\n// This will make the Aztec macros require that T implements the Serialize<N> trait, and allocate N storage slots to\n// this state variable. This is incorrect, since what we actually store is:\n//  - a ScheduledValueChange<T>, which requires 1 + 2 * M storage slots, where M is the serialization length of T\n//  - a ScheduledDelayChange, which requires another storage slot\n//\n// TODO https://github.com/AztecProtocol/aztec-packages/issues/5736: change the storage allocation scheme so that we\n// can actually use it here\nimpl<T, INITIAL_DELAY, Context> Storage<T> for SharedMutable<T, INITIAL_DELAY, Context> {}\n\n// TODO: extract into a utils module once  we can do arithmetic on generics, i.e. https://github.com/noir-lang/noir/issues/4784\nfn concat_arrays<N, M, O>(arr_n: [Field; N], arr_m: [Field; M]) -> [Field; O] {\n    assert_eq(N + M, O);\n    let mut out: [Field; O] = [0; O];\n    for i in 0..N {\n        out[i] = arr_n[i];\n    }\n    for i in 0..M {\n        out[N+i] = arr_m[i];\n    }\n    out\n}\n\n// SharedMutable<T> stores a value of type T that is:\n//  - publicly known (i.e. unencrypted)\n//  - mutable in public\n//  - readable in private with no contention (i.e. multiple parties can all read the same value without blocking one\n//    another nor needing to coordinate)\n// This is famously a hard problem to solve. SharedMutable makes it work by introducing a delay to public mutation:\n// the value is not changed immediately but rather a value change is scheduled to happen in the future after some delay\n// measured in blocks. Reads in private are only valid as long as they are included in a block not too far into the\n// future, so that they can guarantee the value will not have possibly changed by then (because of the delay).\n// The delay for changing a value is initially equal to INITIAL_DELAY, but can be changed by calling\n// `schedule_delay_change`.\nimpl<T, INITIAL_DELAY, Context> SharedMutable<T, INITIAL_DELAY, Context> {\n    pub fn new(context: Context, storage_slot: Field) -> Self {\n        assert(storage_slot != 0, \"Storage slot 0 not allowed. Storage slots must start from 1.\");\n        Self { context, storage_slot }\n    }\n\n    fn hash_scheduled_data(\n        value_change: ScheduledValueChange<T>,\n        delay_change: ScheduledDelayChange<INITIAL_DELAY>\n    ) -> Field where T: ToField {\n        // TODO(#5491 and https://github.com/noir-lang/noir/issues/4784): update this so that we don't need to rely on\n        // ScheduledValueChange serializing to 3 and ScheduledDelayChange serializing to 1\n        let concatenated: [Field; 4] = concat_arrays(value_change.serialize(), delay_change.serialize());\n        poseidon2_hash(concatenated)\n    }\n\n    // Since we can't rely on the native storage allocation scheme, we hash the storage slot to get a unique location in\n    // which we can safely store as much data as we need.\n    // See https://github.com/AztecProtocol/aztec-packages/issues/5492 and\n    // https://github.com/AztecProtocol/aztec-packages/issues/5736\n    // We store three things in public storage:\n    //  - a ScheduledValueChange\n    //  - a ScheduledDelaChange\n    //  - the hash of both of these (via `hash_scheduled_data`)\n    fn get_value_change_storage_slot(self) -> Field {\n        pedersen_hash([self.storage_slot, 0], 0)\n    }\n\n    fn get_delay_change_storage_slot(self) -> Field {\n        pedersen_hash([self.storage_slot, 1], 0)\n    }\n\n    fn get_hash_storage_slot(self) -> Field {\n        pedersen_hash([self.storage_slot, 2], 0)\n    }\n\n    // It may seem odd that we take a header and address instead of reading from e.g. a PrivateContext, but this lets us\n    // reuse this function in SharedMutablePrivateGetter.\n    fn historical_read_from_public_storage(\n        self,\n        header: Header,\n        address: AztecAddress\n    ) -> (ScheduledValueChange<T>, ScheduledDelayChange<INITIAL_DELAY>, u32) where T: FromField + ToField + Eq {\n        let historical_block_number = header.global_variables.block_number as u32;\n\n        // We could simply produce historical inclusion proofs for both the ScheduledValueChange and\n        // ScheduledDelayChange, but that'd require one full sibling path per storage slot (since due to kernel siloing\n        // the storage is not contiguous), and in the best case in which T is a single field that'd be 4 slots.\n        // Instead, we get an oracle to provide us the correct values for both the value and delay changes, and instead\n        // prove inclusion of their hash, which is both a much smaller proof (a single slot), and also independent of\n        // the size of T.\n        let (value_change_hint, delay_change_hint) = get_public_storage_hints(address, self.storage_slot, historical_block_number);\n\n        // Ideally the following would be simply public_storage::read_historical, but we can't implement that yet.\n        let hash = header.public_storage_historical_read(self.get_hash_storage_slot(), address);\n\n        // @todo This is written strangely to bypass a formatting issue with the if that is breaking ci.\n        let (a, b, c) = if hash != 0 {\n            let a = SharedMutable::hash_scheduled_data(value_change_hint, delay_change_hint);\n            (a, value_change_hint, delay_change_hint)\n        } else {\n            // The hash slot can only hold a zero if it is uninitialized, meaning no value or delay change was ever\n            // scheduled. Therefore, the hints must then correspond to uninitialized scheduled changes.\n            let b = ScheduledValueChange::deserialize(zeroed());\n            let c = ScheduledDelayChange::deserialize(zeroed());\n            (hash, b, c)\n        };\n\n        assert_eq(hash, a, \"Hint values do not match hash\");\n        assert_eq(value_change_hint, b, \"Non-zero value change for zero hash\");\n        assert_eq(delay_change_hint, c, \"Non-zero delay change for zero hash\");\n\n        (value_change_hint, delay_change_hint, historical_block_number)\n    }\n}\n\nimpl<T, INITIAL_DELAY> SharedMutable<T, INITIAL_DELAY, &mut PublicContext> {\n    pub fn schedule_value_change(self, new_value: T) where T: ToField {\n        let mut value_change = self.read_value_change();\n        let delay_change = self.read_delay_change();\n\n        let block_number = self.context.block_number() as u32;\n        let current_delay = delay_change.get_current(block_number);\n\n        // TODO: make this configurable\n        // https://github.com/AztecProtocol/aztec-packages/issues/5501\n        let block_of_change = block_number + current_delay;\n        value_change.schedule_change(new_value, block_number, current_delay, block_of_change);\n\n        self.write(value_change, delay_change);\n    }\n\n    pub fn schedule_delay_change(self, new_delay: u32) where T: ToField {\n        let mut delay_change = self.read_delay_change();\n\n        let block_number = self.context.block_number() as u32;\n\n        delay_change.schedule_change(new_delay, block_number);\n\n        self.write(self.read_value_change(), delay_change);\n    }\n\n    pub fn get_current_value_in_public(self) -> T {\n        let block_number = self.context.block_number() as u32;\n        self.read_value_change().get_current_at(block_number)\n    }\n\n    pub fn get_current_delay_in_public(self) -> u32 {\n        let block_number = self.context.block_number() as u32;\n        self.read_delay_change().get_current(block_number)\n    }\n\n    pub fn get_scheduled_value_in_public(self) -> (T, u32) {\n        self.read_value_change().get_scheduled()\n    }\n\n    pub fn get_scheduled_delay_in_public(self) -> (u32, u32) {\n        self.read_delay_change().get_scheduled()\n    }\n\n    fn read_value_change(self) -> ScheduledValueChange<T> {\n        self.context.storage_read(self.get_value_change_storage_slot())\n    }\n\n    fn read_delay_change(self) -> ScheduledDelayChange<INITIAL_DELAY> {\n        self.context.storage_read(self.get_delay_change_storage_slot())\n    }\n\n    fn write(\n        self,\n        value_change: ScheduledValueChange<T>,\n        delay_change: ScheduledDelayChange<INITIAL_DELAY>\n    ) where T: ToField {\n        // Whenever we write to public storage, we write both the value change and delay change as well as the hash of\n        // them both. This guarantees that the hash is always kept up to date.\n        // While this makes for more costly writes, it also makes private proofs much simpler because they only need to\n        // produce a historical proof for the hash, which results in a single inclusion proof (as opposed to 4 in the\n        // best case scenario in which T is a single field). Private shared mutable reads are assumed to be much more\n        // frequent than public writes, so this tradeoff makes sense.\n        self.context.storage_write(self.get_value_change_storage_slot(), value_change);\n        self.context.storage_write(self.get_delay_change_storage_slot(), delay_change);\n        self.context.storage_write(\n            self.get_hash_storage_slot(),\n            SharedMutable::hash_scheduled_data(value_change, delay_change)\n        );\n    }\n}\n\nimpl<T, INITIAL_DELAY> SharedMutable<T, INITIAL_DELAY, &mut PrivateContext> {\n    pub fn get_current_value_in_private(self) -> T where T: FromField + ToField + Eq {\n        // When reading the current value in private we construct a historical state proof for the public value.\n        // However, since this value might change, we must constrain the maximum transaction block number as this proof\n        // will only be valid for however many blocks we can ensure the value will not change, which will depend on the\n        // current delay and any scheduled delay changes.\n\n        let (value_change, delay_change, historical_block_number) = self.historical_read_from_public_storage(self.context.get_header(), self.context.this_address());\n\n        // We use the effective minimum delay as opposed to the current delay at the historical block as this one also\n        // takes into consideration any scheduled delay changes.\n        // For example, consider a scenario in which at block 200 the current delay was 50. We may naively think that\n        // the earliest we could change the value would be at block 251 by scheduling immediately after the historical\n        // block, i.e. at block 201. But if there was a delay change scheduled for block 210 to reduce the delay to 20\n        // blocks, then if a value change was scheduled at block 210 it would go into effect at block 230, which is\n        // earlier than what we'd expect if we only considered the current delay.\n        let effective_minimum_delay = delay_change.get_effective_minimum_delay_at(historical_block_number);\n        let block_horizon = value_change.get_block_horizon(historical_block_number, effective_minimum_delay);\n\n        // We prevent this transaction from being included in any block after the block horizon, ensuring that the\n        // historical public value matches the current one, since it can only change after the horizon.\n        self.context.set_tx_max_block_number(block_horizon);\n        value_change.get_current_at(historical_block_number)\n    }\n}\n\nunconstrained fn get_public_storage_hints<T, INITIAL_DELAY>(\n    address: AztecAddress,\n    storage_slot: Field,\n    block_number: u32\n) -> (ScheduledValueChange<T>, ScheduledDelayChange<INITIAL_DELAY>) {\n    // This function cannot be part of the &mut PrivateContext impl because that'd mean that by passing `self` we'd also\n    // be passing a mutable reference to an unconstrained function, which is not allowed. We therefore create a dummy\n    // state variable here so that we can access the methods to compute storage slots. This will all be removed in the\n    // future once we do proper storage slot allocation (#5492).\n    let dummy = SharedMutable::new((), storage_slot);\n\n    (\n        storage_read(address, dummy.get_value_change_storage_slot(), block_number), storage_read(address, dummy.get_delay_change_storage_slot(), block_number)\n    )\n}\n"},"173":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/public_call_stack_item_compressed.nr","source":"use crate::abis::{call_context::CallContext, function_data::FunctionData, gas::Gas};\nuse crate::address::AztecAddress;\nuse crate::constants::{GENERATOR_INDEX__CALL_STACK_ITEM, PUBLIC_CALL_STACK_ITEM_COMPRESSED_LENGTH};\nuse crate::traits::{Hash, Empty, Serialize, Deserialize};\nuse crate::utils::reader::Reader;\n\n/**\n * A compressed version of the PublicCallStackItem struct used to compute the \"hash\"\n * of a PublicCallStackItem.\n * \n * Historically, we have been zeroing most values in the PublicCallStackItem struct\n * to compute the hash involved when adding a PublicCallStackItem to the PublicCallStack.\n * \n * This struct is used to store the values that we did not zero out, and allow us to hash\n * only these, thereby skipping a lot of computation and saving us a lot of constraints\n * \n * Essentially this struct exists such that we don't have a `hash` function in the \n * PublicCallStackItem struct that practically throws away some values of the struct\n * without clearly indicating that it does so.\n */\nstruct PublicCallStackItemCompressed {\n    contract_address: AztecAddress,\n    call_context: CallContext,\n    function_data: FunctionData,\n    args_hash: Field,\n    returns_hash: Field,\n    revert_code: u8,\n    start_gas_left: Gas,\n    end_gas_left: Gas,\n}\n\nimpl Eq for PublicCallStackItemCompressed {\n    fn eq(self, other: PublicCallStackItemCompressed) -> bool {\n        (self.contract_address == other.contract_address)\n            & (self.call_context == other.call_context)\n            & (self.function_data == other.function_data)\n            & (self.args_hash == other.args_hash)\n            & (self.returns_hash == other.returns_hash)\n            & (self.revert_code == other.revert_code)\n            & (self.start_gas_left == other.start_gas_left)\n            & (self.end_gas_left == other.end_gas_left)\n    }\n}\n\nimpl Hash for PublicCallStackItemCompressed {\n    fn hash(self) -> Field {\n        std::hash::pedersen_hash_with_separator(self.serialize(), GENERATOR_INDEX__CALL_STACK_ITEM)\n    }\n}\n\nimpl Empty for PublicCallStackItemCompressed {\n    fn empty() -> Self {\n        PublicCallStackItemCompressed {\n            contract_address: AztecAddress::empty(),\n            call_context: CallContext::empty(),\n            function_data: FunctionData::empty(),\n            args_hash: 0,\n            returns_hash: 0,\n            revert_code: 0,\n            start_gas_left: Gas::empty(),\n            end_gas_left: Gas::empty(),\n        }\n    }\n}\n\nimpl Serialize<PUBLIC_CALL_STACK_ITEM_COMPRESSED_LENGTH> for PublicCallStackItemCompressed {\n    fn serialize(self) -> [Field; PUBLIC_CALL_STACK_ITEM_COMPRESSED_LENGTH] {\n        let mut fields: BoundedVec<Field, PUBLIC_CALL_STACK_ITEM_COMPRESSED_LENGTH> = BoundedVec::new();\n\n        fields.push(self.contract_address.to_field());\n        fields.extend_from_array(self.call_context.serialize());\n        fields.extend_from_array(self.function_data.serialize());\n        fields.push(self.args_hash);\n        fields.push(self.returns_hash);\n        fields.push(self.revert_code as Field);\n        fields.extend_from_array(self.start_gas_left.serialize());\n        fields.extend_from_array(self.end_gas_left.serialize());\n\n        assert_eq(fields.len(), PUBLIC_CALL_STACK_ITEM_COMPRESSED_LENGTH);\n\n        fields.storage\n    }\n}\n\nimpl Deserialize<PUBLIC_CALL_STACK_ITEM_COMPRESSED_LENGTH> for PublicCallStackItemCompressed {\n  fn deserialize(fields: [Field; PUBLIC_CALL_STACK_ITEM_COMPRESSED_LENGTH]) -> PublicCallStackItemCompressed {\n    let mut reader = Reader::new(fields);\n\n    let item = PublicCallStackItemCompressed {\n      contract_address: reader.read_struct(AztecAddress::deserialize),\n      call_context: reader.read_struct(CallContext::deserialize),\n      function_data: reader.read_struct(FunctionData::deserialize),\n      args_hash: reader.read(),\n      returns_hash: reader.read(),\n      revert_code: reader.read() as u8,\n      start_gas_left: reader.read_struct(Gas::deserialize),\n      end_gas_left: reader.read_struct(Gas::deserialize),\n    };\n    reader.finish();\n    item\n  }\n}\n"},"180":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/validation_requests/key_validation_request.nr","source":"use crate::{constants::KEY_VALIDATION_REQUEST_LENGTH, traits::{Empty, Serialize, Deserialize}, point::Point};\n\nstruct KeyValidationRequest {\n    pk_m: Point,\n    sk_app: Field, // not a grumpkin scalar because it's output of poseidon2\n}\n\nimpl Eq for KeyValidationRequest {\n    fn eq(self, request: KeyValidationRequest) -> bool {\n        (request.pk_m.eq(self.pk_m))\n            & (request.sk_app.eq(self.sk_app))\n    }\n}\n\nimpl Empty for KeyValidationRequest {\n    fn empty() -> Self {\n        KeyValidationRequest {\n            pk_m: Point::empty(),\n            sk_app: 0,\n        }\n    }\n}\n\nimpl Serialize<KEY_VALIDATION_REQUEST_LENGTH> for KeyValidationRequest {\n    fn serialize(self) -> [Field; KEY_VALIDATION_REQUEST_LENGTH] {\n        [\n            self.pk_m.x,\n            self.pk_m.y,\n            self.pk_m.is_infinite as Field,\n            self.sk_app,\n        ]\n    }\n}\n\nimpl Deserialize<KEY_VALIDATION_REQUEST_LENGTH> for KeyValidationRequest {\n    fn deserialize(fields: [Field; KEY_VALIDATION_REQUEST_LENGTH]) -> Self {\n        Self {\n            pk_m: Point::new(fields[0], fields[1], fields[2] as bool),\n            sk_app: fields[3],\n        }\n    }\n}\n\n"},"193":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/function_selector.nr","source":"use crate::utils::field::field_from_bytes;\nuse crate::traits::{Serialize, Deserialize, FromField, ToField, Empty};\n\nglobal SELECTOR_SIZE = 4;\n\nstruct FunctionSelector {\n    // 1st 4-bytes of abi-encoding of function.\n    inner: u32,\n}\n\nimpl Eq for FunctionSelector {\n    fn eq(self, function_selector: FunctionSelector) -> bool {\n        function_selector.inner == self.inner\n    }\n}\n\nimpl Serialize<1> for FunctionSelector {\n    fn serialize(self: Self) -> [Field; 1] {\n        [self.inner as Field]\n    }\n}\n\nimpl Deserialize<1> for FunctionSelector {\n    fn deserialize(fields: [Field; 1]) -> Self {\n        Self {\n            inner: fields[0] as u32\n        }\n    }\n}\n\nimpl FromField for FunctionSelector {\n    fn from_field(field: Field) -> Self {\n        Self { inner: field as u32 }\n    }\n}\n\nimpl ToField for FunctionSelector {\n    fn to_field(self) -> Field {\n        self.inner as Field\n    }\n}\n\nimpl Empty for FunctionSelector {\n    fn empty() -> Self {\n        Self { inner: 0 as u32 }\n    }\n}\n\nimpl FunctionSelector {\n    pub fn from_u32(value: u32) -> Self {\n        Self { inner: value }\n    }\n\n    pub fn from_signature<N>(signature: str<N>) -> Self {\n        let bytes = signature.as_bytes();\n        let hash = std::hash::keccak256(bytes, bytes.len() as u32);\n\n        let mut selector_be_bytes = [0; SELECTOR_SIZE];\n        for i in 0..SELECTOR_SIZE {\n            selector_be_bytes[i] = hash[i];\n        }\n\n        FunctionSelector::from_field(field_from_bytes(selector_be_bytes, true))\n    }\n\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n}\n"},"2":{"path":"std/array.nr","source":"use crate::cmp::Ord;\n\n// TODO: Once we fully move to the new SSA pass this module can be removed and replaced\n// by the methods in the `slice` module\nimpl<T, let N: u32> [T; N] {\n    #[builtin(array_len)]\n    pub fn len(self) -> u32 {}\n\n    pub fn sort(self) -> Self where T: Ord {\n        self.sort_via(|a: T, b: T| a <= b)\n    }\n\n    pub fn sort_via<Env>(self, ordering: fn[Env](T, T) -> bool) -> Self {\n        let sorted_index = self.get_sorting_index(ordering);\n        let mut result = self;\n        // Ensure the indexes are correct\n        for i in 0..N {\n            let pos = find_index(sorted_index, i);\n            assert(sorted_index[pos] == i);\n        }\n        // Sort the array using the indexes\n        for i in 0..N {\n            result[i] = self[sorted_index[i]];\n        }\n        // Ensure the array is sorted\n        for i in 0..N - 1 {\n            assert(ordering(result[i], result[i + 1]));\n        }\n\n        result\n    }\n\n    /// Returns the index of the elements in the array that would sort it, using the provided custom sorting function.\n    unconstrained fn get_sorting_index<Env>(self, ordering: fn[Env](T, T) -> bool) -> [u32; N] {\n        let mut result = [0; N];\n        let mut a = self;\n        for i in 0..N {\n            result[i] = i;\n        }\n        for i in 1..N {\n            for j in 0..i {\n                if ordering(a[i], a[j]) {\n                    let old_a_j = a[j];\n                    a[j] = a[i];\n                    a[i] = old_a_j;\n                    let old_j = result[j];\n                    result[j] = result[i];\n                    result[i] = old_j;\n                }\n            }\n        }\n        result\n    }\n\n    #[builtin(as_slice)]\n    pub fn as_slice(self) -> [T] {}\n\n    // Apply a function to each element of an array, returning a new array\n    // containing the mapped elements.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> [U; N] {\n        let first_elem = f(self[0]);\n        let mut ret = [first_elem; N];\n\n        for i in 1..self.len() {\n            ret[i] = f(self[i]);\n        }\n\n        ret\n    }\n\n    // Apply a function to each element of the array and an accumulator value,\n    // returning the final accumulated value. This function is also sometimes\n    // called `foldl`, `fold_left`, `reduce`, or `inject`.\n    pub fn fold<U, Env>(self, mut accumulator: U, f: fn[Env](U, T) -> U) -> U {\n        for elem in self {\n            accumulator = f(accumulator, elem);\n        }\n        accumulator\n    }\n\n    // Apply a function to each element of the array and an accumulator value,\n    // returning the final accumulated value. Unlike fold, reduce uses the first\n    // element of the given array as its starting accumulator value.\n    pub fn reduce<Env>(self, f: fn[Env](T, T) -> T) -> T {\n        let mut accumulator = self[0];\n        for i in 1..self.len() {\n            accumulator = f(accumulator, self[i]);\n        }\n        accumulator\n    }\n\n    // Returns true if all elements in the array satisfy the predicate\n    pub fn all<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = true;\n        for elem in self {\n            ret &= predicate(elem);\n        }\n        ret\n    }\n\n    // Returns true if any element in the array satisfies the predicate\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        for elem in self {\n            ret |= predicate(elem);\n        }\n        ret\n    }\n}\n\n// helper function used to look up the position of a value in an array of Field\n// Note that function returns 0 if the value is not found\nunconstrained fn find_index<let N: u32>(a: [u32; N], find: u32) -> u32 {\n    let mut result = 0;\n    for i in 0..a.len() {\n        if a[i] == find {\n            result = i;\n        }\n    }\n    result\n}\n"},"21":{"path":"std/embedded_curve_ops.nr","source":"use crate::ops::arith::{Add, Sub, Neg};\nuse crate::cmp::Eq;\n\nstruct EmbeddedCurvePoint {\n    x: Field,\n    y: Field,\n    is_infinite: bool\n}\n\nimpl EmbeddedCurvePoint {\n    fn new(x: Field, y: Field, is_infinite: bool) -> Self {\n        Self { x, y, is_infinite }\n    }\n\n    fn double(self) -> EmbeddedCurvePoint {\n        embedded_curve_add(self, self)\n    }\n\n    fn point_at_infinity() -> EmbeddedCurvePoint {\n        EmbeddedCurvePoint { x: 0, y: 0, is_infinite: true }\n    }\n}\n\nimpl Add for EmbeddedCurvePoint {\n    fn add(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint { \n        embedded_curve_add(self, other)\n    }\n}\n\nimpl Sub for EmbeddedCurvePoint {\n    fn sub(self, other: EmbeddedCurvePoint) -> EmbeddedCurvePoint { \n        self + other.neg()\n    }\n}\n\nimpl Neg for EmbeddedCurvePoint {\n    fn neg(self) -> EmbeddedCurvePoint { \n        EmbeddedCurvePoint {\n            x: self.x,\n            y: -self.y,\n            is_infinite: self.is_infinite\n        }\n    }\n}\n\nimpl Eq for EmbeddedCurvePoint {\n    fn eq(self: Self, b: EmbeddedCurvePoint) -> bool {\n        (self.is_infinite & b.is_infinite) | ((self.is_infinite == b.is_infinite) & (self.x == b.x) & (self.y == b.y))\n    }\n}\n\n// Scalar represented as low and high limbs\nstruct EmbeddedCurveScalar {\n    lo: Field,\n    hi: Field,\n}\n\nimpl EmbeddedCurveScalar {\n    pub fn new(lo: Field, hi: Field) -> Self {\n        EmbeddedCurveScalar { lo, hi }\n    }\n\n    pub fn derive_public_key(self) -> EmbeddedCurvePoint {\n        let public_key = fixed_base_scalar_mul(self.lo, self.hi);\n        EmbeddedCurvePoint { x: public_key[0], y: public_key[1], is_infinite: false }\n    }\n\n    #[field(bn254)]\n    fn from_field(scalar: Field) -> EmbeddedCurveScalar {\n        let (a,b) = crate::field::bn254::decompose(scalar);\n        EmbeddedCurveScalar { lo: a, hi: b }\n    }\n}\n\nimpl Eq for EmbeddedCurveScalar {\n    fn eq(self, key: EmbeddedCurveScalar) -> bool {\n        (key.hi == self.hi) & (key.lo == self.lo)\n    }\n}\n\n// Computes a multi scalar multiplication over the embedded curve.\n// For bn254, We have Grumpkin and Baby JubJub.\n// For bls12-381, we have JubJub and Bandersnatch.\n//\n// The embedded curve being used is decided by the \n// underlying proof system.\n#[foreign(multi_scalar_mul)]\n// docs:start:multi_scalar_mul\npub fn multi_scalar_mul<let N: u32>(\n    points: [EmbeddedCurvePoint; N],\n    scalars: [EmbeddedCurveScalar; N]\n) -> [Field; 3]\n// docs:end:multi_scalar_mul\n{}\n\n// docs:start:fixed_base_scalar_mul\npub fn fixed_base_scalar_mul(\n    scalar_low: Field,\n    scalar_high: Field\n) -> [Field; 3]\n// docs:end:fixed_base_scalar_mul\n{\n    let g1 = EmbeddedCurvePoint { x: 1, y: 17631683881184975370165255887551781615748388533673675138860, is_infinite: false };\n    let scalar = EmbeddedCurveScalar { lo: scalar_low, hi: scalar_high };\n    multi_scalar_mul([g1], [scalar])\n}\n\n// This is a hack as returning an `EmbeddedCurvePoint` from a foreign function in brillig returns a [BrilligVariable::SingleAddr; 2] rather than BrilligVariable::BrilligArray\n// as is defined in the brillig bytecode format. This is a workaround which allows us to fix this without modifying the serialization format.\n// docs:start:embedded_curve_add\nfn embedded_curve_add(\n    point1: EmbeddedCurvePoint,\n    point2: EmbeddedCurvePoint\n) -> EmbeddedCurvePoint\n// docs:end:embedded_curve_add\n{\n    let point_array = embedded_curve_add_array_return(point1, point2);\n    let x = point_array[0];\n    let y = point_array[1];\n    EmbeddedCurvePoint { x, y, is_infinite: point_array[2] == 1 }\n}\n\n#[foreign(embedded_curve_add)]\nfn embedded_curve_add_array_return(_point1: EmbeddedCurvePoint, _point2: EmbeddedCurvePoint) -> [Field; 3] {}\n"},"216":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/call_context.nr","source":"use crate::{\n    abis::function_selector::FunctionSelector, address::AztecAddress,\n    constants::{CALL_CONTEXT_LENGTH, GENERATOR_INDEX__CALL_CONTEXT}, hash::pedersen_hash,\n    traits::{Deserialize, Hash, Serialize, Empty}, utils::reader::Reader\n};\n\n// docs:start:call-context\nstruct CallContext {\n    msg_sender : AztecAddress,\n    storage_contract_address : AztecAddress,\n    function_selector : FunctionSelector,\n\n    is_delegate_call : bool,\n    is_static_call : bool,\n}\n// docs:end:call-context\n\nimpl Eq for CallContext {\n    fn eq(self, other: CallContext) -> bool {\n        self.serialize() == other.serialize()\n    }\n}\n\nimpl Hash for CallContext {\n    fn hash(self) -> Field {\n        pedersen_hash(self.serialize(), GENERATOR_INDEX__CALL_CONTEXT)\n    }\n}\n\nimpl Serialize<CALL_CONTEXT_LENGTH> for CallContext {\n    fn serialize(self) -> [Field; CALL_CONTEXT_LENGTH] {\n        let mut serialized: BoundedVec<Field, CALL_CONTEXT_LENGTH> = BoundedVec::new();\n\n        serialized.push(self.msg_sender.to_field());\n        serialized.push(self.storage_contract_address.to_field());\n        serialized.push(self.function_selector.to_field());\n        serialized.push(self.is_delegate_call as Field);\n        serialized.push(self.is_static_call as Field);\n    \n        serialized.storage\n    }\n}\n\nimpl Deserialize<CALL_CONTEXT_LENGTH> for CallContext {\n    fn deserialize(serialized: [Field; CALL_CONTEXT_LENGTH]) -> CallContext {\n        let mut reader = Reader::new(serialized);\n        CallContext {\n            msg_sender: AztecAddress::from_field(reader.read()),\n            storage_contract_address: AztecAddress::from_field(reader.read()),\n            function_selector: FunctionSelector::from_field(reader.read()),\n            is_delegate_call: reader.read() as bool,\n            is_static_call: reader.read() as bool,\n        }\n    }\n}\n\nimpl Empty for CallContext {\n    fn empty() -> Self {\n        CallContext {\n            msg_sender: AztecAddress::empty(),\n            storage_contract_address: AztecAddress::empty(),\n            function_selector: FunctionSelector::empty(),\n            is_delegate_call: false,\n            is_static_call: false,\n        }\n    }\n}\n\n#[test]\nfn serialize_deserialize_of_empty() {\n    let context = CallContext::empty();\n    let serialized = context.serialize();\n    let deserialized = CallContext::deserialize(serialized);\n    assert(context.eq(deserialized));\n}\n\n#[test]\nfn test_eq() {\n    let mut context1 = CallContext::empty();\n    let mut context2 = CallContext::empty();\n\n    context1.is_delegate_call = true;\n    context2.is_delegate_call = true;\n\n    let address: AztecAddress = AztecAddress::from_field(69420);\n    context1.msg_sender = address;\n    context2.msg_sender = address;\n\n    assert(context1.eq(context2));\n}\n\n#[test(should_fail)]\nfn not_eq_test_eq() {\n    let mut context1 = CallContext::empty();\n    let mut context2 = CallContext::empty();\n\n    context1.is_delegate_call = true;\n    context2.is_delegate_call = false;\n\n    let address1: AztecAddress = AztecAddress::from_field(69420);\n    let address2: AztecAddress = AztecAddress::from_field(42069);\n\n    context1.msg_sender = address1;\n    context2.msg_sender = address2;\n\n    assert(context1.eq(context2));\n}\n\n#[test]\nfn hash_smoke() {\n    let context = CallContext::empty();\n    let _hashed = context.hash();\n}\n"},"217":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/abis/max_block_number.nr","source":"use crate::{constants::MAX_BLOCK_NUMBER_LENGTH, traits::{Deserialize, Serialize, Empty}};\n\nstruct MaxBlockNumber {\n    _opt: Option<u32>\n}\n\nimpl Empty for MaxBlockNumber {\n    fn empty() -> Self {\n        Self { _opt: Option::none() }\n    }\n}\n\nimpl Eq for MaxBlockNumber {\n    fn eq(self, other: Self) -> bool {\n        self._opt == other._opt\n    }\n}\n\nimpl Serialize<MAX_BLOCK_NUMBER_LENGTH> for MaxBlockNumber {\n    fn serialize(self) -> [Field; MAX_BLOCK_NUMBER_LENGTH] {\n        [self._opt._is_some as Field, self._opt._value as Field]\n    }\n}\n\nimpl Deserialize<MAX_BLOCK_NUMBER_LENGTH> for MaxBlockNumber {\n    fn deserialize(serialized: [Field; MAX_BLOCK_NUMBER_LENGTH]) -> MaxBlockNumber {\n        MaxBlockNumber {\n            _opt: Option {\n                _is_some: serialized[0] as bool,\n                _value: serialized[1] as u32,\n            }\n        }\n    }\n}\n\nimpl MaxBlockNumber {\n    pub fn new(max_block_number: u32) -> Self {\n        Self { _opt: Option::some(max_block_number) }\n    }\n\n    pub fn is_none(self) -> bool {\n        self._opt.is_none()\n    }\n\n    pub fn is_some(self) -> bool {\n        self._opt.is_some()\n    }\n\n    pub fn unwrap(self) -> u32 {\n        self._opt.unwrap()\n    }\n\n    pub fn unwrap_unchecked(self) -> u32 {\n        self._opt.unwrap_unchecked()\n    }\n\n    pub fn min(lhs: MaxBlockNumber, rhs: MaxBlockNumber) -> MaxBlockNumber {\n        if rhs.is_none() {\n            lhs // lhs might also be none, but in that case both would be\n        } else {\n            MaxBlockNumber::min_with_u32(lhs, rhs.unwrap_unchecked())\n        }\n    }\n\n    pub fn min_with_u32(lhs: MaxBlockNumber, rhs: u32) -> MaxBlockNumber {\n        if lhs._opt.is_none() {\n            MaxBlockNumber::new(rhs)\n        } else {\n            let lhs_value = lhs._opt.unwrap_unchecked();\n\n            MaxBlockNumber::new(if lhs_value < rhs { lhs_value } else { rhs })\n        }\n    }\n}\n\n#[test]\nfn serialization_of_empty() {\n    let item = MaxBlockNumber::empty();\n    let serialized = item.serialize();\n    let deserialized = MaxBlockNumber::deserialize(serialized);\n    assert(item.eq(deserialized));\n}\n\n#[test]\nfn zeroed_is_none() {\n    // Large parts of the kernel rely on zeroed to initialize structs. This conveniently matches what `default` does,\n    // and though we should eventually move everything to use `default`, it's good to check for now that both are\n    // equivalent.\n    let a = MaxBlockNumber::empty();\n    assert(a.is_none());\n}\n\n#[test]\nfn serde_default() {\n    let a = MaxBlockNumber::empty();\n    let b = MaxBlockNumber::deserialize(a.serialize());\n    assert(b.is_none());\n}\n\n#[test]\nfn serde_some() {\n    let a = MaxBlockNumber::new(13);\n    let b = MaxBlockNumber::deserialize(a.serialize());\n    assert_eq(b.unwrap(), 13);\n}\n\n#[test(should_fail)]\nfn default_unwrap_panics() {\n    let a = MaxBlockNumber::empty();\n    let _ = a.unwrap();\n}\n\n#[test]\nfn min_default_default() {\n    let a = MaxBlockNumber::empty();\n    let b = MaxBlockNumber::empty();\n\n    assert(MaxBlockNumber::min(a, b).is_none());\n}\n\n#[test]\nfn min_default_some() {\n    let a = MaxBlockNumber::empty();\n    let b = MaxBlockNumber::new(13);\n\n    assert_eq(MaxBlockNumber::min(a, b).unwrap(), 13);\n    assert_eq(MaxBlockNumber::min(b, a).unwrap(), 13);\n}\n\n#[test]\nfn min_some_some() {\n    let a = MaxBlockNumber::new(13);\n    let b = MaxBlockNumber::new(42);\n\n    assert_eq(MaxBlockNumber::min(a, b).unwrap(), 13);\n    assert_eq(MaxBlockNumber::min(b, a).unwrap(), 13);\n}\n\n#[test]\nfn min_with_u32_default() {\n    let a = MaxBlockNumber::empty();\n    let b = 42;\n\n    assert_eq(MaxBlockNumber::min_with_u32(a, b).unwrap(), 42);\n}\n\n#[test]\nfn min_with_u32_some() {\n    let a = MaxBlockNumber::new(13);\n    let b = 42;\n    let c = 8;\n\n    assert_eq(MaxBlockNumber::min_with_u32(a, b).unwrap(), 13);\n    assert_eq(MaxBlockNumber::min_with_u32(a, c).unwrap(), 8);\n}\n"},"22":{"path":"std/field/bn254.nr","source":"use crate::runtime::is_unconstrained;\n\n// The low and high decomposition of the field modulus\nglobal PLO: Field = 53438638232309528389504892708671455233;\nglobal PHI: Field = 64323764613183177041862057485226039389;\n\nglobal TWO_POW_128: Field = 0x100000000000000000000000000000000;\n\n// Decomposes a single field into two 16 byte fields.\nfn compute_decomposition(x: Field) -> (Field, Field) {\n    let x_bytes = x.to_le_bytes(32);\n\n    let mut low: Field = 0;\n    let mut high: Field = 0;\n\n    let mut offset = 1;\n    for i in 0..16 {\n        low += (x_bytes[i] as Field) * offset;\n        high += (x_bytes[i + 16] as Field) * offset;\n        offset *= 256;\n    }\n\n    (low, high)\n}\n\nunconstrained fn decompose_hint(x: Field) -> (Field, Field) {\n    compute_decomposition(x)\n}\n\nfn compute_lt(x: Field, y: Field, num_bytes: u32) -> bool {\n    let x_bytes = x.to_le_radix(256, num_bytes);\n    let y_bytes = y.to_le_radix(256, num_bytes);\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..num_bytes {\n        if (!done) {\n            let x_byte = x_bytes[num_bytes - 1 - i];\n            let y_byte = y_bytes[num_bytes - 1 - i];\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\nfn compute_lte(x: Field, y: Field, num_bytes: u32) -> bool {\n    if x == y {\n        true\n    } else {\n        compute_lt(x, y, num_bytes)\n    }\n}\n\nunconstrained fn lt_32_hint(x: Field, y: Field) -> bool {\n    compute_lt(x, y, 32)\n}\n\nunconstrained fn lte_16_hint(x: Field, y: Field) -> bool {\n    compute_lte(x, y, 16)\n}\n\n// Assert that (alo > blo && ahi >= bhi) || (alo <= blo && ahi > bhi)\nfn assert_gt_limbs(a: (Field, Field), b: (Field, Field)) {\n    let (alo, ahi) = a;\n    let (blo, bhi) = b;\n    let borrow = lte_16_hint(alo, blo);\n\n    let rlo = alo - blo - 1 + (borrow as Field) * TWO_POW_128;\n    let rhi = ahi - bhi - (borrow as Field);\n\n    rlo.assert_max_bit_size(128);\n    rhi.assert_max_bit_size(128);\n}\n\n/// Decompose a single field into two 16 byte fields.\npub fn decompose(x: Field) -> (Field, Field) {\n    if is_unconstrained() {\n        compute_decomposition(x)\n    } else {\n        // Take hints of the decomposition\n        let (xlo, xhi) = decompose_hint(x);\n\n        // Range check the limbs\n        xlo.assert_max_bit_size(128);\n        xhi.assert_max_bit_size(128);\n\n        // Check that the decomposition is correct\n        assert_eq(x, xlo + TWO_POW_128 * xhi);\n\n        // Assert that the decomposition of P is greater than the decomposition of x\n        assert_gt_limbs((PLO, PHI), (xlo, xhi));\n        (xlo, xhi)\n    }\n}\n\npub fn assert_gt(a: Field, b: Field) {\n    if is_unconstrained() {\n        assert(compute_lt(b, a, 32));\n    } else {\n        // Decompose a and b\n        let a_limbs = decompose(a);\n        let b_limbs = decompose(b);\n\n        // Assert that a_limbs is greater than b_limbs\n        assert_gt_limbs(a_limbs, b_limbs)\n    }\n}\n\npub fn assert_lt(a: Field, b: Field) {\n    assert_gt(b, a);\n}\n\npub fn gt(a: Field, b: Field) -> bool {\n    if is_unconstrained() {\n        compute_lt(b, a, 32)\n    } else if a == b {\n        false\n    } else  {\n        // Take a hint of the comparison and verify it\n        if lt_32_hint(a, b) {\n            assert_gt(b, a);\n            false\n        } else {\n            assert_gt(a, b);\n            true\n        }\n    }\n}\n\npub fn lt(a: Field, b: Field) -> bool {\n    gt(b, a)\n}\n\nmod tests {\n    // TODO: Allow imports from \"super\"\n    use crate::field::bn254::{decompose_hint, decompose, compute_lt, assert_gt, gt, lt, TWO_POW_128, compute_lte, PLO, PHI};\n\n    #[test]\n    fn check_decompose() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    unconstrained fn check_decompose_unconstrained() {\n        assert_eq(decompose(TWO_POW_128), (0, 1));\n        assert_eq(decompose(TWO_POW_128 + 0x1234567890), (0x1234567890, 1));\n        assert_eq(decompose(0x1234567890), (0x1234567890, 0));\n    }\n\n    #[test]\n    fn check_compute_lt() {\n        assert(compute_lt(0, 1, 16));\n        assert(compute_lt(0, 0x100, 16));\n        assert(compute_lt(0x100, TWO_POW_128 - 1, 16));\n        assert(!compute_lt(0, TWO_POW_128, 16));\n    }\n\n    #[test]\n    fn check_compute_lte() {\n        assert(compute_lte(0, 1, 16));\n        assert(compute_lte(0, 0x100, 16));\n        assert(compute_lte(0x100, TWO_POW_128 - 1, 16));\n        assert(!compute_lte(0, TWO_POW_128, 16));\n\n        assert(compute_lte(0, 0, 16));\n        assert(compute_lte(0x100, 0x100, 16));\n        assert(compute_lte(TWO_POW_128 - 1, TWO_POW_128 - 1, 16));\n        assert(compute_lte(TWO_POW_128, TWO_POW_128, 16));\n    }\n\n    #[test]\n    fn check_assert_gt() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    unconstrained fn check_assert_gt_unconstrained() {\n        assert_gt(1, 0);\n        assert_gt(0x100, 0);\n        assert_gt((0 - 1), (0 - 2));\n        assert_gt(TWO_POW_128, 0);\n        assert_gt(0 - 1, 0);\n    }\n\n    #[test]\n    fn check_gt() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    unconstrained fn check_gt_unconstrained() {\n        assert(gt(1, 0));\n        assert(gt(0x100, 0));\n        assert(gt((0 - 1), (0 - 2)));\n        assert(gt(TWO_POW_128, 0));\n        assert(!gt(0, 0));\n        assert(!gt(0, 0x100));\n        assert(gt(0 - 1, 0 - 2));\n        assert(!gt(0 - 2, 0 - 1));\n    }\n\n    #[test]\n    fn check_plo_phi() {\n        assert_eq(PLO + PHI * TWO_POW_128, 0);\n        let p_bytes = crate::field::modulus_le_bytes();\n        let mut p_low: Field = 0;\n        let mut p_high: Field = 0;\n\n        let mut offset = 1;\n        for i in 0..16 {\n            p_low += (p_bytes[i] as Field) * offset;\n            p_high += (p_bytes[i + 16] as Field) * offset;\n            offset *= 256;\n        }\n        assert_eq(p_low, PLO);\n        assert_eq(p_high, PHI);\n    }\n}\n"},"229":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/storage/map.nr","source":"use crate::{hash::pedersen_hash, traits::ToField};\n\npub fn derive_storage_slot_in_map<K>(storage_slot: Field, key: K) -> Field where K: ToField {\n    pedersen_hash([storage_slot, key.to_field()], 0)\n}\n"},"23":{"path":"std/field/mod.nr","source":"mod bn254;\nuse bn254::lt as bn254_lt;\n\nimpl Field {\n    pub fn to_le_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_le_bits(bit_size)\n    }\n\n    pub fn to_be_bits(self: Self, bit_size: u32) -> [u1] {\n        crate::assert_constant(bit_size);\n        self.__to_be_bits(bit_size)\n    }\n\n    #[builtin(to_le_bits)]\n    fn __to_le_bits(self, _bit_size: u32) -> [u1] {}\n\n    #[builtin(to_be_bits)]\n    fn __to_be_bits(self, bit_size: u32) -> [u1] {}\n\n    #[builtin(apply_range_constraint)]\n    fn __assert_max_bit_size(self, bit_size: u32) {}\n\n    pub fn assert_max_bit_size(self: Self, bit_size: u32) {\n        crate::assert_constant(bit_size);\n        assert(bit_size < modulus_num_bits() as u32);\n        self.__assert_max_bit_size(bit_size);\n    }\n\n    pub fn to_le_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_le_radix(256, byte_size)\n    }\n\n    pub fn to_be_bytes(self: Self, byte_size: u32) -> [u8] {\n        self.to_be_radix(256, byte_size)\n    }\n\n    pub fn to_le_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_le_radix(radix, result_len)\n    }\n\n    pub fn to_be_radix(self: Self, radix: u32, result_len: u32) -> [u8] {\n        crate::assert_constant(radix);\n        crate::assert_constant(result_len);\n        self.__to_be_radix(radix, result_len)\n    }\n\n    // decompose `_self` into a `_result_len` vector over the `_radix` basis\n    // `_radix` must be less than 256\n    #[builtin(to_le_radix)]\n    fn __to_le_radix(self, radix: u32, result_len: u32) -> [u8] {}\n\n    #[builtin(to_be_radix)]\n    fn __to_be_radix(self, radix: u32, result_len: u32) -> [u8] {}\n\n    // Returns self to the power of the given exponent value.\n    // Caution: we assume the exponent fits into 32 bits\n    // using a bigger bit size impacts negatively the performance and should be done only if the exponent does not fit in 32 bits\n    pub fn pow_32(self, exponent: Field) -> Field {\n        let mut r: Field = 1;\n        let b = exponent.to_le_bits(32);\n\n        for i in 1..33 {\n            r *= r;\n            r = (b[32-i] as Field) * (r * self) + (1 - b[32-i] as Field) * r;\n        }\n        r\n    }\n\n    // Parity of (prime) Field element, i.e. sgn0(x mod p) = 0 if x ∈ {0, ..., p-1} is even, otherwise sgn0(x mod p) = 1.\n    pub fn sgn0(self) -> u1 {\n        self as u1\n    }\n\n    pub fn lt(self, another: Field) -> bool {\n        if crate::compat::is_bn254() {\n            bn254_lt(self, another)\n        } else {\n            lt_fallback(self, another)\n        }\n    }\n}\n\n#[builtin(modulus_num_bits)]\npub fn modulus_num_bits() -> u64 {}\n\n#[builtin(modulus_be_bits)]\npub fn modulus_be_bits() -> [u1] {}\n\n#[builtin(modulus_le_bits)]\npub fn modulus_le_bits() -> [u1] {}\n\n#[builtin(modulus_be_bytes)]\npub fn modulus_be_bytes() -> [u8] {}\n\n#[builtin(modulus_le_bytes)]\npub fn modulus_le_bytes() -> [u8] {}\n// Convert a 32 byte array to a field element by modding\npub fn bytes32_to_field(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..16 {\n        high = high + (bytes32[15 - i] as Field) * v;\n        low = low + (bytes32[16 + 15 - i] as Field) * v;\n        v = v * 256;\n    }\n    // Abuse that a % p + b % p = (a + b) % p and that low < p\n    low + high * v\n}\n\nfn lt_fallback(x: Field, y: Field) -> bool {\n    let num_bytes = (modulus_num_bits() as u32 + 7) / 8;\n    let x_bytes = x.to_le_bytes(num_bytes);\n    let y_bytes = y.to_le_bytes(num_bytes);\n    let mut x_is_lt = false;\n    let mut done = false;\n    for i in 0..num_bytes {\n        if (!done) {\n            let x_byte = x_bytes[num_bytes - 1 - i] as u8;\n            let y_byte = y_bytes[num_bytes - 1 - i] as u8;\n            let bytes_match = x_byte == y_byte;\n            if !bytes_match {\n                x_is_lt = x_byte < y_byte;\n                done = true;\n            }\n        }\n    }\n    x_is_lt\n}\n\n"},"235":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/traits.nr","source":"use crate::utils::field::field_from_bytes;\n\n// Trait: is_empty\n//\n// The general is_empty trait checks if a data type is is empty,\n// and it defines empty for the basic data types as 0.\n//\n// If a Field is equal to zero, then it is regarded as zero.\n// We will go with this definition for now, however it can be problematic \n// if a value can actually be zero. In a future refactor, we can \n// use the optional type for safety. Doing it now would lead to a worse devex\n// and would make it harder to sync up with the cpp code.\n// Preferred over Default trait to convey intent, as default doesn't necessarily mean empty.\ntrait Empty {\n    fn empty() -> Self;\n}\n\nimpl Empty for Field { fn empty() -> Self {0} }\n\nimpl Empty for u1 { fn empty() -> Self {0} }\nimpl Empty for u8 { fn empty() -> Self {0} }\nimpl Empty for u32 { fn empty() -> Self {0} }\nimpl Empty for u64 { fn empty() -> Self {0} }\nimpl Empty for U128 { fn empty() -> Self {U128::from_integer(0)} }\n\npub fn is_empty<T>(item: T) -> bool where T: Empty + Eq {\n    item.eq(T::empty())\n}\n\npub fn is_empty_array<T, N>(array: [T; N]) -> bool where T: Empty + Eq {\n    array.all(|elem| is_empty(elem))\n}\n\ntrait Hash {\n    fn hash(self) -> Field;\n}\n\ntrait ToField {\n    fn to_field(self) -> Field;\n}\n\nimpl ToField for Field {\n    fn to_field(self) -> Field {\n        self\n    }\n}\n\nimpl ToField for bool { fn to_field(self) -> Field { self as Field } }\nimpl ToField for u1 { fn to_field(self) -> Field { self as Field } }\nimpl ToField for u8 { fn to_field(self) -> Field { self as Field } }\nimpl ToField for u32 { fn to_field(self) -> Field { self as Field } }\nimpl ToField for u64 { fn to_field(self) -> Field { self as Field } }\nimpl ToField for U128 {\n    fn to_field(self) -> Field {\n        self.to_integer()\n    }\n}\nimpl<N> ToField for str<N> {\n    fn to_field(self) -> Field {\n        assert(N < 32, \"String doesn't fit in a field, consider using Serialize instead\");\n        field_from_bytes(self.as_bytes(), true)\n    }\n}\n\ntrait FromField {\n    fn from_field(value: Field) -> Self;\n}\n\nimpl FromField for Field {\n    fn from_field(value: Field) -> Self {\n        value\n    }\n}\n\nimpl FromField for bool { fn from_field(value: Field) -> Self { value as bool } }\nimpl FromField for u1 { fn from_field(value: Field) -> Self { value as u1 } }\nimpl FromField for u8 { fn from_field(value: Field) -> Self { value as u8 } }\nimpl FromField for u32 { fn from_field(value: Field) -> Self { value as u32 } }\nimpl FromField for u64 { fn from_field(value: Field) -> Self { value as u64 } }\nimpl FromField for U128 {\n    fn from_field(value: Field) -> Self {\n        U128::from_integer(value)\n    }\n}\n\n// docs:start:serialize\ntrait Serialize<N> {\n    fn serialize(self) -> [Field; N];\n}\n// docs:end:serialize\n\nimpl<N> Serialize<N> for [Field; N] {\n    fn serialize(self) -> [Field; N] {\n        self\n    }\n}\nimpl<N> Serialize<N> for str<N> {\n    fn serialize(self) -> [Field; N] {\n        let mut result = [0; N];\n        let bytes: [u8; N] = self.as_bytes();\n        for i in 0..N {\n            result[i] = field_from_bytes([bytes[i];1], true);\n        }\n        result\n    }\n}\n\n// docs:start:deserialize\ntrait Deserialize<N> {\n    fn deserialize(fields: [Field; N]) -> Self;\n}\n// docs:end:deserialize\n\nimpl<N> Deserialize<N> for [Field; N] {\n    fn deserialize(fields: [Field; N]) -> Self {\n        fields\n    }\n}\n"},"238":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/public_data_tree_leaf_preimage.nr","source":"use crate::{merkle_tree::leaf_preimage::IndexedTreeLeafPreimage, traits::{Empty, Hash}};\n\nstruct PublicDataTreeLeafPreimage {\n    slot : Field,\n    value: Field,\n    next_slot :Field,\n    next_index : u32,\n}\n\nimpl Empty for PublicDataTreeLeafPreimage {\n    fn empty() -> Self {\n        Self {\n            slot: 0,\n            value: 0,\n            next_slot: 0,\n            next_index: 0,\n        }\n    }\n}\n\nimpl Hash for PublicDataTreeLeafPreimage {\n    fn hash(self) -> Field {\n        if self.is_empty() {\n            0\n        } else {\n            std::hash::pedersen_hash([self.slot, self.value, (self.next_index as Field), self.next_slot])\n        }\n    }\n}\n\nimpl IndexedTreeLeafPreimage for PublicDataTreeLeafPreimage {\n    fn get_key(self) -> Field {\n        self.slot\n    }\n\n    fn get_next_key(self) -> Field {\n        self.next_slot\n    }\n\n    fn as_leaf(self) -> Field {\n        self.hash()\n    }\n}\n\nimpl PublicDataTreeLeafPreimage {\n    pub fn is_empty(self) -> bool {\n        (self.slot == 0) & (self.value == 0) & (self.next_slot == 0) & (self.next_index == 0)\n    }\n}\n"},"240":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/hash.nr","source":"use crate::{\n    abis::{\n    contract_class_function_leaf_preimage::ContractClassFunctionLeafPreimage,\n    function_selector::FunctionSelector, log_hash::{LogHash, ScopedLogHash, ScopedEncryptedLogHash},\n    note_hash::ScopedNoteHash, nullifier::ScopedNullifier\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    FUNCTION_TREE_HEIGHT, GENERATOR_INDEX__SILOED_NOTE_HASH, GENERATOR_INDEX__OUTER_NULLIFIER,\n    GENERATOR_INDEX__VK, GENERATOR_INDEX__NOTE_HASH_NONCE, GENERATOR_INDEX__UNIQUE_NOTE_HASH,\n    MAX_ENCRYPTED_LOGS_PER_TX, MAX_NOTE_ENCRYPTED_LOGS_PER_TX\n},\n    merkle_tree::root::root_from_sibling_path, messaging::l2_to_l1_message::ScopedL2ToL1Message,\n    recursion::verification_key::VerificationKey, traits::is_empty,\n    utils::field::field_from_bytes_32_trunc\n};\nuse std::hash::{pedersen_hash_with_separator, sha256};\n\npub fn sha256_to_field<N>(bytes_to_hash: [u8; N]) -> Field {\n    let sha256_hashed = sha256(bytes_to_hash);\n    let hash_in_a_field = field_from_bytes_32_trunc(sha256_hashed);\n\n    hash_in_a_field\n}\n\npub fn private_functions_root_from_siblings(\n    selector: FunctionSelector,\n    vk_hash: Field,\n    function_leaf_index: Field,\n    function_leaf_sibling_path: [Field; FUNCTION_TREE_HEIGHT]\n) -> Field {\n    let function_leaf_preimage = ContractClassFunctionLeafPreimage { selector, vk_hash };\n    let function_leaf = function_leaf_preimage.hash();\n    root_from_sibling_path(function_leaf, function_leaf_index, function_leaf_sibling_path)\n}\n\nfn compute_note_hash_nonce(tx_hash: Field, note_index_in_tx: u32) -> Field {\n    // Hashing tx hash with note index in tx is guaranteed to be unique\n    pedersen_hash(\n        [\n        tx_hash,\n        note_index_in_tx as Field\n    ],\n        GENERATOR_INDEX__NOTE_HASH_NONCE\n    )\n}\n\npub fn compute_unique_note_hash(nonce: Field, inner_note_hash: Field) -> Field {\n    let inputs = [nonce, inner_note_hash];\n    pedersen_hash(inputs, GENERATOR_INDEX__UNIQUE_NOTE_HASH)\n}\n\npub fn compute_siloed_note_hash(app: AztecAddress, unique_note_hash: Field) -> Field {\n    pedersen_hash(\n        [\n        app.to_field(),\n        unique_note_hash\n    ],\n        GENERATOR_INDEX__SILOED_NOTE_HASH\n    )\n}\n\npub fn silo_note_hash(note_hash: ScopedNoteHash, tx_hash: Field, note_index_in_tx: u32) -> Field {\n    if note_hash.contract_address.is_zero() {\n        0\n    } else {\n        let nonce = compute_note_hash_nonce(tx_hash, note_index_in_tx);\n        let unique_note_hash = compute_unique_note_hash(nonce, note_hash.value());\n        compute_siloed_note_hash(note_hash.contract_address, unique_note_hash)\n    }\n}\n\npub fn compute_siloed_nullifier(app: AztecAddress, nullifier: Field) -> Field {\n    pedersen_hash(\n        [\n        app.to_field(),\n        nullifier\n    ],\n        GENERATOR_INDEX__OUTER_NULLIFIER\n    )\n}\n\npub fn silo_nullifier(nullifier: ScopedNullifier) -> Field {\n    if nullifier.contract_address.is_zero() {\n        nullifier.value() // Return value instead of 0 because the first nullifier's contract address is zero.\n    } else {\n        compute_siloed_nullifier(nullifier.contract_address, nullifier.value())\n    }\n}\n\npub fn compute_siloed_encrypted_log_hash(address: AztecAddress, randomness: Field, log_hash: Field) -> Field {\n    // TODO: Using 0 GENERATOR_INDEX here as interim before we move to posiedon\n    // NB: A unique separator will be needed for masked_contract_address\n    let mut masked_contract_address = pedersen_hash([address.to_field(), randomness], 0);\n    if randomness == 0 {\n        // In some cases, we actually want to reveal the contract address we are siloing with:\n        // e.g. 'handshaking' contract w/ known address\n        // An app providing randomness = 0 signals to not mask the address.\n        masked_contract_address = address.to_field();\n    }\n    accumulate_sha256([masked_contract_address, log_hash])\n}\n\npub fn silo_encrypted_log_hash(log_hash: ScopedEncryptedLogHash) -> Field {\n    if log_hash.contract_address.is_zero() {\n        0\n    } else {\n        compute_siloed_encrypted_log_hash(\n            log_hash.contract_address,\n            log_hash.log_hash.randomness,\n            log_hash.log_hash.value\n        )\n    }\n}\n\npub fn compute_siloed_unencrypted_log_hash(address: AztecAddress, log_hash: Field) -> Field {\n    accumulate_sha256([address.to_field(), log_hash])\n}\n\npub fn silo_unencrypted_log_hash(log_hash: ScopedLogHash) -> Field {\n    if log_hash.contract_address.is_zero() {\n        0\n    } else {\n        compute_siloed_unencrypted_log_hash(log_hash.contract_address, log_hash.value())\n    }\n}\n\npub fn merkle_hash(left: Field, right: Field) -> Field {\n    pedersen_hash([left, right], 0)\n}\n\npub fn stdlib_recursion_verification_key_compress_native_vk(_vk: VerificationKey) -> Field {\n    // Original cpp code\n    // stdlib::recursion::verification_key<CT::bn254>::compress_native(private_call.vk, GeneratorIndex::VK);\n    // The above cpp method is only ever called on verification key, so it has been special cased here\n    let _hash_index = GENERATOR_INDEX__VK;\n    0\n}\n\npub fn compute_l2_to_l1_hash(\n    contract_address: AztecAddress,\n    recipient: EthAddress,\n    content: Field,\n    rollup_version_id: Field,\n    chain_id: Field\n) -> Field {\n    let mut bytes: BoundedVec<u8, 160> = BoundedVec::new();\n\n    let inputs = [contract_address.to_field(), rollup_version_id, recipient.to_field(), chain_id, content];\n    for i in 0..inputs.len() {\n        // TODO are bytes be in fr.to_buffer() ?\n        let item_bytes = inputs[i].to_be_bytes(32);\n        for j in 0..32 {\n            bytes.push(item_bytes[j]);\n        }\n    }\n\n    sha256_to_field(bytes.storage)\n}\n\npub fn silo_l2_to_l1_message(msg: ScopedL2ToL1Message, rollup_version_id: Field, chain_id: Field) -> Field {\n    if msg.contract_address.is_zero() {\n        0\n    } else {\n        compute_l2_to_l1_hash(\n            msg.contract_address,\n            msg.message.recipient,\n            msg.message.content,\n            rollup_version_id,\n            chain_id\n        )\n    }\n}\n\n// Computes sha256 hash of 2 input hashes.\n//\n// NB: This method now takes in two 31 byte fields - it assumes that any input\n// is the result of a sha_to_field hash and => is truncated\n//\n// TODO(Jan and David): This is used for the encrypted_log hashes.\n// Can we check to see if we can just use hash_to_field or pedersen_compress here?\n//\npub fn accumulate_sha256(input: [Field; 2]) -> Field {\n    // This is a note about the cpp code, since it takes an array of Fields\n    // instead of a U128.\n    // 4 Field elements when converted to bytes will usually \n    // occupy 4 * 32 = 128 bytes.\n    // However, this function is making the assumption that each Field \n    // only occupies 128 bits.\n    //\n    // TODO(David): This does not seem to be getting guaranteed anywhere in the code?\n\n    // Concatentate two fields into 32x2 = 64 bytes\n    // accumulate_sha256 assumes that the inputs are pre-truncated 31 byte numbers\n    let mut hash_input_flattened = [0; 64];\n    for offset in 0..input.len() {\n        let input_as_bytes = input[offset].to_be_bytes(32);\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n\n    sha256_to_field(hash_input_flattened)\n}\n\n// Computes the final logs hash for a tx.\n// NB: this assumes MAX_ENCRYPTED_LOGS_PER_TX == MAX_UNENCRYPTED_LOGS_PER_TX\n// to avoid doubling code, since we can't define the byte len to be 32*N directly. \npub fn compute_tx_logs_hash(logs: [LogHash; MAX_ENCRYPTED_LOGS_PER_TX]) -> Field {\n    // Convert each field element into a byte array and append the bytes to `hash_input_flattened`\n    let mut hash_input_flattened = [0; MAX_ENCRYPTED_LOGS_PER_TX * 32];\n    for offset in 0..MAX_ENCRYPTED_LOGS_PER_TX {\n        let input_as_bytes = logs[offset].value.to_be_bytes(32);\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n    // Ideally we would push to a slice then hash, but there is no sha_slice\n    // Hardcode to 256 bytes for now\n    let mut hash = sha256_to_field(hash_input_flattened);\n    // Not having a 0 value hash for empty logs causes issues with empty txs\n    // used for padding. Returning early is currently unsupported.\n    // We always provide sorted logs here, so 0 being empty means all are empty.\n    if is_empty(logs[0]) {\n        hash = 0;\n    }\n    hash\n}\n\npub fn compute_tx_note_logs_hash(logs: [LogHash; MAX_NOTE_ENCRYPTED_LOGS_PER_TX]) -> Field {\n    // Convert each field element into a byte array and append the bytes to `hash_input_flattened`\n    let mut hash_input_flattened = [0; MAX_NOTE_ENCRYPTED_LOGS_PER_TX * 32];\n    for offset in 0..MAX_NOTE_ENCRYPTED_LOGS_PER_TX {\n        let input_as_bytes = logs[offset].value.to_be_bytes(32);\n        for byte_index in 0..32 {\n            hash_input_flattened[offset * 32 + byte_index] = input_as_bytes[byte_index];\n        }\n    }\n    // Ideally we would push to a slice then hash, but there is no sha_slice\n    // Hardcode to 256 bytes for now\n    let mut hash = sha256_to_field(hash_input_flattened);\n    // Not having a 0 value hash for empty logs causes issues with empty txs\n    // used for padding. Returning early is currently unsupported.\n    // We always provide sorted logs here, so 0 being empty means all are empty.\n    if is_empty(logs[0]) {\n        hash = 0;\n    }\n    hash\n}\n\npub fn pedersen_hash<N>(inputs: [Field; N], hash_index: u32) -> Field {\n    std::hash::pedersen_hash_with_separator(inputs, hash_index)\n}\n\npub fn poseidon2_hash<N>(inputs: [Field; N]) -> Field {\n    std::hash::poseidon2::Poseidon2::hash(inputs, N)\n}\n\n#[test]\nfn smoke_sha256_to_field() {\n    let full_buffer = [\n        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\n        20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\n        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59,\n        60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\n        80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99,\n        100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119,\n        120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139,\n        140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159\n    ];\n    let result = sha256_to_field(full_buffer);\n\n    assert(result == 0x448ebbc9e1a31220a2f3830c18eef61b9bd070e5084b7fa2a359fe729184c7);\n\n    // to show correctness of the current ver (truncate one byte) vs old ver (mod full bytes):\n    let result_bytes = sha256(full_buffer);\n    let truncated_field = crate::utils::field::field_from_bytes_32_trunc(result_bytes);\n    assert(truncated_field == result);\n    let mod_res = result + (result_bytes[31] as Field);\n    assert(mod_res == 0x448ebbc9e1a31220a2f3830c18eef61b9bd070e5084b7fa2a359fe729184e0);\n}\n\n#[test]\nfn compute_l2_l1_hash() {\n    // All zeroes\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(0), EthAddress::zero(), 0, 0, 0);\n    assert(hash_result == 0xb393978842a0fa3d3e1470196f098f473f9678e72463cb65ec4ab5581856c2);\n\n    // Non-zero case\n    let hash_result = compute_l2_to_l1_hash(AztecAddress::from_field(1), EthAddress::from_field(3), 5, 2, 4);\n    assert(hash_result == 0x3f88c1044a05e5340ed20466276500f6d45ca5603913b9091e957161734e16);\n}\n"},"246":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/point.nr","source":"use dep::std::embedded_curve_ops::EmbeddedCurvePoint as Point;\nuse crate::{traits::{Empty, Hash, Serialize}, hash::poseidon2_hash};\n\nglobal POINT_LENGTH: Field = 3;\n\nimpl Serialize<POINT_LENGTH> for Point {\n    fn serialize(self: Self) -> [Field; POINT_LENGTH] {\n        [self.x, self.y, self.is_infinite as Field]\n    }\n}\n\nimpl Hash for Point {\n    fn hash(self) -> Field {\n        poseidon2_hash(self.serialize())\n    }\n}\n\nimpl Empty for Point {\n    /// Note: Does not return a valid point on curve - instead represents an empty/\"unpopulated\" point struct (e.g.\n    /// empty/unpopulated value in an array of points).\n    fn empty() -> Self {\n        Point {\n            x: 0,\n            y: 0,\n            is_infinite: false\n        }\n    }\n}\n\n/// Converts a public key to a byte array.\n///\n/// We don't serialize the point at infinity flag because this function is used in situations where we do not want\n/// to waste the extra byte (encrypted log).\npub fn pub_key_to_bytes(pk: Point) -> [u8; 64] {\n    assert(!pk.is_infinite, \"Point at infinity is not a valid public key.\");\n    let mut result = [0 as u8; 64];\n    let x_bytes = pk.x.to_be_bytes(32);\n    let y_bytes = pk.y.to_be_bytes(32);\n    for i in 0..32 {\n        result[i] = x_bytes[i];\n        result[i + 32] = y_bytes[i];\n    }\n    result\n}\n"},"25":{"path":"std/hash/mod.nr","source":"mod poseidon;\nmod mimc;\nmod poseidon2;\n\nuse crate::default::Default;\nuse crate::uint128::U128;\nuse crate::sha256::{digest, sha256_var};\nuse crate::embedded_curve_ops::{EmbeddedCurvePoint, EmbeddedCurveScalar, multi_scalar_mul};\n\n#[foreign(sha256)]\n// docs:start:sha256\npub fn sha256<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:sha256\n{}\n\n#[foreign(blake2s)]\n// docs:start:blake2s\npub fn blake2s<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake2s\n{}\n\n#[foreign(blake3)]\n// docs:start:blake3\npub fn blake3<let N: u32>(input: [u8; N]) -> [u8; 32]\n// docs:end:blake3\n{}\n\n#[no_predicates]\n// docs:start:pedersen_commitment\npub fn pedersen_commitment<let N: u32>(input: [Field; N]) -> EmbeddedCurvePoint {\n    // docs:end:pedersen_commitment\n    let value = pedersen_commitment_with_separator(input, 0);\n    if (value.x == 0) & (value.y == 0) {\n        EmbeddedCurvePoint { x: 0, y: 0, is_infinite: true }\n    } else {\n        EmbeddedCurvePoint { x: value.x, y: value.y, is_infinite: false }\n    }\n}\n\nfn pedersen_commitment_with_separator_noir<let N: u32>(input: [Field; N], separator: u32) -> EmbeddedCurvePoint {\n    let mut points = [EmbeddedCurveScalar { lo: 0, hi: 0 }; N];\n    for i in 0..N {\n        points[i] = EmbeddedCurveScalar::from_field(input[i]);\n    }\n    let generators = derive_generators(\"DEFAULT_DOMAIN_SEPARATOR\".as_bytes(), separator);\n    let values = multi_scalar_mul(generators, points);\n    EmbeddedCurvePoint { x: values[0], y: values[1], is_infinite: values[2] as bool }\n}\n\n#[no_predicates]\npub fn pedersen_commitment_with_separator<let N: u32>(input: [Field; N], separator: u32) -> EmbeddedCurvePoint {\n    let values = __pedersen_commitment_with_separator(input, separator);\n    EmbeddedCurvePoint { x: values[0], y: values[1], is_infinite: false }\n}\n\n// docs:start:pedersen_hash\npub fn pedersen_hash<let N: u32>(input: [Field; N]) -> Field\n// docs:end:pedersen_hash\n{\n    pedersen_hash_with_separator(input, 0)\n}\n\n#[field(bn254)]\nfn derive_generators<let N: u32, let M: u32>(\n    domain_separator_bytes: [u8; M],\n    starting_index: u32\n) -> [EmbeddedCurvePoint; N] {\n    crate::assert_constant(domain_separator_bytes);\n    crate::assert_constant(starting_index);\n    __derive_generators(domain_separator_bytes, starting_index)\n}\n\n#[builtin(derive_pedersen_generators)]\n#[field(bn254)]\nfn __derive_generators<let N: u32, let M: u32>(domain_separator_bytes: [u8; M], starting_index: u32) -> [EmbeddedCurvePoint; N] {}\n\nfn pedersen_hash_with_separator_noir<let N: u32>(input: [Field; N], separator: u32) -> Field {\n    let v1 = pedersen_commitment_with_separator(input, separator);\n    let length_generator : [EmbeddedCurvePoint; 1] = derive_generators(\"pedersen_hash_length\".as_bytes(), 0);\n    multi_scalar_mul(\n        [length_generator[0], v1],\n        [EmbeddedCurveScalar { lo: N as Field, hi: 0 }, EmbeddedCurveScalar { lo: 1, hi: 0 }]\n    )[0]\n}\n\n#[foreign(pedersen_hash)]\npub fn pedersen_hash_with_separator<let N: u32>(input: [Field; N], separator: u32) -> Field {}\n\n#[foreign(pedersen_commitment)]\nfn __pedersen_commitment_with_separator<let N: u32>(input: [Field; N], separator: u32) -> [Field; 2] {}\n\npub fn hash_to_field(inputs: [Field]) -> Field {\n    let mut sum = 0;\n\n    for input in inputs {\n        let input_bytes: [u8; 32] = input.to_le_bytes(32).as_array();\n        sum += crate::field::bytes32_to_field(blake2s(input_bytes));\n    }\n\n    sum\n}\n\n#[foreign(keccak256)]\n// docs:start:keccak256\npub fn keccak256<let N: u32>(input: [u8; N], message_size: u32) -> [u8; 32]\n// docs:end:keccak256\n{}\n\n#[foreign(poseidon2_permutation)]\npub fn poseidon2_permutation<let N: u32>(_input: [Field; N], _state_length: u32) -> [Field; N] {}\n\n#[foreign(sha256_compression)]\npub fn sha256_compression(_input: [u32; 16], _state: [u32; 8]) -> [u32; 8] {}\n\n// Generic hashing support. \n// Partially ported and impacted by rust.\n\n// Hash trait shall be implemented per type.\ntrait Hash{\n    fn hash<H>(self, state: &mut H) where H: Hasher;\n}\n\n// Hasher trait shall be implemented by algorithms to provide hash-agnostic means.\n// TODO: consider making the types generic here ([u8], [Field], etc.)\ntrait Hasher{\n    fn finish(self) -> Field;\n    \n    fn write(&mut self, input: Field);\n}\n\n// BuildHasher is a factory trait, responsible for production of specific Hasher.\ntrait BuildHasher<H> where H: Hasher{\n    fn build_hasher(self) -> H;\n}\n\nstruct BuildHasherDefault<H>;\n\nimpl<H> BuildHasher<H> for BuildHasherDefault<H>\nwhere \n    H: Hasher + Default\n{\n    fn build_hasher(_self: Self) -> H{\n        H::default()\n    }\n}\n\nimpl<H> Default for BuildHasherDefault<H>\nwhere \n    H: Hasher + Default\n{\n    fn default() -> Self{\n        BuildHasherDefault{}\n    }    \n}\n\nimpl Hash for Field {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, self);\n    }\n}\n\nimpl Hash for u8 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u32 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for u64 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i8 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i32 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for i64 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for bool {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, self as Field);\n    }\n}\n\nimpl Hash for () {\n    fn hash<H>(_self: Self, _state: &mut H) where H: Hasher {}\n}\n\nimpl Hash for U128 {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        H::write(state, self.lo as Field);\n        H::write(state, self.hi as Field);\n    }\n}\n\nimpl<T, let N: u32> Hash for [T; N] where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<T> Hash for [T] where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.len().hash(state);\n        for elem in self {\n            elem.hash(state);\n        }\n    }\n}\n\nimpl<A, B> Hash for (A, B) where A: Hash, B: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.0.hash(state);\n        self.1.hash(state);\n    }\n}\n\nimpl<A, B, C> Hash for (A, B, C) where A: Hash, B: Hash, C: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n    }\n}\n\nimpl<A, B, C, D> Hash for (A, B, C, D) where A: Hash, B: Hash, C: Hash, D: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n    }\n}\n\nimpl<A, B, C, D, E> Hash for (A, B, C, D, E) where A: Hash, B: Hash, C: Hash, D: Hash, E: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher{\n        self.0.hash(state);\n        self.1.hash(state);\n        self.2.hash(state);\n        self.3.hash(state);\n        self.4.hash(state);\n    }\n}\n\n#[test]\nfn assert_pedersen_noir() {\n    // TODO: make this a fuzzer test once fuzzer supports curve-specific blackbox functions.\n    let input = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n    assert_eq(pedersen_hash_with_separator(input, 4), pedersen_hash_with_separator_noir(input, 4));\n    assert_eq(pedersen_commitment_with_separator(input, 4), pedersen_commitment_with_separator_noir(input, 4));\n}\n"},"263":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/utils/reader.nr","source":"struct Reader<N> {\n    data: [Field; N],\n    offset: u32,\n}\n\nimpl<N> Reader<N> {\n    pub fn new(data: [Field; N]) -> Self {\n        Self { data, offset: 0 }\n    }\n\n    pub fn read(&mut self) -> Field {\n        let result = self.data[self.offset];\n        self.offset += 1;\n        result\n    }\n\n    pub fn read_u32(&mut self) -> u32 {\n        self.read() as u32\n    }\n\n    pub fn read_bool(&mut self) -> bool {\n        self.read() as bool\n    }\n\n    pub fn read_array<K>(&mut self, mut result: [Field; K]) -> [Field; K] {\n        for i in 0..K {\n            result[i] = self.data[self.offset + i];\n        }\n        self.offset += K;\n        result\n    }\n\n    // TODO(#4394)\n    pub fn read_struct<T, K>(&mut self, deserialise: fn([Field; K]) -> T) -> T {\n        let result = deserialise(self.read_array([0; K]));\n        result\n    }\n\n    pub fn read_struct_array<T, K, C>(&mut self, deserialise: fn([Field; K]) -> T, mut result: [T; C]) -> [T; C] {\n        for i in 0..C {\n            result[i] = self.read_struct(deserialise);\n        }\n        result\n    }\n\n    pub fn finish(self) {\n        assert(self.offset == self.data.len(), \"Reader did not read all data\");\n    }\n}\n"},"273":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/utils/field.nr","source":"pub fn field_from_bytes<N>(bytes: [u8; N], big_endian: bool) -> Field {\n    assert(bytes.len() < 32, \"field_from_bytes: N must be less than 32\");\n    let mut as_field = 0;\n    let mut offset = 1;\n    for i in 0..N {\n        let mut index = i;\n        if big_endian {\n            index = N - i - 1;\n        }\n        as_field += (bytes[index] as Field) * offset;\n        offset *= 256;\n    }\n\n    as_field\n}\n\n// Convert a 32 byte array to a field element by truncating the final byte\npub fn field_from_bytes_32_trunc(bytes32: [u8; 32]) -> Field {\n    // Convert it to a field element\n    let mut v = 1;\n    let mut high = 0 as Field;\n    let mut low = 0 as Field;\n\n    for i in 0..15 {\n        // covers bytes 16..30 (31 is truncated and ignored)\n        low = low + (bytes32[15 + 15 - i] as Field) * v;\n        v = v * 256;\n        // covers bytes 0..14\n        high = high + (bytes32[14 - i] as Field) * v;\n    }\n    // covers byte 15\n    low = low + (bytes32[15] as Field) * v;\n\n    low + high * v\n}\n\n// TODO to radix returns u8, so we cannot use bigger radixes. It'd be ideal to use a radix of the maximum range-constrained integer noir supports\npub fn full_field_less_than(lhs: Field, rhs: Field) -> bool {\n    lhs.lt(rhs)\n}\n\npub fn full_field_greater_than(lhs: Field, rhs: Field) -> bool {\n    rhs.lt(lhs)\n}\n\n#[test]\nunconstrained fn bytes_field_test() {\n    // Tests correctness of field_from_bytes_32_trunc against existing methods\n    // Bytes representing 0x543e0a6642ffeb8039296861765a53407bba62bd1c97ca43374de950bbe0a7\n    let inputs = [\n        84, 62, 10, 102, 66, 255, 235, 128, 57, 41, 104, 97, 118, 90, 83, 64, 123, 186, 98, 189, 28, 151, 202, 67, 55, 77, 233, 80, 187, 224, 167\n    ];\n    let field = field_from_bytes(inputs, true);\n    let return_bytes = field.to_be_bytes(31);\n    for i in 0..31 {\n        assert_eq(inputs[i], return_bytes[i]);\n    }\n    // 32 bytes - we remove the final byte, and check it matches the field\n    let inputs2 = [\n        84, 62, 10, 102, 66, 255, 235, 128, 57, 41, 104, 97, 118, 90, 83, 64, 123, 186, 98, 189, 28, 151, 202, 67, 55, 77, 233, 80, 187, 224, 167, 158\n    ];\n    let field2 = field_from_bytes_32_trunc(inputs2);\n    let return_bytes2 = field.to_be_bytes(31);\n\n    for i in 0..31 {\n        assert_eq(return_bytes2[i], return_bytes[i]);\n    }\n    assert_eq(field2, field);\n}\n"},"274":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/utils/arrays.nr","source":"mod assert_sorted_array;\nmod assert_sorted_transformed_value_array;\nmod assert_split_sorted_transformed_value_arrays;\nmod sort_by_counters;\nmod sort_get_order_hints;\nmod sort_get_sorted_hints;\nmod sort_get_sorted_tuple;\nmod sort_get_split_order_hints;\n\n// Re-exports.\nuse assert_sorted_array::assert_sorted_array;\nuse assert_split_sorted_transformed_value_arrays::{assert_split_sorted_transformed_value_arrays_asc, assert_split_sorted_transformed_value_arrays_desc};\nuse assert_sorted_transformed_value_array::assert_sorted_transformed_value_array;\nuse sort_by_counters::{sort_by_counters_asc, sort_by_counters_desc};\nuse sort_get_order_hints::{OrderHint, sort_get_order_hints_asc, sort_get_order_hints_desc};\nuse sort_get_sorted_hints::sort_get_sorted_hints;\nuse sort_get_split_order_hints::{sort_get_split_order_hints_asc, sort_get_split_order_hints_desc, SplitOrderHints};\n\nuse crate::traits::{Empty, is_empty};\nuse crate::abis::side_effect::{Positioned, Ordered};\n\npub fn array_to_bounded_vec<T, N>(array: [T; N]) -> BoundedVec<T, N> where T: Empty + Eq {\n    let mut len = 0;\n    for elem in array {\n        if !is_empty(elem) {\n            len += 1;\n        }\n    }\n\n    BoundedVec { storage: array, len }\n}\n\nunconstrained fn filter_array_to_bounded_vec_unsafe<T, N>(arr: [T; N], should_propagate: [bool; N]) -> BoundedVec<T, N> {\n    let mut vec = BoundedVec::new();\n    for i in 0..N {\n        if should_propagate[i] {\n            vec.push(arr[i]);\n        }\n    }\n    vec\n}\n\npub fn filter_array_to_bounded_vec<T, N>(arr: [T; N], should_propagate: [bool; N]) -> BoundedVec<T, N> where T: Eq {\n    let vec_hint = filter_array_to_bounded_vec_unsafe(arr, should_propagate);\n    let mut verifying_index = 0;\n\n    for i in 0..N {\n        if should_propagate[i] {\n            assert_eq(arr[i], vec_hint.get(verifying_index));\n            verifying_index += 1;\n        }\n    }\n    assert_eq(verifying_index, vec_hint.len());\n\n    vec_hint\n}\n\nunconstrained pub fn find_index_hint<T, N>(array: [T; N], find: T) -> u32 where T: Eq {\n    let mut index = 0;\n    for i in 0..array.len() {\n        if array[i] == find {\n            index = i;\n        }\n    }\n    index\n}\n\n// Routine which validates that all zero values of an array form a contiguous region at the end, i.e.,\n// of the form: [*,*,*...,0,0,0,0] where any * is non-zero. Note that a full array of non-zero values is\n// valid.\npub fn validate_array<T, N>(array: [T; N]) -> u32 where T: Empty + Eq {\n    let mut seen_empty = false;\n    let mut length = 0;\n    for i in 0..N {\n        if is_empty(array[i]) {\n            seen_empty = true;\n        } else {\n            assert(seen_empty == false, \"invalid array\");\n            length += 1;\n        }\n    }\n    length\n}\n\nunconstrained fn count_non_empty_elements<T, N>(array: [T; N]) -> u32 where T: Empty + Eq {\n    let mut length = 0;\n    let mut seen_empty = false;\n    for elem in array {\n        if is_empty(elem) {\n            seen_empty = true;\n        } else if !seen_empty {\n            length += 1;\n        }\n    }\n    length\n}\n\n// Helper function to count the number of non-empty elements in a validated array.\n// Important: Only use it for validated arrays: validate_array(array) should be true.\npub fn array_length<T, N>(array: [T; N]) -> u32 where T: Empty + Eq {\n    let length = count_non_empty_elements(array);\n    if length != 0 {\n        assert(!is_empty(array[length - 1]));\n    }\n    if length != N {\n        assert(is_empty(array[length]));\n    }\n    length\n}\n\n// Deprecated. Use tests/utils/assert_array_eq instead.\npub fn array_eq<T, N, S>(array: [T; N], expected: [T; S]) -> bool where T: Empty + Eq {\n    let mut eq = array_length(array) == S;\n\n    for i in 0..S {\n        eq &= array[i].eq(expected[i]);\n    }\n\n    eq\n}\n\npub fn find_index<T, N, Env>(array: [T; N], find: fn[Env](T) -> bool) -> u32 {\n    let mut index = N;\n    for i in 0..N {\n        if (index == N) & find(array[i]) {\n            index = i;\n        }\n    }\n    index\n}\n\npub fn array_cp<T, N, S>(array: [T; N]) -> [T; S] where T: Empty {\n    let mut result: [T; S] = [T::empty(); S];\n    for i in 0..S {\n        result[i] = array[i];\n    }\n    result\n}\n\npub fn array_concat<T, N, M, S>(array1: [T; N], array2: [T; M]) -> [T; S] {\n    assert_eq(N + M, S, \"combined array length does not match return array length\");\n    let mut result = [array1[0]; S];\n    for i in 1..N {\n        result[i] = array1[i];\n    }\n    for i in 0..M {\n        result[i + N] = array2[i];\n    }\n    result\n}\n\npub fn array_merge<T, N>(array1: [T; N], array2: [T; N]) -> [T; N] where T: Empty + Eq {\n    let mut result: [T; N] = [T::empty(); N];\n    let mut i = 0;\n    for elem in array1 {\n        if !is_empty(elem) {\n            result[i] = elem;\n            i += 1;\n        }\n    }\n    for elem in array2 {\n        if !is_empty(elem) {\n            result[i] = elem;\n            i += 1;\n        }\n    }\n    result\n}\n\npub fn check_permutation<T, N>(\n    original_array: [T; N],\n    permuted_array: [T; N],\n    original_indexes: [u32; N]\n) where T: Eq + Empty {\n    let mut seen_value = [false; N];\n    for i in 0..N {\n        let index = original_indexes[i];\n        let original_value = original_array[index];\n        assert(permuted_array[i].eq(original_value), \"Invalid index\");\n        assert(!seen_value[index], \"Duplicated index\");\n        seen_value[index] = true;\n    }\n}\n\npub fn assert_deduped_array<T, N, Env>(\n    original_array: [T; N],\n    deduped_array: [T; N],\n    run_lengths: [u32; N]\n) where T: Positioned + Ordered + Empty + Eq {\n    /*\n    The original_array here needs to be sorted based on the `position` field of the container,\n    *and* a secondary sort based on the `counter` field of the container. \n\n    For example, the storage slot in the case of public data update requests.\n    The run_lengths array should contain the length of each run of the original_array.\n    The deduped_array should contain the deduplicated array.\n\n    For example, if the original array is writing `(position,value,counter)`s:\n    [ (1,1,1), (1,2,4), (2,3,3), (3,4,2), (3,5,5), (3,6,6), (4,7,8), (4,8,9), (5,9,7), (0,0,0), ... padding with zeros ]\n    then run_lengths array is:\n    [\n        2, // run of 1s\n        1, // run of 2\n        3, // run of 3s\n        2, // run of 4s\n        1, // run of 5\n        0,\n        0,\n        ... padding with zeros\n    ]\n    \n    then the deduped_array should be:\n    [ (1,2,4), (2,3,3), (3,6,6), (4,8,9), (5,9,7), (0,0,0), ... padding with zeros ]\n    */\n\n    let deduped_len = validate_array(deduped_array); // This also makes sure that the array is padded with empty items.  \n    let run_lengths_len = array_length(run_lengths); // Don't have to be a \"validated\" array because non zero padded values don't hurt.  \n    assert_eq(deduped_len, run_lengths_len, \"Deduped array length does not match number of run lengths\");\n\n    let mut seen_empty = false;\n    // container at the start of the current run\n    let mut start_run_index = 0;\n    // the index we are collapsing into\n    let mut deduped_index = 0;\n    // the length of the current run we are collapsing\n    let mut run_counter = run_lengths[deduped_index];\n    for i in 0..N {\n        let current_container = original_array[i];\n        if is_empty(current_container) {\n            seen_empty = true;\n        } else {\n            assert(!seen_empty, \"Empty values must be padded to the right\");\n            assert(run_counter > 0, \"Invalid run length\");\n            assert(\n                current_container.position().eq(original_array[start_run_index].position()), \"The position of the current container must match the start of the run\"\n            );\n            run_counter -= 1;\n            if run_counter == 0 {\n                assert(\n                    deduped_array[deduped_index].eq(current_container), \"The container we are collapsing into must match the current container\"\n                );\n                start_run_index = i + 1;\n                deduped_index += 1;\n                run_counter = run_lengths[deduped_index];\n            } else {\n                // we're in a run, so this container must have a lower counter.\n                // note we don't check for overflow here, as the run_lengths array must be correct.\n                assert(\n                    current_container.counter() <= original_array[i + 1].counter(), \"Containers in a run must be sorted by counter\"\n                );\n            }\n        }\n    }\n\n    assert_eq(deduped_index, deduped_len, \"Final deduped index does not match deduped array length\");\n}\n\nmod tests {\n\n    use crate::utils::arrays::assert_deduped_array;\n    use crate::abis::side_effect::{Positioned, Ordered};\n    use crate::traits::{Empty, is_empty};\n\n    struct TestContainer {\n        value: Field,\n        position: Field,\n        counter: u32,\n    }\n\n    impl Positioned for TestContainer {\n        fn position(self) -> Field {\n            self.position\n        }\n    }\n\n    impl Ordered for TestContainer {\n        fn counter(self) -> u32 {\n            self.counter\n        }\n    }\n\n    impl Empty for TestContainer {\n        fn empty() -> Self {\n            TestContainer { value: 0, position: 0, counter: 0 }\n        }\n    }\n\n    impl Eq for TestContainer {\n        fn eq(self, other: Self) -> bool {\n            self.value.eq(other.value) & self.position.eq(other.position) & self.counter.eq(other.counter)\n        }\n    }\n\n    #[test]\n    fn assert_deduped_array_basic_test() {\n        let original_array = [\n            TestContainer { value: 1, position: 1, counter: 1 },\n            TestContainer { value: 2, position: 1, counter: 4 },\n            TestContainer { value: 3, position: 2, counter: 3 },\n            TestContainer { value: 4, position: 3, counter: 2 },\n            TestContainer { value: 5, position: 3, counter: 5 },\n            TestContainer { value: 6, position: 3, counter: 6 },\n            TestContainer { value: 7, position: 4, counter: 8 },\n            TestContainer { value: 8, position: 4, counter: 9 },\n            TestContainer { value: 9, position: 5, counter: 7 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 }\n        ];\n        let deduped_array = [\n            TestContainer { value: 2, position: 1, counter: 4 },\n            TestContainer { value: 3, position: 2, counter: 3 },\n            TestContainer { value: 6, position: 3, counter: 6 },\n            TestContainer { value: 8, position: 4, counter: 9 },\n            TestContainer { value: 9, position: 5, counter: 7 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 }\n        ];\n        let run_lengths = [2, 1, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0];\n        assert_deduped_array(original_array, deduped_array, run_lengths);\n    }\n\n    #[test]\n    fn assert_deduped_array_empty_arrays() {\n        let original_array = [TestContainer { value: 0, position: 0, counter: 0 }; 12];\n        let deduped_array = [TestContainer { value: 0, position: 0, counter: 0 }; 12];\n        let run_lengths = [0; 12];\n        assert_deduped_array(original_array, deduped_array, run_lengths);\n    }\n\n    #[test]\n    fn assert_deduped_array_no_duplicates() {\n        let original_array = [\n            TestContainer { value: 1, position: 1, counter: 1 },\n            TestContainer { value: 2, position: 2, counter: 2 },\n            TestContainer { value: 3, position: 3, counter: 3 },\n            TestContainer { value: 4, position: 4, counter: 4 },\n            TestContainer { value: 5, position: 5, counter: 5 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 }\n        ];\n        let deduped_array = original_array;\n        let run_lengths = [1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0];\n        assert_deduped_array(original_array, deduped_array, run_lengths);\n    }\n\n    #[test]\n    fn assert_deduped_array_single_run_at_end() {\n        let original_array = [\n            TestContainer { value: 1, position: 1, counter: 1 },\n            TestContainer { value: 2, position: 2, counter: 2 },\n            TestContainer { value: 3, position: 3, counter: 3 },\n            TestContainer { value: 4, position: 4, counter: 4 },\n            TestContainer { value: 5, position: 5, counter: 5 },\n            TestContainer { value: 6, position: 6, counter: 7 },\n            TestContainer { value: 7, position: 6, counter: 8 },\n            TestContainer { value: 8, position: 6, counter: 9 }\n        ];\n        let deduped_array = [\n            TestContainer { value: 1, position: 1, counter: 1 },\n            TestContainer { value: 2, position: 2, counter: 2 },\n            TestContainer { value: 3, position: 3, counter: 3 },\n            TestContainer { value: 4, position: 4, counter: 4 },\n            TestContainer { value: 5, position: 5, counter: 5 },\n            TestContainer { value: 8, position: 6, counter: 9 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 }\n        ];\n        let run_lengths = [1, 1, 1, 1, 1, 3, 0, 0];\n        assert_deduped_array(original_array, deduped_array, run_lengths);\n    }\n\n    #[test]\n    fn assert_deduped_array_all_duplicates() {\n        let original_array = [\n            TestContainer { value: 1, position: 1, counter: 1 },\n            TestContainer { value: 2, position: 1, counter: 2 },\n            TestContainer { value: 3, position: 1, counter: 3 },\n            TestContainer { value: 4, position: 1, counter: 4 },\n            TestContainer { value: 5, position: 1, counter: 5 },\n            TestContainer { value: 6, position: 1, counter: 6 },\n            TestContainer { value: 7, position: 1, counter: 7 },\n            TestContainer { value: 8, position: 1, counter: 8 },\n            TestContainer { value: 9, position: 1, counter: 9 }\n        ];\n        let deduped_array = [\n            TestContainer { value: 9, position: 1, counter: 9 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 }\n        ];\n        let run_lengths = [9, 0, 0, 0, 0, 0, 0, 0, 0];\n        assert_deduped_array(original_array, deduped_array, run_lengths);\n    }\n\n    #[test(should_fail_with = \"Empty values must be padded to the right\")]\n    fn test_empty_not_padded_right() {\n        let original_array = [\n            TestContainer { value: 1, position: 1, counter: 1 },\n            TestContainer { value: 2, position: 1, counter: 2 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 3, position: 2, counter: 3 }\n        ];\n        let deduped_array = [\n            TestContainer { value: 2, position: 1, counter: 2 },\n            TestContainer { value: 3, position: 2, counter: 3 },\n            TestContainer { value: 0, position: 0, counter: 0 },\n            TestContainer { value: 0, position: 0, counter: 0 }\n        ];\n        let run_lengths = [2, 1, 0, 0];\n        assert_deduped_array(original_array, deduped_array, run_lengths);\n    }\n\n    #[test(should_fail_with = \"The position of the current container must match the start of the run\")]\n    fn test_mismatched_position_in_run() {\n        let original_array = [\n            TestContainer { value: 1, position: 1, counter: 1 },\n            TestContainer { value: 2, position: 1, counter: 2 },\n            TestContainer { value: 3, position: 2, counter: 3 },\n            TestContainer { value: 4, position: 3, counter: 4 }\n        ];\n        let deduped_array = [\n            TestContainer { value: 2, position: 1, counter: 2 },\n            TestContainer { value: 3, position: 2, counter: 3 },\n            TestContainer { value: 4, position: 3, counter: 4 },\n            TestContainer { value: 0, position: 0, counter: 0 }\n        ];\n        let run_lengths = [3, 1, 1, 0];\n        assert_deduped_array(original_array, deduped_array, run_lengths);\n    }\n\n    #[test(should_fail_with = \"The container we are collapsing into must match the current container\")]\n    fn test_mismatched_deduped_value() {\n        let original_array = [\n            TestContainer { value: 1, position: 1, counter: 1 },\n            TestContainer { value: 2, position: 1, counter: 2 },\n            TestContainer { value: 3, position: 2, counter: 3 },\n            TestContainer { value: 4, position: 3, counter: 4 }\n        ];\n        let deduped_array = [\n            TestContainer { value: 1, position: 1, counter: 1 },\n            TestContainer { value: 3, position: 2, counter: 3 },\n            TestContainer { value: 4, position: 3, counter: 4 },\n            TestContainer { value: 0, position: 0, counter: 0 }\n        ];\n        let run_lengths = [2, 1, 1, 0];\n        assert_deduped_array(original_array, deduped_array, run_lengths);\n    }\n\n    #[test(should_fail_with = \"Deduped array length does not match number of run lengths\")]\n    fn test_run_lengths_not_zero_padded() {\n        let original_array = [\n            TestContainer { value: 1, position: 1, counter: 1 },\n            TestContainer { value: 2, position: 1, counter: 2 },\n            TestContainer { value: 3, position: 2, counter: 3 },\n            TestContainer { value: 4, position: 3, counter: 4 }\n        ];\n        let deduped_array = [\n            TestContainer { value: 2, position: 1, counter: 2 },\n            TestContainer { value: 3, position: 2, counter: 3 },\n            TestContainer { value: 4, position: 3, counter: 4 },\n            TestContainer { value: 0, position: 0, counter: 0 }\n        ];\n        let run_lengths = [2, 1, 1, 1]; // Last element should be 0\n        assert_deduped_array(original_array, deduped_array, run_lengths);\n    }\n\n    #[test(should_fail_with = \"Deduped array length does not match number of run lengths\")]\n    fn test_deduped_padding_not_zero_padded() {\n        let original_array = [\n            TestContainer { value: 1, position: 1, counter: 1 },\n            TestContainer { value: 2, position: 1, counter: 2 },\n            TestContainer { value: 3, position: 2, counter: 3 },\n            TestContainer { value: 4, position: 3, counter: 4 }\n        ];\n        let deduped_array = [\n            TestContainer { value: 2, position: 1, counter: 2 },\n            TestContainer { value: 3, position: 2, counter: 3 },\n            TestContainer { value: 4, position: 3, counter: 4 },\n            TestContainer { value: 1, position: 1, counter: 1 }// Last element should be 0\n        ];\n        let run_lengths = [2, 1, 1, 0];\n        assert_deduped_array(original_array, deduped_array, run_lengths);\n    }\n}\n\n#[test]\nfn smoke_validate_array() {\n    let valid_array: [Field; 0] = [];\n    assert(validate_array(valid_array) == 0);\n\n    let valid_array = [0];\n    assert(validate_array(valid_array) == 0);\n\n    let valid_array = [3];\n    assert(validate_array(valid_array) == 1);\n\n    let valid_array = [1, 2, 3];\n    assert(validate_array(valid_array) == 3);\n\n    let valid_array = [1, 2, 3, 0];\n    assert(validate_array(valid_array) == 3);\n\n    let valid_array = [1, 2, 3, 0, 0];\n    assert(validate_array(valid_array) == 3);\n}\n\n#[test(should_fail_with = \"invalid array\")]\nfn smoke_validate_array_invalid_case0() {\n    let invalid_array = [0, 1];\n    let _ = validate_array(invalid_array);\n}\n\n#[test(should_fail_with = \"invalid array\")]\nfn smoke_validate_array_invalid_case1() {\n    let invalid_array = [1, 0, 0, 1, 0];\n    let _ = validate_array(invalid_array);\n}\n\n#[test(should_fail_with = \"invalid array\")]\nfn smoke_validate_array_invalid_case2() {\n    let invalid_array = [0, 0, 0, 0, 1];\n    let _ = validate_array(invalid_array);\n}\n\n#[test]\nfn test_empty_array_length() {\n    assert_eq(array_length([0]), 0);\n    assert_eq(array_length([0, 0, 0]), 0);\n}\n\n#[test]\nfn test_array_length() {\n    assert_eq(array_length([123]), 1);\n    assert_eq(array_length([123, 0, 0]), 1);\n    assert_eq(array_length([123, 456]), 2);\n    assert_eq(array_length([123, 456, 0]), 2);\n}\n\n#[test]\nfn test_array_length_invalid_arrays() {\n    // Result can be misleading (but correct) for invalid arrays.\n    assert_eq(array_length([0, 0, 123]), 0);\n    assert_eq(array_length([0, 123, 0]), 0);\n    assert_eq(array_length([0, 123, 456]), 0);\n    assert_eq(array_length([123, 0, 456]), 1);\n}\n\n#[test]\nfn find_index_greater_than_min() {\n    let values = [10, 20, 30, 40];\n    let min = 22;\n    let index = find_index(values, |v: Field| min.lt(v));\n    assert_eq(index, 2);\n}\n\n#[test]\nfn find_index_not_found() {\n    let values = [10, 20, 30, 40];\n    let min = 100;\n    let index = find_index(values, |v: Field| min.lt(v));\n    assert_eq(index, 4);\n}\n\n#[test]\nfn test_array_concat() {\n    let array0 = [1, 2, 3];\n    let array1 = [4, 5];\n    let concated = array_concat(array0, array1);\n    assert_eq(concated, [1, 2, 3, 4, 5]);\n}\n\n#[test(should_fail_with=\"combined array length does not match return array length\")]\nfn array_concat_fails_inconsistent_lengths() {\n    let array0 = [1, 2, 3];\n    let array1 = [4, 5];\n    let _concated: [Field; 4] = array_concat(array0, array1);\n}\n\n#[test]\nfn check_permutation_basic_test() {\n    let original_array = [1, 2, 3];\n    let permuted_array = [3, 1, 2];\n    let indexes = [2, 0, 1];\n    check_permutation(original_array, permuted_array, indexes);\n}\n\n#[test(should_fail_with = \"Duplicated index\")]\nfn check_permutation_duplicated_index() {\n    let original_array = [0, 1, 0];\n    let permuted_array = [1, 0, 0];\n    let indexes = [1, 0, 0];\n    check_permutation(original_array, permuted_array, indexes);\n}\n\n#[test(should_fail_with = \"Invalid index\")]\nfn check_permutation_invalid_index() {\n    let original_array = [0, 1, 2];\n    let permuted_array = [1, 0, 0];\n    let indexes = [1, 0, 2];\n    check_permutation(original_array, permuted_array, indexes);\n}\n"},"275":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/utils/mod.nr","source":"// general util packages/modules are usually bad practice\n// because there is no criteria for what we should not put in here.\n// Reducing the size of this package would be welcome.\n\nmod arrays;\nmod field;\nmod reader;\nmod uint256;\n\n// if predicate == true then return lhs, else return rhs\npub fn conditional_assign(predicate: bool, lhs: Field, rhs: Field) -> Field {\n    if predicate { lhs } else { rhs }\n}\n\npub fn arr_copy_slice<T, N, M>(src: [T; N], mut dst: [T; M], offset: u32) -> [T; M] {\n    let iterator_len = if N > M { M } else { N };\n    for i in 0..iterator_len {\n        dst[i] = src[i + offset];\n    }\n    dst\n}\n"},"290":{"path":"/usr/src/noir-projects/noir-protocol-circuits/crates/types/src/address/aztec_address.nr","source":"use crate::{\n    crate::address::{eth_address::EthAddress, partial_address::PartialAddress, public_keys_hash::PublicKeysHash},\n    constants::{AZTEC_ADDRESS_LENGTH, GENERATOR_INDEX__CONTRACT_ADDRESS_V1},\n    contract_class_id::ContractClassId, hash::poseidon2_hash,\n    traits::{Empty, FromField, ToField, Serialize, Deserialize}, utils\n};\n\n// Aztec address\nstruct AztecAddress {\n    inner : Field\n}\n\nimpl Eq for AztecAddress {\n    fn eq(self, other : Self) -> bool {\n        self.to_field() == other.to_field()\n    }\n}\n\nimpl Empty for AztecAddress {\n    fn empty() -> Self {\n        Self {\n            inner : 0\n        }\n    }\n}\n\nimpl ToField for AztecAddress {\n    fn to_field(self) -> Field {\n        self.inner\n    }\n}\n\nimpl FromField for AztecAddress {\n    fn from_field(value: Field) -> AztecAddress {\n        AztecAddress { inner: value }\n    }\n}\n\nimpl Serialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn serialize(self: Self) -> [Field; AZTEC_ADDRESS_LENGTH] {\n        [self.to_field()]\n    }\n}\n\nimpl Deserialize<AZTEC_ADDRESS_LENGTH> for AztecAddress {\n    fn deserialize(fields: [Field; AZTEC_ADDRESS_LENGTH]) -> Self {\n        FromField::from_field(fields[0])\n    }\n}\n\nimpl AztecAddress {\n    pub fn zero() -> Self {\n        Self { inner: 0 }\n    }\n\n    pub fn compute(pub_keys_hash: PublicKeysHash, partial_address: PartialAddress) -> AztecAddress {\n        AztecAddress::from_field(\n            poseidon2_hash([pub_keys_hash.to_field(), partial_address.to_field(), GENERATOR_INDEX__CONTRACT_ADDRESS_V1])\n        )\n    }\n\n    pub fn is_zero(self) -> bool {\n        self.inner == 0\n    }\n\n    pub fn assert_is_zero(self) {\n        assert(self.to_field() == 0);\n    }\n\n    pub fn conditional_assign(predicate: bool, lhs: Self, rhs: Self) -> Self {\n        let result = utils::conditional_assign(predicate, rhs.to_field(), lhs.to_field());\n        Self { inner: result }\n    }\n}\n\n#[test]\nfn compute_address_from_partial_and_pub_keys_hash() {\n    let pub_keys_hash = PublicKeysHash::from_field(1);\n    let partial_address = PartialAddress::from_field(2);\n\n    let address = AztecAddress::compute(pub_keys_hash, partial_address);\n    let expected_computed_address_from_partial_and_pubkey = 0x1b6ead051e7b42665064ca6cf1ec77da0a36d86e00d1ff6e44077966c0c3a9fa;\n    assert(address.to_field() == expected_computed_address_from_partial_and_pubkey);\n}\n\n#[test]\nfn from_field_to_field() {\n    let address = AztecAddress { inner: 37 };\n    assert_eq(FromField::from_field(address.to_field()), address);\n}\n\n#[test]\nfn serde() {\n    let address = AztecAddress { inner: 37 };\n    assert_eq(Deserialize::deserialize(address.serialize()), address);\n}\n"},"30":{"path":"std/hash/poseidon2.nr","source":"use crate::hash::Hasher;\nuse crate::default::Default;\n\nglobal RATE: u32 = 3;\n\nstruct Poseidon2 {\n    cache: [Field;3],\n    state: [Field;4],\n    cache_size: u32,\n    squeeze_mode: bool, // 0 => absorb, 1 => squeeze\n}\n\nimpl Poseidon2 {\n    #[no_predicates]\n    pub fn hash<let N: u32>(input: [Field; N], message_size: u32) -> Field {\n        if message_size == N {\n            Poseidon2::hash_internal(input, N, false)\n        } else {\n            Poseidon2::hash_internal(input, message_size, true)\n        }\n    }\n\n    fn new(iv: Field) -> Poseidon2 {\n        let mut result = Poseidon2 { cache: [0; 3], state: [0; 4], cache_size: 0, squeeze_mode: false };\n        result.state[RATE] = iv;\n        result\n    }\n\n    fn perform_duplex(&mut self) -> [Field; RATE] {\n        // zero-pad the cache\n        for i in 0..RATE {\n            if i >= self.cache_size {\n                self.cache[i] = 0;\n            }\n        }\n        // add the cache into sponge state\n        for i in 0..RATE {\n            self.state[i] += self.cache[i];\n        }\n        self.state = crate::hash::poseidon2_permutation(self.state, 4);\n        // return `RATE` number of field elements from the sponge state.\n        let mut result = [0; RATE];\n        for i in 0..RATE {\n            result[i] = self.state[i];\n        }\n        result\n    }\n\n    fn absorb(&mut self, input: Field) {\n        if (!self.squeeze_mode) & (self.cache_size == RATE) {\n            // If we're absorbing, and the cache is full, apply the sponge permutation to compress the cache\n            let _ = self.perform_duplex();\n            self.cache[0] = input;\n            self.cache_size = 1;\n        } else if (!self.squeeze_mode) & (self.cache_size != RATE) {\n            // If we're absorbing, and the cache is not full, add the input into the cache\n            self.cache[self.cache_size] = input;\n            self.cache_size += 1;\n        } else if self.squeeze_mode {\n            // If we're in squeeze mode, switch to absorb mode and add the input into the cache.\n            // N.B. I don't think this code path can be reached?!\n            self.cache[0] = input;\n            self.cache_size = 1;\n            self.squeeze_mode = false;\n        }\n    }\n\n    fn squeeze(&mut self) -> Field {\n        if self.squeeze_mode & (self.cache_size == 0) {\n            // If we're in squeze mode and the cache is empty, there is nothing left to squeeze out of the sponge!\n            // Switch to absorb mode.\n            self.squeeze_mode = false;\n            self.cache_size = 0;\n        }\n        if !self.squeeze_mode {\n            // If we're in absorb mode, apply sponge permutation to compress the cache, populate cache with compressed\n            // state and switch to squeeze mode. Note: this code block will execute if the previous `if` condition was\n            // matched\n            let new_output_elements = self.perform_duplex();\n            self.squeeze_mode = true;\n            for i in 0..RATE {\n                self.cache[i] = new_output_elements[i];\n            }\n            self.cache_size = RATE;\n        }\n        // By this point, we should have a non-empty cache. Pop one item off the top of the cache and return it.\n        let result = self.cache[0];\n        for i in 1..RATE {\n            if i < self.cache_size {\n                self.cache[i - 1] = self.cache[i];\n            }\n        }\n        self.cache_size -= 1;\n        self.cache[self.cache_size] = 0;\n        result\n    }\n\n    fn hash_internal<let N: u32>(input: [Field; N], in_len: u32, is_variable_length: bool) -> Field {\n        let two_pow_64 = 18446744073709551616;\n        let iv : Field = (in_len as Field) * two_pow_64;\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..input.len() {\n            if i < in_len {\n                sponge.absorb(input[i]);\n            }\n        }\n\n        // In the case where the hash preimage is variable-length, we append `1` to the end of the input, to distinguish\n        // from fixed-length hashes. (the combination of this additional field element + the hash IV ensures\n        // fixed-length and variable-length hashes do not collide)\n        if is_variable_length {\n            sponge.absorb(1);\n        }\n        sponge.squeeze()\n    }\n}\n\nstruct Poseidon2Hasher{\n    _state: [Field],\n}\n\nimpl Hasher for Poseidon2Hasher {\n    fn finish(self) -> Field {\n        let iv : Field = (self._state.len() as Field)*18446744073709551616;    // iv = (self._state.len() << 64)\n        let mut sponge = Poseidon2::new(iv);\n        for i in 0..self._state.len() {\n            sponge.absorb(self._state[i]);\n        }\n        sponge.squeeze()\n    }\n\n    fn write(&mut self, input: Field){\n        self._state = self._state.push_back(input);\n    }\n}\n\nimpl Default for Poseidon2Hasher {\n    fn default() -> Self {\n        Poseidon2Hasher {\n            _state: &[],\n        }\n    }\n}\n"},"32":{"path":"std/merkle.nr","source":"// Regular merkle tree means a append-only merkle tree (Explain why this is the only way to have privacy and alternatives if you don't want it)\n// Currently we assume that it is a binary tree, so depth k implies a width of 2^k\n// XXX: In the future we can add an arity parameter\n// Returns the merkle root of the tree from the provided leaf, its hashpath, using a pedersen hash function.\npub fn compute_merkle_root<let N: u32>(leaf: Field, index: Field, hash_path: [Field; N]) -> Field {\n    let n = hash_path.len();\n    let index_bits = index.to_le_bits(n as u32);\n    let mut current = leaf;\n    for i in 0..n {\n        let path_bit = index_bits[i] as bool;\n        let (hash_left, hash_right) = if path_bit {\n            (hash_path[i], current)\n        } else {\n            (current, hash_path[i])\n        };\n        current = crate::hash::pedersen_hash([hash_left, hash_right]);\n    }\n    current\n}\n"},"330":{"path":"/usr/src/noir-projects/aztec-nr/value-note/src/value_note.nr","source":"use dep::aztec::{\n    protocol_types::{\n    address::AztecAddress, traits::{Deserialize, Serialize}, constants::GENERATOR_INDEX__NOTE_NULLIFIER,\n    hash::poseidon2_hash\n},\n    note::{note_header::NoteHeader, note_interface::NoteInterface, utils::compute_note_hash_for_consumption},\n    oracle::unsafe_rand::unsafe_rand, keys::getters::get_nsk_app, context::PrivateContext\n};\n\nglobal VALUE_NOTE_LEN: Field = 3; // 3 plus a header.\n// VALUE_NOTE_LEN * 32 + 32(storage_slot as bytes) + 32(note_type_id as bytes)\nglobal VALUE_NOTE_BYTES_LEN: Field = 3 * 32 + 64;\n\n// docs:start:value-note-def\n#[aztec(note)]\nstruct ValueNote {\n    value: Field,\n   // The nullifying public key hash is used with the nsk_app to ensure that the note can be privately spent.\n    npk_m_hash: Field,\n    randomness: Field,\n}\n// docs:end:value-note-def\n\nimpl NoteInterface<VALUE_NOTE_LEN, VALUE_NOTE_BYTES_LEN> for ValueNote {\n    // docs:start:nullifier\n\n    fn compute_note_hash_and_nullifier(self, context: &mut PrivateContext) -> (Field, Field) {\n        let note_hash_for_nullify = compute_note_hash_for_consumption(self);\n        let secret = context.request_nsk_app(self.npk_m_hash);\n        let nullifier = poseidon2_hash([\n            note_hash_for_nullify,\n            secret,\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field,\n        ]);\n        (note_hash_for_nullify, nullifier)\n    }\n\n    // docs:end:nullifier\n\n    fn compute_note_hash_and_nullifier_without_context(self) -> (Field, Field) {\n        let note_hash_for_nullify = compute_note_hash_for_consumption(self);\n        let secret = get_nsk_app(self.npk_m_hash);\n        let nullifier = poseidon2_hash([\n            note_hash_for_nullify,\n            secret,\n            GENERATOR_INDEX__NOTE_NULLIFIER as Field,\n        ]);\n        (note_hash_for_nullify, nullifier)\n    }\n}\n\nimpl ValueNote {\n    pub fn new(value: Field, npk_m_hash: Field) -> Self {\n        let randomness = unsafe_rand();\n        let header = NoteHeader::empty();\n        ValueNote { value, npk_m_hash, randomness, header }\n    }\n}\n\nimpl Serialize<7> for ValueNote {\n    fn serialize(self) -> [Field; 7] {\n        let header = self.header.serialize();\n\n        [self.value, self.npk_m_hash, self.randomness, header[0], header[1], header[2], header[3]]\n    }\n}\n"},"334":{"path":"/usr/src/noir-projects/noir-contracts/contracts/card_game_contract/src/cards.nr","source":"use dep::aztec::prelude::{AztecAddress, FunctionSelector, PrivateContext, NoteHeader, NoteGetterOptions, NoteViewerOptions};\n\nuse dep::aztec::{\n    context::UnconstrainedContext,\n    protocol_types::{traits::{ToField, Serialize, FromField}, constants::MAX_NOTE_HASH_READ_REQUESTS_PER_CALL},\n    encrypted_logs::encrypted_note_emission::encode_and_encrypt_note_with_keys,\n    note::note_getter::view_notes, state_vars::PrivateSet, note::constants::MAX_NOTES_PER_PAGE\n};\nuse dep::value_note::{value_note::{ValueNote, VALUE_NOTE_LEN}};\n\nstruct Card {\n    // We use u32s since u16s are unsupported\n    strength: u32,\n    points: u32,\n}\n\nimpl FromField for Card {\n fn from_field(field: Field) -> Card {\n        let value_bytes = field.to_le_bytes(32);\n        let strength = (value_bytes[0] as u32) + (value_bytes[1] as u32) * 256;\n        let points = (value_bytes[2] as u32) + (value_bytes[3] as u32) * 256;\n        Card { strength, points }\n    }\n}\n\nimpl ToField for Card {\n fn to_field(self) -> Field {\n        self.strength as Field + (self.points as Field)*65536\n    }\n}\n\nimpl Serialize<2> for Card {\n    fn serialize(self) -> [Field; 2] {\n        [self.strength as Field, self.points as Field]\n    }\n}\n\n// docs:start:pure_noir_testing\n#[test]\nfn test_to_from_field() {\n    let field = 1234567890;\n    let card = Card::from_field(field);\n    assert(card.to_field() == field);\n}\n// docs:end:pure_noir_testing\n\nstruct CardNote {\n    card: Card,\n    note: ValueNote,\n}\n\nimpl CardNote {\n    fn new(strength: u32, points: u32, npk_m_hash: Field) -> Self {\n        let card = Card { strength, points };\n        CardNote::from_card(card, npk_m_hash)\n    }\n\n    pub fn from_card(card: Card, npk_m_hash: Field) -> CardNote {\n        CardNote { card, note: ValueNote::new(card.to_field(), npk_m_hash) }\n    }\n\n    pub fn from_note(note: ValueNote) -> CardNote {\n        CardNote { card: Card::from_field(note.value), note }\n    }\n}\n\nstruct Deck<Context> {\n    set: PrivateSet<ValueNote, Context>,\n}\n\npub fn filter_cards<N>(\n    notes: [Option<ValueNote>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL],\n    desired_cards: [Card; N]\n) -> [Option<ValueNote>; MAX_NOTE_HASH_READ_REQUESTS_PER_CALL] {\n    let mut selected = [Option::none(); MAX_NOTE_HASH_READ_REQUESTS_PER_CALL];\n\n    let mut found = [false; N];\n\n    for i in 0..notes.len() {\n        let note = notes[i];\n        if note.is_some() {\n            let card_note = CardNote::from_note(note.unwrap_unchecked());\n            for j in 0..N {\n                if !found[j]\n                    & (card_note.card.strength == desired_cards[j].strength)\n                    & (card_note.card.points == desired_cards[j].points) {\n                    selected[i] = note;\n                    found[j] = true;\n                }\n            }\n        }\n    }\n\n    selected\n}\n\nimpl<Context> Deck<Context> {\n    pub fn new(context: Context, storage_slot: Field) -> Self {\n        let set = PrivateSet { context, storage_slot };\n        Deck { set }\n    }\n}\n\nimpl Deck<&mut PrivateContext> {\n    pub fn add_cards<N>(&mut self, cards: [Card; N], owner: AztecAddress) -> [CardNote] {\n        let header = self.set.context.get_header();\n        let owner_npk_m_hash = header.get_npk_m_hash(self.set.context, owner);\n        let msg_sender_ovpk_m = header.get_ovpk_m(self.set.context, self.set.context.msg_sender());\n        let owner_ivpk_m = header.get_ivpk_m(self.set.context, owner);\n\n        let mut inserted_cards = &[];\n        for card in cards {\n            let mut card_note = CardNote::from_card(card, owner_npk_m_hash);\n            self.set.insert(&mut card_note.note).emit(encode_and_encrypt_note_with_keys(self.set.context, msg_sender_ovpk_m, owner_ivpk_m));\n            inserted_cards = inserted_cards.push_back(card_note);\n        }\n\n        inserted_cards\n    }\n\n    pub fn get_cards<N>(&mut self, cards: [Card; N]) -> [CardNote; N] {\n        let options = NoteGetterOptions::with_filter(filter_cards, cards);\n        let notes = self.set.get_notes(options);\n\n        // This array will hold the notes that correspond to each of the requested cards. It begins empty (with all the\n        // options being none) and we gradually fill it up as we find the matching notes.\n        let mut found_cards = [Option::none(); N];\n\n        for i in 0..options.limit {\n            if i < notes.len() {\n                let card_note = CardNote::from_note(notes.get_unchecked(i));\n\n                // For each note that we read, we search for a matching card that we have not already marked as found.\n                for j in 0..cards.len() {\n                    if found_cards[j].is_none()\n                        & (cards[j].strength == card_note.card.strength)\n                        & (cards[j].points == card_note.card.points) {\n                        found_cards[j] = Option::some(card_note);\n                    }\n                }\n            }\n        }\n\n        // And then we assert that we did indeed find all cards, since found_cards and cards have the same length.\n        found_cards.map(\n            |card_note: Option<CardNote>| {\n            assert(card_note.is_some(), \"Card not found\");\n            card_note.unwrap_unchecked()\n        }\n        )\n    }\n\n    pub fn remove_cards<N>(&mut self, cards: [Card; N]) {\n        let card_notes = self.get_cards(cards);\n        for card_note in card_notes {\n            self.set.remove(card_note.note);\n        }\n    }\n}\n\nimpl Deck<UnconstrainedContext> {\n    unconstrained pub fn view_cards(self, offset: u32) -> BoundedVec<Card, MAX_NOTES_PER_PAGE> {\n        let mut options = NoteViewerOptions::new();\n        let notes = self.set.view_notes(options.set_offset(offset));\n\n        // TODO: ideally we'd do let cards = notes.map(|note| Cards::from_field(note.value));\n        // see https://github.com/noir-lang/noir/pull/5250\n        let mut cards = BoundedVec::new();\n        cards.len = notes.len();\n        for i in 0..notes.len() {\n            cards.storage[i] = Card::from_field(notes.get_unchecked(i).value);\n        }\n\n        cards\n    }\n}\n\nglobal PACK_CARDS = 3; // Limited by number of write requests (max 4)\n\npub fn get_pack_cards(\n    seed: Field,\n    owner: AztecAddress,\n    context: &mut PrivateContext\n) -> [Card; PACK_CARDS] {\n    let header = context.get_header();\n    let owner_npk_m_hash = header.get_npk_m_hash(context, owner);\n\n    // generate pseudo randomness deterministically from 'seed' and user secret\n    let secret = context.request_nsk_app(owner_npk_m_hash);\n    let mix = secret + seed;\n    let mix_bytes: [u8; 32] = mix.to_le_bytes(32).as_array();\n    let random_bytes = std::hash::sha256(mix_bytes);\n\n    let mut cards = [Card::from_field(0); PACK_CARDS];\n    // we generate PACK_CARDS cards\n    assert(PACK_CARDS < 8, \"Cannot generate more than 8 cards\");\n    for i in 0..PACK_CARDS {\n        let strength = (random_bytes[i] as u32) + (random_bytes[i + 1] as u32) * 256;\n        let points = (random_bytes[i + 2] as u32) + (random_bytes[i + 3] as u32) * 256;\n        cards[i] = Card {\n            strength, points\n        };\n    }\n\n    cards\n}\n\npub fn compute_deck_strength<N>(cards: [Card; N]) -> Field {\n    cards.fold(\n        0,\n        |acc, card: Card| {\n        acc + card.strength as Field\n    }\n    )\n}\n"},"335":{"path":"/usr/src/noir-projects/noir-contracts/contracts/card_game_contract/src/main.nr","source":"mod cards;\nmod game;\n\ncontract CardGame {\n    use dep::aztec::protocol_types::{abis::function_selector::FunctionSelector, address::AztecAddress};\n    use dep::aztec::{hash::pedersen_hash, state_vars::{Map, PublicMutable}};\n\n    use dep::value_note::{balance_utils, value_note::{ValueNote, VALUE_NOTE_LEN}};\n\n    use dep::aztec::note::{note_header::NoteHeader, constants::MAX_NOTES_PER_PAGE};\n\n    use crate::cards::{PACK_CARDS, Deck, Card, get_pack_cards, compute_deck_strength};\n    use crate::game::{NUMBER_OF_PLAYERS, NUMBER_OF_CARDS_DECK, PLAYABLE_CARDS, PlayerEntry, Game, GAME_SERIALIZED_LEN};\n\n    #[aztec(storage)]\n    struct Storage {\n        collections: Map<AztecAddress, Deck>,\n        game_decks: Map<Field, Map<AztecAddress, Deck>>,\n        games: Map<Field, PublicMutable<Game>>,\n    }\n\n    #[aztec(private)]\n    fn buy_pack(seed: Field // The randomness used to generate the cards. Passed in for now.\n    ) {\n        let buyer = context.msg_sender();\n        let mut cards = get_pack_cards(seed, buyer, &mut context);\n\n        let mut collection = storage.collections.at(buyer);\n        let _inserted_cards = collection.add_cards(cards, buyer);\n    }\n\n    #[aztec(private)]\n    fn join_game(game: u32, cards_fields: [Field; 2]) {\n        let cards = cards_fields.map(|card_field| Card::from_field(card_field));\n\n        let player = context.msg_sender();\n\n        let mut collection = storage.collections.at(player);\n        collection.remove_cards(cards);\n        let mut game_deck = storage.game_decks.at(game as Field).at(player);\n        let _added_to_game_deck = game_deck.add_cards(cards, player);\n        let strength = compute_deck_strength(cards);\n        CardGame::at(context.this_address()).on_game_joined(game, player, strength as u32).enqueue(&mut context);\n    }\n\n    #[aztec(public)]\n    #[aztec(internal)]\n    fn on_game_joined(game: u32, player: AztecAddress, deck_strength: u32) {\n        let game_storage = storage.games.at(game as Field);\n\n        let mut game_data = game_storage.read();\n        assert(game_data.add_player(PlayerEntry { address: player, deck_strength, points: 0 }), \"Game full\");\n\n        game_storage.write(game_data);\n    }\n\n    #[aztec(public)]\n    fn start_game(game: u32) {\n        let game_storage = storage.games.at(game as Field);\n\n        let mut game_data = game_storage.read();\n        game_data.start_game();\n        game_storage.write(game_data);\n    }\n\n    #[aztec(private)]\n    fn play_card(game: u32, card: Card) {\n        let player = context.msg_sender();\n\n        let mut game_deck = storage.game_decks.at(game as Field).at(player);\n        game_deck.remove_cards([card]);\n\n        // docs:start:call_public_function\n        CardGame::at(context.this_address()).on_card_played(game, player, card.to_field()).enqueue(&mut context);\n        // docs:end:call_public_function\n    }\n\n    #[aztec(public)]\n    #[aztec(internal)]\n    fn on_card_played(game: u32, player: AztecAddress, card_as_field: Field) {\n        let game_storage = storage.games.at(game as Field);\n\n        let mut game_data = game_storage.read();\n\n        let card = Card::from_field(card_as_field);\n        let current_player = game_data.current_player();\n        assert(current_player.address.eq(player), \"Not your turn\");\n        game_data.play_card(card);\n\n        game_storage.write(game_data);\n    }\n\n    #[aztec(private)]\n    fn claim_cards(game: u32, cards_fields: [Field; PLAYABLE_CARDS]) {\n        let player = context.msg_sender();\n        let cards = cards_fields.map(|card_field| Card::from_field(card_field));\n\n        let mut collection = storage.collections.at(player);\n        let _inserted_cards = collection.add_cards(cards, player);\n        CardGame::at(context.this_address()).on_cards_claimed(game, player, pedersen_hash(cards_fields, 0)).enqueue(&mut context);\n    }\n\n    #[aztec(public)]\n    #[aztec(internal)]\n    fn on_cards_claimed(game: u32, player: AztecAddress, cards_hash: Field) {\n        let game_storage = storage.games.at(game as Field);\n        let mut game_data = game_storage.read();\n\n        assert(!game_data.claimed, \"Already claimed\");\n        game_data.claimed = true;\n\n        assert_eq(cards_hash, pedersen_hash(game_data.rounds_cards.map(|card: Card| card.to_field()), 0));\n\n        let winner = game_data.winner();\n        assert(player.eq(winner.address), \"Not the winner\");\n\n        game_storage.write(game_data);\n    }\n\n    unconstrained fn view_collection_cards(owner: AztecAddress, offset: u32) -> pub BoundedVec<Card, MAX_NOTES_PER_PAGE> {\n        let collection = storage.collections.at(owner);\n        collection.view_cards(offset)\n    }\n\n    unconstrained fn view_game_cards(game: u32, player: AztecAddress, offset: u32) -> pub BoundedVec<Card, MAX_NOTES_PER_PAGE> {\n        let game_deck = storage.game_decks.at(game as Field).at(player);\n\n        game_deck.view_cards(offset)\n    }\n\n    unconstrained fn view_game(game: u32) -> pub Game {\n        storage.games.at(game as Field).read()\n    }\n}\n"},"336":{"path":"/usr/src/noir-projects/noir-contracts/contracts/card_game_contract/src/game.nr","source":"use dep::aztec::protocol_types::{address::AztecAddress, traits::{Serialize, Deserialize}};\nuse crate::cards::Card;\n\nglobal NUMBER_OF_PLAYERS: u64 = 2;\nglobal NUMBER_OF_CARDS_DECK: u64 = 2;\n\nstruct PlayerEntry {\n    address: AztecAddress,\n    deck_strength: u32,\n    points: u64,\n}\n\nimpl PlayerEntry {\n    pub fn is_initialized(self) -> bool {\n        !self.address.is_zero()\n    }\n}\n\nglobal PLAYER_SERIALIZED_LEN: Field = 3;\n\nimpl Deserialize<PLAYER_SERIALIZED_LEN> for PlayerEntry {\n    fn deserialize(fields: [Field; PLAYER_SERIALIZED_LEN]) -> PlayerEntry {\n        let address = AztecAddress::from_field(fields[0]);\n        let deck_strength = fields[1] as u32;\n        let points = fields[2] as u64;\n        \n        PlayerEntry {\n            address,\n            deck_strength,\n            points\n        }\n    }\n}\n\nglobal PLAYABLE_CARDS = 4;\n\nstruct Game {\n    players: [PlayerEntry; NUMBER_OF_PLAYERS],\n    rounds_cards: [Card; PLAYABLE_CARDS],\n    started: bool,\n    finished: bool,\n    claimed: bool,\n    current_player: u64,\n    current_round: u64,\n}\n\nglobal GAME_SERIALIZED_LEN: Field = 15;\n\nimpl Serialize<GAME_SERIALIZED_LEN> for Game {\n    fn serialize(game: Game) -> [Field; GAME_SERIALIZED_LEN] {\n        [\n            game.players[0].address.to_field(),\n            game.players[0].deck_strength as Field,\n            game.players[0].points as Field,\n            game.players[1].address.to_field(),\n            game.players[1].deck_strength as Field,\n            game.players[1].points as Field,\n            game.rounds_cards[0].to_field(),\n            game.rounds_cards[1].to_field(),\n            game.rounds_cards[2].to_field(),\n            game.rounds_cards[3].to_field(),\n            game.started as Field,\n            game.finished as Field,\n            game.claimed as Field,\n            game.current_player as Field,\n            game.current_round as Field\n        ]\n    }\n}\n\nimpl Deserialize<GAME_SERIALIZED_LEN> for Game {\n    fn deserialize(fields: [Field; GAME_SERIALIZED_LEN]) -> Game {\n        let player1 = PlayerEntry::deserialize([fields[0], fields[1], fields[2]]);\n        let player2 = PlayerEntry::deserialize([fields[3], fields[4], fields[5]]);\n        \n        let players = [player1, player2];\n        let rounds_cards = [\n            Card::from_field(fields[6]), Card::from_field(fields[7]),\n            Card::from_field(fields[8]), Card::from_field(fields[9])\n        ];\n        Game {\n            players,\n            rounds_cards,\n            started: fields[10] as bool,\n            finished: fields[11] as bool,\n            claimed: fields[12] as bool,\n            current_player: fields[13] as u64,\n            current_round: fields[14] as u64\n        }\n    }\n}\n\nimpl Game {\n    pub fn add_player(&mut self, player_entry: PlayerEntry) -> bool {\n        let mut added = false;\n\n        for i in 0..NUMBER_OF_PLAYERS {\n            let entry = self.players[i];\n            if entry.is_initialized() {\n                assert(!entry.address.eq(player_entry.address), \"Player already in game\");\n            } else if !added {\n                self.players[i] = player_entry;\n                added = true;\n            }\n        }\n\n        added\n    }\n\n    pub fn start_game(&mut self) {\n        assert(!self.started, \"Game already started\");\n        for i in 0..NUMBER_OF_PLAYERS {\n            let entry = self.players[i];\n            assert(entry.is_initialized(), \"Game not full\");\n        }\n        let sorted_by_deck_strength = self.players.sort_via(|a: PlayerEntry, b: PlayerEntry| a.deck_strength < b.deck_strength);\n        self.players = sorted_by_deck_strength;\n        self.started = true;\n    }\n\n    pub fn current_player(self) -> PlayerEntry {\n        assert(self.started, \"Game not started\");\n        assert(!self.finished, \"Game finished\");\n        self.players[self.current_player]\n    }\n\n    pub fn winner(self) -> PlayerEntry {\n        assert(self.finished, \"Game not finished\");\n        let mut winner = self.players[0];\n        for i in 1..NUMBER_OF_PLAYERS {\n            let entry = self.players[i];\n            if entry.points > winner.points {\n                winner = entry;\n            }\n        }\n        winner\n    }\n\n    pub fn play_card(&mut self, card: Card) {\n        assert(self.started, \"Game not started\");\n        assert(!self.finished, \"Game finished\");\n\n        let round_offset = self.current_round * NUMBER_OF_PLAYERS;\n\n        self.rounds_cards[round_offset + self.current_player] = card;\n        self.current_player = (self.current_player + 1) % NUMBER_OF_PLAYERS;\n\n        if self.current_player == 0 {\n            self._finish_round();\n        }\n    }\n\n    fn _finish_round(&mut self) {\n        let round_offset = self.current_round * NUMBER_OF_PLAYERS;\n        self.current_round += 1;\n\n        let mut winner_index = 0;\n        let mut winner_strength = 0;\n        let mut round_points = 0;\n\n        for i in 0..NUMBER_OF_PLAYERS {\n            let card = self.rounds_cards[round_offset + i];\n            round_points += (card.points as u64);\n            if card.strength > winner_strength {\n                winner_strength = card.strength;\n                winner_index = i;\n            }\n        }\n\n        self.players[winner_index].points += round_points;\n        if self.current_round == NUMBER_OF_CARDS_DECK {\n            self.finished = true;\n        }\n    }\n}\n"},"38":{"path":"std/option.nr","source":"use crate::hash::{Hash, Hasher};\nuse crate::cmp::{Ordering, Ord, Eq};\nuse crate::default::Default;\n\nstruct Option<T> {\n    _is_some: bool,\n    _value: T,\n}\n\nimpl<T> Option<T> {\n    /// Constructs a None value\n    pub fn none() -> Self {\n        Self { _is_some: false, _value: crate::unsafe::zeroed() }\n    }\n\n    /// Constructs a Some wrapper around the given value\n    pub fn some(_value: T) -> Self {\n        Self { _is_some: true, _value }\n    }\n\n    /// True if this Option is None\n    pub fn is_none(self) -> bool {\n        !self._is_some\n    }\n\n    /// True if this Option is Some\n    pub fn is_some(self) -> bool {\n        self._is_some\n    }\n\n    /// Asserts `self.is_some()` and returns the wrapped value.\n    pub fn unwrap(self) -> T {\n        assert(self._is_some);\n        self._value\n    }\n\n    /// Returns the inner value without asserting `self.is_some()`\n    /// Note that if `self` is `None`, there is no guarantee what value will be returned,\n    /// only that it will be of type `T`.\n    pub fn unwrap_unchecked(self) -> T {\n        self._value\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, returns the given default value.\n    pub fn unwrap_or(self, default: T) -> T {\n        if self._is_some { self._value } else { default }\n    }\n\n    /// Returns the wrapped value if `self.is_some()`. Otherwise, calls the given function to return\n    /// a default value.\n    pub fn unwrap_or_else<Env>(self, default: fn[Env]() -> T) -> T {\n        if self._is_some {\n            self._value\n        } else {\n            default()\n        }\n    }\n\n    /// Asserts `self.is_some()` with a provided custom message and returns the contained `Some` value\n    fn expect<let N: u32, MessageTypes>(self, message: fmtstr<N, MessageTypes>) -> T {\n        assert(self.is_some(), message);\n        self._value\n    }\n\n    /// If self is `Some(x)`, this returns `Some(f(x))`. Otherwise, this returns `None`.\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> Option<U> {\n        if self._is_some {\n            Option::some(f(self._value))\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns the given default value.\n    pub fn map_or<U, Env>(self, default: U, f: fn[Env](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default\n        }\n    }\n\n    /// If self is `Some(x)`, this returns `f(x)`. Otherwise, this returns `default()`.\n    pub fn map_or_else<U, Env1, Env2>(self, default: fn[Env1]() -> U, f: fn[Env2](T) -> U) -> U {\n        if self._is_some {\n            f(self._value)\n        } else {\n            default()\n        }\n    }\n\n    /// Returns None if self is None. Otherwise, this returns `other`.\n    pub fn and(self, other: Self) -> Self {\n        if self.is_none() {\n            Option::none()\n        } else {\n            other\n        }\n    }\n\n    /// If self is None, this returns None. Otherwise, this calls the given function\n    /// with the Some value contained within self, and returns the result of that call.\n    ///\n    /// In some languages this function is called `flat_map` or `bind`.\n    pub fn and_then<U, Env>(self, f: fn[Env](T) -> Option<U>) -> Option<U> {\n        if self._is_some {\n            f(self._value)\n        } else {\n            Option::none()\n        }\n    }\n\n    /// If self is Some, return self. Otherwise, return `other`.\n    pub fn or(self, other: Self) -> Self {\n        if self._is_some { self } else { other }\n    }\n\n    /// If self is Some, return self. Otherwise, return `default()`.\n    pub fn or_else<U, Env>(self, default: fn[Env]() -> Self) -> Self {\n        if self._is_some { self } else { default() }\n    }\n\n    // If only one of the two Options is Some, return that option.\n    // Otherwise, if both options are Some or both are None, None is returned.\n    pub fn xor(self, other: Self) -> Self {\n        if self._is_some {\n            if other._is_some { Option::none() } else { self }\n        } else if other._is_some {\n            other\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Returns `Some(x)` if self is `Some(x)` and `predicate(x)` is true.\n    /// Otherwise, this returns `None`\n    pub fn filter<Env>(self, predicate: fn[Env](T) -> bool) -> Self {\n        if self._is_some {\n            if predicate(self._value) {\n                self\n            } else {\n                Option::none()\n            }\n        } else {\n            Option::none()\n        }\n    }\n\n    /// Flattens an Option<Option<T>> into a Option<T>.\n    /// This returns None if the outer Option is None. Otherwise, this returns the inner Option.\n    pub fn flatten(option: Option<Option<T>>) -> Option<T> {\n        if option._is_some {\n            option._value\n        } else {\n            Option::none()\n        }\n    }\n}\n\nimpl<T> Default for Option<T> {\n    fn default() -> Self {\n        Option::none()\n    }\n}\n\nimpl<T> Eq for Option<T> where T: Eq {\n    fn eq(self, other: Self) -> bool {\n        if self._is_some == other._is_some {\n            if self._is_some {\n                self._value == other._value\n            } else {\n                true\n            }\n        } else {\n            false\n        }\n    }\n}\n\nimpl<T> Hash for Option<T> where T: Hash {\n    fn hash<H>(self, state: &mut H) where H: Hasher {\n        self._is_some.hash(state);\n        if self._is_some {\n            self._value.hash(state);\n        }\n    }\n}\n\n// For this impl we're declaring Option::none < Option::some\nimpl<T> Ord for Option<T> where T: Ord {\n    fn cmp(self, other: Self) -> Ordering {\n        if self._is_some {\n            if other._is_some {\n                self._value.cmp(other._value)\n            } else {\n                Ordering::greater()\n            }\n        } else {\n            if other._is_some {\n                Ordering::less()\n            } else {\n                Ordering::equal()\n            }\n        }\n    }\n}\n"},"4":{"path":"std/cmp.nr","source":"// docs:start:eq-trait\ntrait Eq {\n    fn eq(self, other: Self) -> bool;\n}\n// docs:end:eq-trait\n\nimpl Eq for Field { fn eq(self, other: Field) -> bool { self == other } }\n\nimpl Eq for u64 { fn eq(self, other: u64) -> bool { self == other } }\nimpl Eq for u32 { fn eq(self, other: u32) -> bool { self == other } }\nimpl Eq for u8 { fn eq(self, other: u8) -> bool { self == other } }\nimpl Eq for u1 { fn eq(self, other: u1) -> bool { self == other } }\n\nimpl Eq for i8 { fn eq(self, other: i8) -> bool { self == other } }\nimpl Eq for i32 { fn eq(self, other: i32) -> bool { self == other } }\nimpl Eq for i64 { fn eq(self, other: i64) -> bool { self == other } }\n\nimpl Eq for () { fn eq(_self: Self, _other: ()) -> bool { true } }\nimpl Eq for bool { fn eq(self, other: bool) -> bool { self == other } }\n\nimpl<T, let N: u32> Eq for [T; N] where T: Eq {\n    fn eq(self, other: [T; N]) -> bool {\n        let mut result = true;\n        for i in 0 .. self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<T> Eq for [T] where T: Eq {\n    fn eq(self, other: [T]) -> bool {\n        let mut result = self.len() == other.len();\n        for i in 0 .. self.len() {\n            result &= self[i].eq(other[i]);\n        }\n        result\n    }\n}\n\nimpl<let N: u32> Eq for str<N> {\n    fn eq(self, other: str<N>) -> bool {\n        let self_bytes = self.as_bytes();\n        let other_bytes = other.as_bytes();\n        self_bytes == other_bytes\n    }\n}\n\nimpl<A, B> Eq for (A, B) where A: Eq, B: Eq {\n    fn eq(self, other: (A, B)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1)\n    }\n}\n\nimpl<A, B, C> Eq for (A, B, C) where A: Eq, B: Eq, C: Eq {\n    fn eq(self, other: (A, B, C)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2)\n    }\n}\n\nimpl<A, B, C, D> Eq for (A, B, C, D) where A: Eq, B: Eq, C: Eq, D: Eq {\n    fn eq(self, other: (A, B, C, D)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3)\n    }\n}\n\nimpl<A, B, C, D, E> Eq for (A, B, C, D, E) where A: Eq, B: Eq, C: Eq, D: Eq, E: Eq {\n    fn eq(self, other: (A, B, C, D, E)) -> bool {\n        self.0.eq(other.0) & self.1.eq(other.1) & self.2.eq(other.2) & self.3.eq(other.3) & self.4.eq(other.4)\n    }\n}\n\nimpl Eq for Ordering {\n    fn eq(self, other: Ordering) -> bool {\n        self.result == other.result\n    }\n}\n\n// Noir doesn't have enums yet so we emulate (Lt | Eq | Gt) with a struct\n// that has 3 public functions for constructing the struct.\nstruct Ordering {\n    result: Field,\n}\n\nimpl Ordering {\n    // Implementation note: 0, 1, and 2 for Lt, Eq, and Gt are built\n    // into the compiler, do not change these without also updating\n    // the compiler itself!\n    pub fn less() -> Ordering {\n        Ordering { result: 0 }\n    }\n\n    pub fn equal() -> Ordering {\n        Ordering { result: 1 }\n    }\n\n    pub fn greater() -> Ordering {\n        Ordering { result: 2 }\n    }\n}\n\n// docs:start:ord-trait\ntrait Ord {\n    fn cmp(self, other: Self) -> Ordering;\n}\n// docs:end:ord-trait\n\n// Note: Field deliberately does not implement Ord\n\nimpl Ord for u64 {\n    fn cmp(self, other: u64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u32 {\n    fn cmp(self, other: u32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for u8 {\n    fn cmp(self, other: u8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i8 {\n    fn cmp(self, other: i8) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i32 {\n    fn cmp(self, other: i32) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for i64 {\n    fn cmp(self, other: i64) -> Ordering {\n        if self < other {\n            Ordering::less()\n        } else if self > other {\n            Ordering::greater()\n        } else {\n            Ordering::equal()\n        }\n    }\n}\n\nimpl Ord for () {\n    fn cmp(_self: Self, _other: ()) -> Ordering {\n        Ordering::equal()\n    }\n}\n\nimpl Ord for bool {\n    fn cmp(self, other: bool) -> Ordering {\n        if self {\n            if other {\n                Ordering::equal()\n            } else {\n                Ordering::greater()\n            }\n        } else {\n            if other {\n                Ordering::less()\n            } else {\n                Ordering::equal()\n            }\n        }\n    }\n}\n\nimpl<T, let N: u32> Ord for [T; N] where T: Ord {\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T; N]) -> Ordering {\n        let mut result = Ordering::equal();\n        for i in 0 .. self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<T> Ord for [T] where T: Ord {\n    // The first non-equal element of both arrays determines\n    // the ordering for the whole array.\n    fn cmp(self, other: [T]) -> Ordering {\n        let mut result = self.len().cmp(other.len());\n        for i in 0 .. self.len() {\n            if result == Ordering::equal() {\n                let result_i = self[i].cmp(other[i]);\n\n                if result_i == Ordering::less() {\n                    result = result_i;\n                } else if result_i == Ordering::greater() {\n                    result = result_i;\n                }\n            }\n        }\n        result\n    }\n}\n\nimpl<A, B> Ord for (A, B) where A: Ord, B: Ord {\n    fn cmp(self, other: (A, B)) -> Ordering {\n        let result = self.0.cmp(other.0);\n\n        if result != Ordering::equal() {\n            result\n        } else {\n            self.1.cmp(other.1)\n        }\n    }\n}\n\nimpl<A, B, C> Ord for (A, B, C) where A: Ord, B: Ord, C: Ord {\n    fn cmp(self, other: (A, B, C)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D> Ord for (A, B, C, D) where A: Ord, B: Ord, C: Ord, D: Ord {\n    fn cmp(self, other: (A, B, C, D)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        result\n    }\n}\n\nimpl<A, B, C, D, E> Ord for (A, B, C, D, E) where A: Ord, B: Ord, C: Ord, D: Ord, E: Ord {\n    fn cmp(self, other: (A, B, C, D, E)) -> Ordering {\n        let mut result = self.0.cmp(other.0);\n\n        if result == Ordering::equal() {\n            result = self.1.cmp(other.1);\n        }\n\n        if result == Ordering::equal() {\n            result = self.2.cmp(other.2);\n        }\n\n        if result == Ordering::equal() {\n            result = self.3.cmp(other.3);\n        }\n\n        if result == Ordering::equal() {\n            result = self.4.cmp(other.4);\n        }\n\n        result\n    }\n}\n\n// Compares and returns the maximum of two values.\n//\n// Returns the second argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::max(1, 2), 2);\n// assert_eq(cmp::max(2, 2), 2);\n// ```\npub fn max<T>(v1: T, v2: T) -> T where T: Ord {\n    if v1 > v2 { v1 } else { v2 }\n}\n\n// Compares and returns the minimum of two values.\n//\n// Returns the first argument if the comparison determines them to be equal.\n//\n// # Examples\n//\n// ```\n// use std::cmp;\n//\n// assert_eq(cmp::min(1, 2), 1);\n// assert_eq(cmp::min(2, 2), 2);\n// ```\npub fn min<T>(v1: T, v2: T) -> T where T: Ord {\n    if v1 > v2 { v2 } else { v1 }\n}\n\nmod cmp_tests {\n    use crate::cmp::{min, max};\n\n    #[test]\n    fn sanity_check_min() {\n        assert_eq(min(0 as u64, 1 as u64), 0);\n        assert_eq(min(0 as u64, 0 as u64), 0);\n        assert_eq(min(1 as u64, 1 as u64), 1);\n        assert_eq(min(255 as u8, 0 as u8), 0);\n    }\n\n    #[test]\n    fn sanity_check_max() {\n        assert_eq(max(0 as u64, 1 as u64), 1);\n        assert_eq(max(0 as u64, 0 as u64), 0);\n        assert_eq(max(1 as u64, 1 as u64), 1);\n        assert_eq(max(255 as u8, 0 as u8), 255);\n    }\n}\n"},"47":{"path":"std/uint128.nr","source":"use crate::ops::{Add, Sub, Mul, Div, Rem, Not, BitOr, BitAnd, BitXor, Shl, Shr};\nuse crate::cmp::{Eq, Ord, Ordering};\nuse crate::println;\n\nglobal pow64 : Field = 18446744073709551616; //2^64;\nglobal pow63 : Field = 9223372036854775808; // 2^63;\nstruct U128 {\n    lo: Field,\n    hi: Field,\n}\n\nimpl U128 {\n\n    pub fn from_u64s_le(lo: u64, hi: u64) -> U128 {\n        // in order to handle multiplication, we need to represent the product of two u64 without overflow\n        assert(crate::field::modulus_num_bits() as u32 > 128);\n        U128 { lo: lo as Field, hi: hi as Field }\n    }\n\n    pub fn from_u64s_be(hi: u64, lo: u64) -> U128 {\n        U128::from_u64s_le(lo, hi)\n    }\n\n    pub fn zero() -> U128 {\n        U128 { lo: 0, hi: 0 }\n    }\n\n    pub fn one() -> U128 {\n        U128 { lo: 1, hi: 0 }\n    }\n    pub fn from_le_bytes(bytes: [u8; 16]) -> U128 {\n        let mut lo = 0;\n        let mut base = 1;\n        for i in 0..8 {\n            lo += (bytes[i] as Field)*base;\n            base *= 256;\n        }\n        let mut hi = 0;\n        base = 1;\n        for i in 8..16 {\n            hi += (bytes[i] as Field)*base;\n            base *= 256;\n        }\n        U128 { lo, hi }\n    }\n\n    pub fn to_be_bytes(self: Self) -> [u8; 16] {\n        let lo = self.lo.to_be_bytes(8);\n        let hi = self.hi.to_be_bytes(8);\n        let mut bytes = [0; 16];\n        for i in 0..8 {\n            bytes[i] = hi[i];\n            bytes[i+8] = lo[i];\n        }\n        bytes\n    }\n\n    pub fn to_le_bytes(self: Self) -> [u8; 16] {\n        let lo = self.lo.to_le_bytes(8);\n        let hi = self.hi.to_le_bytes(8);\n        let mut bytes = [0; 16];\n        for i in 0..8 {\n            bytes[i] = lo[i];\n            bytes[i+8] = hi[i];\n        }\n        bytes\n    }\n\n    pub fn from_hex<let N: u32>(hex: str<N>) -> U128 {\n        let N = N as u32;\n        let bytes = hex.as_bytes();\n        // string must starts with \"0x\"\n        assert((bytes[0] == 48) & (bytes[1] == 120), \"Invalid hexadecimal string\");\n        assert(N < 35, \"Input does not fit into a U128\");\n\n        let mut lo = 0;\n        let mut hi = 0;\n        let mut base = 1;\n        if N <= 18 {\n            for i in 0..N - 2 {\n                lo += U128::decode_ascii(bytes[N-i-1])*base;\n                base = base*16;\n            }\n        } else {\n            for i in 0..16 {\n                lo += U128::decode_ascii(bytes[N-i-1])*base;\n                base = base*16;\n            }\n            base = 1;\n            for i in 17..N - 1 {\n                hi += U128::decode_ascii(bytes[N-i])*base;\n                base = base*16;\n            }\n        }\n        U128 { lo: lo as Field, hi: hi as Field }\n    }\n\n    unconstrained fn uconstrained_check_is_upper_ascii(ascii: u8) -> bool {\n        ((ascii >= 65) & (ascii <= 90)) // Between 'A' and 'Z'\n    }\n\n    fn decode_ascii(ascii: u8) -> Field {\n        if ascii < 58 {\n            ascii - 48\n        } else {\n            let ascii = ascii + 32 * (U128::uconstrained_check_is_upper_ascii(ascii) as u8);\n            assert(ascii >= 97); // enforce >= 'a'\n            assert(ascii <= 102); // enforce <= 'f'\n            ascii - 87\n        } as Field\n    }\n\n    // TODO: Replace with a faster version. \n    // A circuit that uses this function can be slow to compute\n    // (we're doing up to 127 calls to compute the quotient)\n    unconstrained fn unconstrained_div(self: Self, b: U128) -> (U128, U128) {\n        if b == U128::zero() {\n            // Return 0,0 to avoid eternal loop\n            (U128::zero(), U128::zero())\n        } else if self < b {\n            (U128::zero(), self)\n        } else if self == b {\n            (U128::one(), U128::zero())\n        } else {\n            let (q,r) = if b.hi as u64 >= pow63 as u64 {\n                // The result of multiplication by 2 would overflow\n                (U128::zero(), self)\n            } else {\n                self.unconstrained_div(b * U128::from_u64s_le(2, 0))\n            };\n            let q_mul_2 = q * U128::from_u64s_le(2, 0);\n            if r < b {\n                (q_mul_2, r)\n            } else {\n                (q_mul_2 + U128::one(), r - b)\n            }\n        }\n    }\n\n    pub fn from_integer<T>(i: T) -> U128 {\n        let f = crate::as_field(i);\n        // Reject values which would overflow a u128\n        f.assert_max_bit_size(128);\n        let lo = f as u64 as Field;\n        let hi = (f - lo) / pow64;\n        U128 { lo, hi }\n    }\n\n    pub fn to_integer<T>(self) -> T {\n        crate::from_field(self.lo + self.hi * pow64)\n    }\n\n    fn wrapping_mul(self: Self, b: U128) -> U128 {\n        let low = self.lo * b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = self.lo * b.hi + self.hi * b.lo + carry;\n        let hi = high as u64 as Field;\n        U128 { lo, hi }\n    }\n}\n\nimpl Add for U128 {\n    fn add(self: Self, b: U128) -> U128 {\n        let low = self.lo + b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;  \n        let high = self.hi + b.hi + carry;\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to add with overflow\");\n        U128 {\n            lo,\n            hi,\n        }\n    }\n}\n\nimpl Sub for U128 {\n    fn sub(self: Self, b: U128) -> U128 {\n        let low = pow64 + self.lo - b.lo;\n        let lo = low as u64 as Field;\n        let borrow = (low == lo) as Field;\n        let high = self.hi - b.hi - borrow;\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to subtract with underflow\");\n        U128 {\n            lo,\n            hi,\n        }\n    }\n}\n\nimpl Mul for U128 {\n    fn mul(self: Self, b: U128) -> U128 {\n        assert(self.hi*b.hi == 0, \"attempt to multiply with overflow\");\n        let low = self.lo*b.lo;\n        let lo = low as u64 as Field;\n        let carry = (low - lo) / pow64;\n        let high = if crate::field::modulus_num_bits() as u32 > 196 {\n            (self.lo+self.hi)*(b.lo+b.hi) - low + carry\n        } else {\n            self.lo*b.hi + self.hi*b.lo + carry\n        };\n        let hi = high as u64 as Field;\n        assert(hi == high, \"attempt to multiply with overflow\");\n        U128 {\n            lo,\n            hi,\n        }\n    }\n}\n\nimpl Div for U128 {\n    fn div(self: Self, b: U128) -> U128 {\n        let (q,r) = self.unconstrained_div(b);\n        let a = b * q + r;\n        assert_eq(self, a);\n        assert(r < b);\n        q\n    }\n}\n\nimpl Rem for U128 {\n    fn rem(self: Self, b: U128) -> U128 {\n        let (q,r) = self.unconstrained_div(b);\n        let a = b * q + r;\n        assert_eq(self, a);\n        assert(r < b);\n        r\n    }\n}\n\nimpl Eq for U128 {\n    fn eq(self: Self, b: U128) -> bool {\n        (self.lo == b.lo) & (self.hi == b.hi)\n    }\n}\n\nimpl Ord for U128 {\n    fn cmp(self, other: Self) -> Ordering {\n        let hi_ordering = (self.hi as u64).cmp((other.hi as u64));\n        let lo_ordering = (self.lo as u64).cmp((other.lo as u64));\n        \n        if hi_ordering == Ordering::equal() {\n            lo_ordering\n        } else {\n            hi_ordering\n        }\n    }\n}\n\nimpl Not for U128 { \n    fn not(self) -> U128 {\n        U128 {\n            lo: (!(self.lo as u64)) as Field,\n            hi: (!(self.hi as u64)) as Field\n        }\n    }\n}\n\nimpl BitOr for U128 { \n    fn bitor(self, other: U128) -> U128 {\n        U128 {\n            lo: ((self.lo as u64) | (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) | (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl BitAnd for U128 {\n    fn bitand(self, other: U128) -> U128 { \n        U128 {\n            lo: ((self.lo as u64) & (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) & (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl BitXor for U128 {\n    fn bitxor(self, other: U128) -> U128 { \n        U128 {\n            lo: ((self.lo as u64) ^ (other.lo as u64)) as Field,\n            hi: ((self.hi as u64) ^ (other.hi as u64)) as Field\n        }\n    }\n}\n\nimpl Shl for U128 { \n    fn shl(self, other: u8) -> U128 { \n        assert(other < 128, \"attempt to shift left with overflow\");\n        let exp_bits = (other as Field).to_be_bits(7);\n\n        let mut r: Field = 2;\n        let mut y: Field = 1;\n        for i in 1..8 {\n            y = (exp_bits[7-i] as Field) * (r * y) + (1 - exp_bits[7-i] as Field) * y;\n            r *= r;\n        }\n        self.wrapping_mul(U128::from_integer(y))\n    } \n}\n\nimpl Shr for U128 { \n    fn shr(self, other: u8) -> U128 { \n        assert(other < 128, \"attempt to shift right with overflow\");\n        let exp_bits = (other as Field).to_be_bits(7);\n\n        let mut r: Field = 2;\n        let mut y: Field = 1;\n        for i in 1..8 {\n            y = (exp_bits[7-i] as Field) * (r * y) + (1 - exp_bits[7-i] as Field) * y;\n            r *= r;\n        }\n        self / U128::from_integer(y)\n    } \n}\n\nmod tests {\n    use crate::uint128::{U128, pow64, pow63};\n\n    #[test]\n    fn test_not(lo: u64, hi: u64) {\n        let num = U128::from_u64s_le(lo, hi);\n        let not_num = num.not();\n\n        assert_eq(not_num.hi, (hi.not() as Field));\n        assert_eq(not_num.lo, (lo.not() as Field));\n\n        let not_not_num = not_num.not();\n        assert_eq(num, not_not_num);\n    }\n    #[test]\n    fn test_construction() {\n        // Check little-endian u64 is inversed with big-endian u64 construction\n        let a = U128::from_u64s_le(2, 1);\n        let b = U128::from_u64s_be(1, 2);\n        assert_eq(a, b);\n        // Check byte construction is equivalent\n        let c = U128::from_le_bytes([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]);\n        let d = U128::from_u64s_le(0x0706050403020100, 0x0f0e0d0c0b0a0908);\n        assert_eq(c, d);\n    }\n    #[test]\n    fn test_byte_decomposition() {\n        let a = U128::from_u64s_le(0x0706050403020100, 0x0f0e0d0c0b0a0908);\n        // Get big-endian and little-endian byte decompostions\n        let le_bytes_a= a.to_le_bytes();\n        let be_bytes_a= a.to_be_bytes();\n\n        // Check equivalence\n        for i in 0..16 {\n            assert_eq(le_bytes_a[i], be_bytes_a[15 - i]);\n        }\n        // Reconstruct U128 from byte decomposition\n        let b= U128::from_le_bytes(le_bytes_a);\n        // Check that it's the same element\n        assert_eq(a, b);\n    }\n    #[test]\n    fn test_hex_constuction() {\n        let a = U128::from_u64s_le(0x1, 0x2);\n        let b = U128::from_hex(\"0x20000000000000001\");\n        assert_eq(a, b);\n\n        let c= U128::from_hex(\"0xffffffffffffffffffffffffffffffff\");\n        let d= U128::from_u64s_le(0xffffffffffffffff, 0xffffffffffffffff);\n        assert_eq(c, d);\n\n        let e= U128::from_hex(\"0x00000000000000000000000000000000\");\n        let f= U128::from_u64s_le(0, 0);\n        assert_eq(e, f);\n    }\n\n    // Ascii decode tests\n\n    #[test]\n    fn test_ascii_decode_correct_range() {\n        // '0'..'9' range\n        for i in 0..10 {\n            let decoded= U128::decode_ascii(48 + i);\n            assert_eq(decoded, i as Field);\n        }\n        // 'A'..'F' range\n        for i in 0..6 {\n            let decoded = U128::decode_ascii(65 + i);\n            assert_eq(decoded, (i + 10) as Field);\n        }\n        // 'a'..'f' range\n        for i in 0..6 {\n            let decoded = U128::decode_ascii(97 + i);\n            assert_eq(decoded, (i + 10) as Field);\n        }\n    }\n\n    #[test(should_fail)]\n    fn test_ascii_decode_range_less_than_48_fails_0() {\n        crate::println(U128::decode_ascii(0));\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_less_than_48_fails_1() {\n        crate::println(U128::decode_ascii(47));\n    }\n\n    #[test(should_fail)]\n    fn test_ascii_decode_range_58_64_fails_0() {\n        let _ = U128::decode_ascii(58);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_58_64_fails_1() {\n        let _ = U128::decode_ascii(64);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_71_96_fails_0() {\n        let _ = U128::decode_ascii(71);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_71_96_fails_1() {\n        let _ = U128::decode_ascii(96);\n    }\n    #[test(should_fail)]\n    fn test_ascii_decode_range_greater_than_102_fails() {\n        let _ = U128::decode_ascii(103);\n    }\n\n    #[test(should_fail)]\n    fn test_ascii_decode_regression() {\n        // This code will actually fail because of ascii_decode,\n        // but in the past it was possible to create a value > (1<<128)\n        let a = U128::from_hex(\"0x~fffffffffffffffffffffffffffffff\");\n        let b:Field= a.to_integer();\n        let c= b.to_le_bytes(17);\n        assert(c[16] != 0);\n    }\n\n    #[test]\n    fn test_unconstrained_div() {\n        // Test the potential overflow case\n        let a= U128::from_u64s_le(0x0, 0xffffffffffffffff);\n        let b= U128::from_u64s_le(0x0, 0xfffffffffffffffe);\n        let c= U128::one();\n        let d= U128::from_u64s_le(0x0, 0x1);\n        let (q,r) = a.unconstrained_div(b);\n        assert_eq(q, c);\n        assert_eq(r, d);\n\n        let a = U128::from_u64s_le(2, 0);\n        let b = U128::one();\n        // Check the case where a is a multiple of b\n        let (c,d ) = a.unconstrained_div(b);\n        assert_eq((c, d), (a, U128::zero()));\n\n        // Check where b is a multiple of a\n        let (c,d) = b.unconstrained_div(a);\n        assert_eq((c, d), (U128::zero(), b));\n\n        // Dividing by zero returns 0,0\n        let a = U128::from_u64s_le(0x1, 0x0);\n        let b = U128::zero();\n        let (c,d)= a.unconstrained_div(b);\n        assert_eq((c, d), (U128::zero(), U128::zero()));\n\n        // Dividing 1<<127 by 1<<127 (special case)\n        let a = U128::from_u64s_le(0x0, pow63 as u64);\n        let b = U128::from_u64s_le(0x0, pow63 as u64);\n        let (c,d )= a.unconstrained_div(b);\n        assert_eq((c, d), (U128::one(), U128::zero()));\n    }\n\n    #[test]\n    fn integer_conversions() {\n        // Maximum\n        let start:Field = 0xffffffffffffffffffffffffffffffff;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n\n        // Minimum\n        let start:Field = 0x0;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n\n        // Low limb\n        let start:Field = 0xffffffffffffffff;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n\n        // High limb\n        let start:Field = 0xffffffffffffffff0000000000000000;\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n    }\n\n    #[test]\n    fn integer_conversions_fuzz(lo: u64, hi: u64) {\n        let start: Field = (lo as Field) + pow64 * (hi as Field);\n        let a = U128::from_integer(start);\n        let end = a.to_integer();\n        assert_eq(start, end);\n    }\n\n    #[test]\n    fn test_wrapping_mul() {\n        // 1*0==0\n        assert_eq(U128::zero(), U128::zero().wrapping_mul(U128::one()));\n\n        // 0*1==0\n        assert_eq(U128::zero(), U128::one().wrapping_mul(U128::zero()));\n\n        // 1*1==1\n        assert_eq(U128::one(), U128::one().wrapping_mul(U128::one()));\n\n        // 0 * ( 1 << 64 ) ==  0\n        assert_eq(U128::zero(), U128::zero().wrapping_mul(U128::from_u64s_le(0, 1)));\n\n        // ( 1 << 64 ) * 0 == 0\n        assert_eq(U128::zero(), U128::from_u64s_le(0, 1).wrapping_mul(U128::zero()));\n\n        // 1 * ( 1 << 64 ) == 1 << 64\n        assert_eq(U128::from_u64s_le(0, 1), U128::from_u64s_le(0, 1).wrapping_mul(U128::one()));\n\n        // ( 1 << 64 ) * 1 == 1 << 64\n        assert_eq(U128::from_u64s_le(0, 1), U128::one().wrapping_mul(U128::from_u64s_le(0, 1)));\n\n        // ( 1 << 64 ) * ( 1 << 64 ) == 1 << 64\n        assert_eq(U128::zero(), U128::from_u64s_le(0, 1).wrapping_mul(U128::from_u64s_le(0, 1)));\n        // -1 * -1 == 1\n        assert_eq(\n            U128::one(), U128::from_u64s_le(0xffffffffffffffff, 0xffffffffffffffff).wrapping_mul(U128::from_u64s_le(0xffffffffffffffff, 0xffffffffffffffff))\n        );\n    }\n}\n"},"5":{"path":"std/collections/bounded_vec.nr","source":"use crate::{cmp::Eq, convert::From};\n\nstruct BoundedVec<T, let MaxLen: u32> {\n    storage: [T; MaxLen],\n    len: u32,\n}\n\nimpl<T, let MaxLen: u32> BoundedVec<T, MaxLen> {\n    pub fn new() -> Self {\n        let zeroed = crate::unsafe::zeroed();\n        BoundedVec { storage: [zeroed; MaxLen], len: 0 }\n    }\n\n    /// Get an element from the vector at the given index.\n    /// Panics if the given index points beyond the end of the vector (`self.len()`).\n    pub fn get(self, index: u32) -> T {\n        assert(index < self.len);\n        self.get_unchecked(index)\n    }\n\n    /// Get an element from the vector at the given index.\n    /// Responds with undefined data for `index` where `self.len < index < self.max_len()`.\n    pub fn get_unchecked(self, index: u32) -> T {\n        self.storage[index]\n    }\n\n    /// Write an element to the vector at the given index.\n    /// Panics if the given index points beyond the end of the vector (`self.len()`).\n    pub fn set(&mut self, index: u32, value: T) {\n        assert(index < self.len, \"Attempted to write past end of BoundedVec\");\n        self.set_unchecked(index, value)\n    }\n\n    /// Write an element to the vector at the given index.\n    /// Does not check whether the passed `index` is a valid index within the vector.\n    ///\n    /// Silently writes past the end of the vector for `index` where `self.len < index < self.max_len()`\n    /// Panics if the given index points beyond the maximum length of the vector (`self.max_len()`).\n    pub fn set_unchecked(&mut self, index: u32, value: T) {\n        self.storage[index] = value;\n    }\n\n    pub fn push(&mut self, elem: T) {\n        assert(self.len < MaxLen, \"push out of bounds\");\n\n        self.storage[self.len] = elem;\n        self.len += 1;\n    }\n\n    pub fn len(self) -> u32 {\n        self.len\n    }\n\n    pub fn max_len(_self: BoundedVec<T, MaxLen>) -> u32 {\n        MaxLen\n    }\n\n    // This is a intermediate method, while we don't have an\n    // .extend method\n    pub fn storage(self) -> [T; MaxLen] {\n        self.storage\n    }\n\n    pub fn extend_from_array<let Len: u32>(&mut self, array: [T; Len]) {\n        let new_len = self.len + array.len();\n        assert(new_len <= MaxLen, \"extend_from_array out of bounds\");\n        for i in 0..array.len() {\n            self.storage[self.len + i] = array[i];\n        }\n        self.len = new_len;\n    }\n\n    pub fn extend_from_slice(&mut self, slice: [T]) {\n        let new_len = self.len + slice.len();\n        assert(new_len <= MaxLen, \"extend_from_slice out of bounds\");\n        for i in 0..slice.len() {\n            self.storage[self.len + i] = slice[i];\n        }\n        self.len = new_len;\n    }\n\n    pub fn extend_from_bounded_vec<let Len: u32>(&mut self, vec: BoundedVec<T, Len>) {\n        let append_len = vec.len();\n        let new_len = self.len + append_len;\n        assert(new_len <= MaxLen, \"extend_from_bounded_vec out of bounds\");\n\n        let mut exceeded_len = false;\n        for i in 0..Len {\n            exceeded_len |= i == append_len;\n            if !exceeded_len {\n                self.storage[self.len + i] = vec.get_unchecked(i);\n            }\n        }\n        self.len = new_len;\n    }\n\n    pub fn from_array<let Len: u32>(array: [T; Len]) -> Self {\n        assert(Len <= MaxLen, \"from array out of bounds\");\n        let mut vec: BoundedVec<T, MaxLen> = BoundedVec::new();\n        vec.extend_from_array(array);\n        vec\n    }\n\n    pub fn pop(&mut self) -> T {\n        assert(self.len > 0);\n        self.len -= 1;\n\n        let elem = self.storage[self.len];\n        self.storage[self.len] = crate::unsafe::zeroed();\n        elem\n    }\n\n    pub fn any<Env>(self, predicate: fn[Env](T) -> bool) -> bool {\n        let mut ret = false;\n        let mut exceeded_len = false;\n        for i in 0..MaxLen {\n            exceeded_len |= i == self.len;\n            if !exceeded_len {\n                ret |= predicate(self.storage[i]);\n            }\n        }\n        ret\n    }\n\n    pub fn map<U, Env>(self, f: fn[Env](T) -> U) -> BoundedVec<U, MaxLen> {\n        let mut ret = BoundedVec::new();\n        ret.len = self.len();\n        for i in 0..MaxLen {\n            if i < self.len() {\n                ret.storage[i] = f(self.get_unchecked(i));\n            }\n        }\n        ret\n    }\n}\n\nimpl<T, let MaxLen: u32> Eq for BoundedVec<T, MaxLen> where T: Eq {\n    fn eq(self, other: BoundedVec<T, MaxLen>) -> bool {\n        // TODO: https://github.com/noir-lang/noir/issues/4837\n        //\n        // We make the assumption that the user has used the proper interface for working with `BoundedVec`s\n        // rather than directly manipulating the internal fields as this can result in an inconsistent internal state.\n        \n        (self.len == other.len) & (self.storage == other.storage)\n    }\n}\n\nimpl<T, let MaxLen: u32, let Len: u32> From<[T; Len]> for BoundedVec<T, MaxLen> {\n    fn from(array: [T; Len]) -> BoundedVec<T, MaxLen>  {\n        BoundedVec::from_array(array)\n    }\n}\n\nmod bounded_vec_tests {\n    // TODO: Allow imports from \"super\"\n    use crate::collections::bounded_vec::BoundedVec;\n\n    #[test]\n    fn empty_equality() {\n        let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n        let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n\n        assert_eq(bounded_vec1, bounded_vec2);\n    }\n\n    #[test]\n    fn inequality() {\n        let mut bounded_vec1: BoundedVec<Field, 3> = BoundedVec::new();\n        let mut bounded_vec2: BoundedVec<Field, 3> = BoundedVec::new();\n        bounded_vec1.push(1);\n        bounded_vec2.push(2);\n\n        assert(bounded_vec1 != bounded_vec2);\n    }\n\n    mod set {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn set_updates_values_properly() {\n            let mut vec = BoundedVec::from_array([0, 0, 0, 0, 0]);\n\n            vec.set(0, 42);\n            assert_eq(vec.storage, [42, 0, 0, 0, 0]);\n\n            vec.set(1, 43);\n            assert_eq(vec.storage, [42, 43, 0, 0, 0]);\n\n            vec.set(2, 44);\n            assert_eq(vec.storage, [42, 43, 44, 0, 0]);\n\n            vec.set(1, 10);\n            assert_eq(vec.storage, [42, 10, 44, 0, 0]);\n\n            vec.set(0, 0);\n            assert_eq(vec.storage, [0, 10, 44, 0, 0]);\n        }\n\n        #[test(should_fail_with = \"Attempted to write past end of BoundedVec\")]\n        fn panics_when_writing_elements_past_end_of_vec() {\n            let mut vec: BoundedVec<Field, 5> = BoundedVec::new();\n            vec.set(0, 42);\n\n            // Need to use println to avoid DIE removing the write operation.\n            crate::println(vec.get(0));\n        }\n    }\n\n    mod map {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn applies_function_correctly() {\n            // docs:start:bounded-vec-map-example\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| value * 2);\n            // docs:end:bounded-vec-map-example\n            let expected = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn applies_function_that_changes_return_type() {\n            let vec: BoundedVec<u32, 4> = BoundedVec::from_array([1, 2, 3, 4]);\n            let result = vec.map(|value| (value * 2)  as Field);\n            let expected: BoundedVec<Field, 4> = BoundedVec::from_array([2, 4, 6, 8]);\n\n            assert_eq(result, expected);\n        }\n\n        #[test]\n        fn does_not_apply_function_past_len() {\n            let vec: BoundedVec<u32, 3> = BoundedVec::from_array([0, 1]);\n            let result = vec.map(|value| if value == 0 { 5 } else { value });\n            let expected = BoundedVec::from_array([5, 1]);\n\n            assert_eq(result, expected);\n            assert_eq(result.storage()[2], 0);\n        }\n    }\n\n    mod from_array {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn empty() {\n            let empty_array: [Field; 0] = [];\n            let bounded_vec = BoundedVec::from_array([]);\n\n            assert_eq(bounded_vec.max_len(), 0);\n            assert_eq(bounded_vec.len(), 0);\n            assert_eq(bounded_vec.storage(), empty_array);\n        }\n\n        #[test]\n        fn equal_len() {\n            let array = [1, 2, 3];\n            let bounded_vec = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 3);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage(), array);\n        }\n\n        #[test]\n        fn max_len_greater_then_array_len() {\n            let array = [1, 2, 3];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from_array(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 3);\n            assert_eq(bounded_vec.storage()[0], 1);\n            assert_eq(bounded_vec.storage()[1], 2);\n            assert_eq(bounded_vec.storage()[2], 3);\n        }\n\n        #[test(should_fail_with=\"from array out of bounds\")]\n        fn max_len_lower_then_array_len() {\n            let _: BoundedVec<Field, 2> = BoundedVec::from_array([0; 3]);\n        }\n    }\n\n    mod trait_from {\n        use crate::collections::bounded_vec::BoundedVec;\n\n        #[test]\n        fn simple() {\n            let array = [1, 2];\n            let bounded_vec: BoundedVec<Field, 10> = BoundedVec::from(array);\n\n            assert_eq(bounded_vec.max_len(), 10);\n            assert_eq(bounded_vec.len(), 2);\n            assert_eq(bounded_vec.storage()[0], 1);\n            assert_eq(bounded_vec.storage()[1], 2);\n        }\n    }\n}\n"},"64":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/keys/point_to_symmetric_key.nr","source":"use dep::protocol_types::{\n    constants::GENERATOR_INDEX__SYMMETRIC_KEY, scalar::Scalar, point::{Point, pub_key_to_bytes},\n    utils::arr_copy_slice\n};\nuse std::{hash::sha256, embedded_curve_ops::multi_scalar_mul};\n\n// TODO(#5726): This function is called deriveAESSecret in TS. I don't like point_to_symmetric_key name much since\n// point is not the only input of the function. Unify naming with TS once we have a better name.\npub fn point_to_symmetric_key(secret: Scalar, point: Point) -> [u8; 32] {\n    let shared_secret_fields = multi_scalar_mul([point], [secret]);\n    // TODO(https://github.com/AztecProtocol/aztec-packages/issues/6061): make the func return Point struct directly\n    let shared_secret = pub_key_to_bytes(Point::new(shared_secret_fields[0], shared_secret_fields[1], false));\n    let mut shared_secret_bytes_with_separator = [0 as u8; 65];\n    shared_secret_bytes_with_separator = arr_copy_slice(shared_secret, shared_secret_bytes_with_separator, 0);\n    shared_secret_bytes_with_separator[64] = GENERATOR_INDEX__SYMMETRIC_KEY;\n    sha256(shared_secret_bytes_with_separator)\n}\n\n#[test]\nfn check_point_to_symmetric_key() {\n    // Value taken from \"derive shared secret\" test in encrypt_buffer.test.ts\n    let secret = Scalar::new(\n        0x00000000000000000000000000000000649e7ca01d9de27b21624098b897babd,\n        0x0000000000000000000000000000000023b3127c127b1f29a7adff5cccf8fb06\n    );\n    let point = Point::new(\n        0x2688431c705a5ff3e6c6f2573c9e3ba1c1026d2251d0dbbf2d810aa53fd1d186,\n        0x1e96887b117afca01c00468264f4f80b5bb16d94c1808a448595f115556e5c8e,\n        false\n    );\n\n    let key = point_to_symmetric_key(secret, point);\n    // The following value gets updated when running encrypt_buffer.test.ts with AZTEC_GENERATE_TEST_DATA=1\n    let expected_key = [\n        49, 167, 146, 222, 151, 129, 138, 184, 87, 210, 245, 249, 99, 100, 1, 59, 223, 180, 5, 99, 14, 7, 177, 236, 159, 203, 231, 72, 220, 180, 241, 23\n    ];\n    assert_eq(key, expected_key);\n}\n"},"65":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/keys/getters.nr","source":"use dep::protocol_types::{\n    header::Header, abis::validation_requests::KeyValidationRequest, address::AztecAddress,\n    constants::CANONICAL_KEY_REGISTRY_ADDRESS, point::Point, storage::map::derive_storage_slot_in_map,\n    traits::is_empty\n};\nuse crate::{\n    context::PrivateContext,\n    oracle::{keys::get_public_keys_and_partial_address, key_validation_request::get_key_validation_request},\n    keys::{public_keys::PublicKeys, constants::{NULLIFIER_INDEX, INCOMING_INDEX, OUTGOING_INDEX, TAGGING_INDEX}},\n    state_vars::{shared_mutable::shared_mutable_private_getter::SharedMutablePrivateGetter}\n};\n\nglobal DELAY = 5;\n\n// docs:start:key-getters\ntrait KeyGetters {\n  fn get_npk_m(header: Header, context: &mut PrivateContext, address: AztecAddress) -> Point;\n  fn get_ivpk_m(header: Header, context: &mut PrivateContext, address: AztecAddress) -> Point;\n  fn get_ovpk_m(header: Header, context: &mut PrivateContext, address: AztecAddress) -> Point;\n  fn get_tpk_m(header: Header, context: &mut PrivateContext, address: AztecAddress) -> Point;\n  fn get_npk_m_hash(header: Header, context: &mut PrivateContext, address: AztecAddress) -> Field;\n}\n\nimpl KeyGetters for Header {\n    fn get_npk_m(self, context: &mut PrivateContext, address: AztecAddress) -> Point {\n        get_master_key(context, address, NULLIFIER_INDEX, self)\n    }\n\n    fn get_ivpk_m(self, context: &mut PrivateContext, address: AztecAddress) -> Point {\n        get_master_key(context, address, INCOMING_INDEX, self)\n    }\n\n    fn get_ovpk_m(self, context: &mut PrivateContext, address: AztecAddress) -> Point {\n        get_master_key(context, address, OUTGOING_INDEX, self)\n    }\n\n    fn get_tpk_m(self, context: &mut PrivateContext, address: AztecAddress) -> Point {\n        get_master_key(context, address, TAGGING_INDEX, self)\n    }\n\n    fn get_npk_m_hash(self, context: &mut PrivateContext, address: AztecAddress) -> Field {\n        get_master_key(context, address, NULLIFIER_INDEX, self).hash()\n    }\n}\n// docs:end:key-getters\n\nfn get_master_key(\n    context: &mut PrivateContext,\n    address: AztecAddress,\n    key_index: Field,\n    header: Header\n) -> Point {\n    let key = fetch_key_from_registry(context, key_index, address, header);\n    if is_empty(key) {\n        // Keys were not registered in registry yet --> fetch key from PXE\n        let keys = fetch_and_constrain_keys(address);\n        // Return the corresponding to index\n        keys.get_key_by_index(key_index)\n    } else {\n        // Keys were registered --> return the key\n        key\n    }\n}\n\nfn fetch_key_from_registry(\n    context: &mut PrivateContext,\n    key_index: Field,\n    address: AztecAddress,\n    header: Header\n) -> Point {\n    let x_coordinate_map_slot = key_index * 2 + 1;\n    let y_coordinate_map_slot = x_coordinate_map_slot + 1;\n    let x_coordinate_derived_slot = derive_storage_slot_in_map(x_coordinate_map_slot, address);\n    let y_coordinate_derived_slot = derive_storage_slot_in_map(y_coordinate_map_slot, address);\n\n    let x_coordinate_registry: SharedMutablePrivateGetter<Field, DELAY> = SharedMutablePrivateGetter::new(\n        context,\n        AztecAddress::from_field(CANONICAL_KEY_REGISTRY_ADDRESS),\n        x_coordinate_derived_slot\n    );\n    let y_coordinate_registry: SharedMutablePrivateGetter<Field, DELAY> = SharedMutablePrivateGetter::new(\n        context,\n        AztecAddress::from_field(CANONICAL_KEY_REGISTRY_ADDRESS),\n        y_coordinate_derived_slot\n    );\n    let x_coordinate = x_coordinate_registry.get_value_in_private(header);\n    let y_coordinate = y_coordinate_registry.get_value_in_private(header);\n\n    Point::new(x_coordinate, y_coordinate, false)\n}\n\n// Passes only when keys were not rotated - is expected to be called only when keys were not registered yet\nfn fetch_and_constrain_keys(address: AztecAddress) -> PublicKeys {\n    let (public_keys, partial_address) = get_public_keys_and_partial_address(address);\n\n    let computed_address = AztecAddress::compute(public_keys.hash(), partial_address);\n\n    assert(computed_address.eq(address));\n\n    public_keys\n}\n\n// A helper function since requesting nsk_app is very common\n// TODO(#6543)\npub fn get_nsk_app(npk_m_hash: Field) -> Field {\n    get_key_validation_request(npk_m_hash, NULLIFIER_INDEX).sk_app\n}\n"},"66":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/keys/public_keys.nr","source":"use dep::protocol_types::{\n    address::PublicKeysHash, constants::GENERATOR_INDEX__PUBLIC_KEYS_HASH, hash::poseidon2_hash,\n    point::Point, traits::{Deserialize, Serialize, Empty, is_empty}\n};\nuse crate::keys::constants::{NUM_KEY_TYPES, NULLIFIER_INDEX, INCOMING_INDEX, OUTGOING_INDEX};\n\nglobal PUBLIC_KEYS_LENGTH = 12;\n\nstruct PublicKeys {\n    npk_m: Point,\n    ivpk_m: Point,\n    ovpk_m: Point,\n    tpk_m: Point,\n}\n\nimpl Empty for PublicKeys {\n    fn empty() -> Self {\n        PublicKeys {\n            npk_m : Point::empty(),\n            ivpk_m : Point::empty(),\n            ovpk_m : Point::empty(),\n            tpk_m : Point::empty()\n        }\n    }\n}\n\nimpl Eq for PublicKeys {\n    fn eq(self, other: PublicKeys) -> bool {\n        ( self.npk_m == other.npk_m ) &\n        ( self.ivpk_m == other.ivpk_m ) &\n        ( self.ovpk_m == other.ovpk_m ) &\n        ( self.tpk_m == other.tpk_m )\n    }\n}\n\nimpl PublicKeys {\n    pub fn hash(self) -> PublicKeysHash {\n        PublicKeysHash::from_field(\n            if is_empty(self) {\n            0\n        } else {\n            poseidon2_hash(\n                [\n                self.npk_m.x,\n                self.npk_m.y,\n                self.npk_m.is_infinite as Field,\n                self.ivpk_m.x,\n                self.ivpk_m.y,\n                self.ivpk_m.is_infinite as Field,\n                self.ovpk_m.x,\n                self.ovpk_m.y,\n                self.ovpk_m.is_infinite as Field,\n                self.tpk_m.x,\n                self.tpk_m.y,\n                self.tpk_m.is_infinite as Field,\n                GENERATOR_INDEX__PUBLIC_KEYS_HASH\n            ]\n            )\n        }\n        )\n    }\n\n    pub fn get_key_by_index(self, index: Field) -> Point {\n        assert(index as u8 < NUM_KEY_TYPES, \"Invalid key index\");\n        if index == NULLIFIER_INDEX {\n            self.npk_m\n        } else if index == INCOMING_INDEX {\n            self.ivpk_m\n        } else if index == OUTGOING_INDEX {\n            self.ovpk_m\n        } else {\n            self.tpk_m\n        }\n    }\n}\n\nimpl Serialize<PUBLIC_KEYS_LENGTH> for PublicKeys {\n    fn serialize(self) -> [Field; PUBLIC_KEYS_LENGTH] {\n        [\n            self.npk_m.x,\n            self.npk_m.y,\n            self.npk_m.is_infinite as Field,\n            self.ivpk_m.x,\n            self.ivpk_m.y,\n            self.ivpk_m.is_infinite as Field,\n            self.ovpk_m.x,\n            self.ovpk_m.y,\n            self.ovpk_m.is_infinite as Field,\n            self.tpk_m.x,\n            self.tpk_m.y,\n            self.tpk_m.is_infinite as Field\n        ]\n    }\n}\n\nimpl Deserialize<PUBLIC_KEYS_LENGTH> for PublicKeys {\n    fn deserialize(serialized: [Field; PUBLIC_KEYS_LENGTH]) -> PublicKeys {\n        PublicKeys {\n            npk_m: Point::new(serialized[0], serialized[1], serialized[2] as bool),\n            ivpk_m: Point::new(serialized[3], serialized[4], serialized[5] as bool),\n            ovpk_m: Point::new(serialized[6], serialized[7], serialized[8] as bool),\n            tpk_m: Point::new(serialized[9], serialized[10], serialized[11] as bool)\n        }\n    }\n}\n\n#[test]\nfn compute_public_keys_hash() {\n    let keys = PublicKeys {\n        npk_m: Point { x: 1, y: 2, is_infinite: false },\n        ivpk_m: Point { x: 3, y: 4, is_infinite: false },\n        ovpk_m: Point { x: 5, y: 6, is_infinite: false },\n        tpk_m: Point { x: 7, y: 8, is_infinite: false }\n    };\n\n    let actual = keys.hash();\n    let expected_public_keys_hash = 0x146f68c0e0ba4067d61a3304bbfdec0797d5df1357db6c01247c48bfb345c7d7;\n\n    assert(actual.to_field() == expected_public_keys_hash);\n}\n\n#[test]\nfn compute_empty_hash() {\n    let keys = PublicKeys::empty();\n\n    let actual = keys.hash();\n    let test_data_empty_hash = 0x0000000000000000000000000000000000000000000000000000000000000000;\n\n    assert(actual.to_field() == test_data_empty_hash);\n}\n\n#[test]\nfn test_public_keys_serialization() {\n    let keys = PublicKeys {\n        npk_m: Point { x: 1, y: 2, is_infinite: false },\n        ivpk_m: Point { x: 3, y: 4, is_infinite: false },\n        ovpk_m: Point { x: 5, y: 6, is_infinite: false },\n        tpk_m: Point { x: 7, y: 8, is_infinite: false }\n    };\n\n    let serialized = keys.serialize();\n    let deserialized = PublicKeys::deserialize(serialized);\n\n    assert_eq(keys.npk_m.x, deserialized.npk_m.x);\n    assert_eq(keys.npk_m.y, deserialized.npk_m.y);\n    assert_eq(keys.ivpk_m.x, deserialized.ivpk_m.x);\n    assert_eq(keys.ivpk_m.y, deserialized.ivpk_m.y);\n    assert_eq(keys.ovpk_m.x, deserialized.ovpk_m.x);\n    assert_eq(keys.ovpk_m.y, deserialized.ovpk_m.y);\n    assert_eq(keys.tpk_m.x, deserialized.tpk_m.x);\n    assert_eq(keys.tpk_m.y, deserialized.tpk_m.y);\n}\n"},"80":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/history/public_storage.nr","source":"use dep::protocol_types::{\n    constants::GENERATOR_INDEX__PUBLIC_LEAF_INDEX, hash::pedersen_hash, address::AztecAddress,\n    header::Header, utils::field::full_field_less_than\n};\nuse std::merkle::compute_merkle_root;\n\nuse crate::{context::PrivateContext, oracle::get_public_data_witness::get_public_data_witness};\n\ntrait PublicStorageHistoricalRead {\n    fn public_storage_historical_read(header: Header, storage_slot: Field, contract_address: AztecAddress) -> Field;\n}\n\nimpl PublicStorageHistoricalRead for Header { \n    fn public_storage_historical_read(self, storage_slot: Field, contract_address: AztecAddress) -> Field {\n        // 1) Compute the leaf slot by siloing the storage slot with the contract address\n        let public_value_leaf_slot = pedersen_hash(\n            [contract_address.to_field(), storage_slot],\n            GENERATOR_INDEX__PUBLIC_LEAF_INDEX\n        );\n\n        // 2) Get the membership witness of the slot\n        let witness = get_public_data_witness(\n            self.global_variables.block_number as u32,\n            public_value_leaf_slot\n        );\n\n        // 3) Extract the value from the witness leaf and check that the storage slot is correct\n        let preimage = witness.leaf_preimage;\n\n        // Here we have two cases. Code based on same checks in `validate_public_data_reads` in `base_rollup_inputs`\n        // 1. The value is the same as the one in the witness\n        // 2. The value was never initialized and is zero\n        let is_less_than_slot = full_field_less_than(preimage.slot, public_value_leaf_slot);\n        let is_next_greater_than = full_field_less_than(public_value_leaf_slot, preimage.next_slot);\n        let is_max = ((preimage.next_index == 0) & (preimage.next_slot == 0));\n        let is_in_range = is_less_than_slot & (is_next_greater_than | is_max);\n\n        let value = if is_in_range {\n            0\n        } else {\n            assert_eq(preimage.slot, public_value_leaf_slot, \"Public data slot doesn't match witness\");\n            preimage.value\n        };\n\n        // 4) Prove that the leaf exists in the public data tree. Note that `hash` returns not just the hash of the value\n        // but also the metadata (slot, next index and next slot).\n        assert(\n            self.state.partial.public_data_tree.root\n            == compute_merkle_root(preimage.hash(), witness.index, witness.path), \"Proving public value inclusion failed\"\n        );\n\n        value\n    }\n}\n"},"88":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/context/unconstrained_context.nr","source":"use dep::protocol_types::{address::AztecAddress, traits::Deserialize};\nuse crate::oracle::storage::{raw_storage_read, storage_read};\n\nstruct UnconstrainedContext {\n    block_number: u32,\n    contract_address: AztecAddress,\n    version: Field,\n    chain_id: Field,\n}\n\nimpl UnconstrainedContext {\n    unconstrained fn new() -> Self {\n        // We could call these oracles on the getters instead of at creation, which makes sense given that they might\n        // not even be accessed. However any performance gains are minimal, and we'd rather fail early if a user\n        // incorrectly attempts to create an UnconstrainedContext in an environment in which these oracles are not\n        // available.\n        let block_number = block_number_oracle();\n        let contract_address = contract_address_oracle();\n        let chain_id = chain_id_oracle();\n        let version = version_oracle();\n        Self { block_number, contract_address, version, chain_id }\n    }\n\n    fn block_number(self) -> u32 {\n        self.block_number\n    }\n\n    fn this_address(self) -> AztecAddress {\n        self.contract_address\n    }\n\n    fn version(self) -> Field {\n        self.version\n    }\n\n    fn chain_id(self) -> Field {\n        self.chain_id\n    }\n\n    unconstrained fn raw_storage_read<N>(self: Self, storage_slot: Field) -> [Field; N] {\n        storage_read(self.this_address(), storage_slot, self.block_number())\n    }\n\n    unconstrained fn storage_read<T, N>(self, storage_slot: Field) -> T where T: Deserialize<N> {\n        T::deserialize(self.raw_storage_read(storage_slot))\n    }\n}\n\n#[oracle(getContractAddress)]\nunconstrained fn contract_address_oracle() -> AztecAddress {}\n\n#[oracle(getBlockNumber)]\nunconstrained fn block_number_oracle() -> u32 {}\n\n#[oracle(getChainId)]\nunconstrained fn chain_id_oracle() -> Field {}\n\n#[oracle(getVersion)]\nunconstrained fn version_oracle() -> Field {}\n"},"93":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/context/call_interfaces.nr","source":"use dep::protocol_types::{\n    abis::{function_selector::FunctionSelector, private_circuit_public_inputs::PrivateCircuitPublicInputs},\n    address::AztecAddress, traits::Deserialize\n};\n\nuse crate::context::{\n    private_context::PrivateContext, public_context::PublicContext, gas::GasOpts,\n    public_context::FunctionReturns, inputs::{PrivateContextInputs, PublicContextInputs}\n};\n\nuse crate::oracle::arguments::pack_arguments;\nuse crate::hash::hash_args;\n\ntrait CallInterface<N, T, P, Env> {\n    fn get_original(self) -> fn[Env](T) -> P;\n\n    fn get_args(self) -> [Field] {\n        self.args\n    }\n\n    fn get_selector(self) -> FunctionSelector {\n        self.selector\n    }\n\n    fn get_name(self) -> str<N> {\n        self.name\n    }\n\n    fn get_contract_address(self) -> AztecAddress {\n        self.target_contract\n    }\n\n    fn get_is_static(self) -> bool {\n        self.is_static\n    }\n}\n\nimpl<N, T, P, Env> CallInterface<N, PrivateContextInputs, PrivateCircuitPublicInputs, Env> for PrivateCallInterface<N, T, Env> {\n    fn get_original(self) -> fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs {\n        self.original\n    }\n}\n\nstruct PrivateCallInterface<N, T, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args_hash: Field,\n    args: [Field],\n    original: fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs,\n    is_static: bool\n}\n\nimpl<N, T, Env> PrivateCallInterface<N, T, Env> {\n    pub fn call<M>(self, context: &mut PrivateContext) -> T where T: Deserialize<M> {\n        assert(self.args_hash == pack_arguments(self.args));\n        let returns = context.call_private_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            self.args_hash,\n            false,\n            false\n        );\n        let unpacked: T = returns.unpack_into();\n        unpacked\n    }\n\n    pub fn view<M>(self, context: &mut PrivateContext) -> T where T: Deserialize<M> {\n        assert(self.args_hash == pack_arguments(self.args));\n        let returns = context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, true, false);\n        returns.unpack_into()\n    }\n\n    pub fn delegate_call<M>(self, context: &mut PrivateContext) -> T where T: Deserialize<M> {\n        assert(self.args_hash == pack_arguments(self.args));\n        let returns = context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, false, true);\n        returns.unpack_into()\n    }\n}\n\nimpl<N, T, P, Env> CallInterface<N, PrivateContextInputs, PrivateCircuitPublicInputs, Env> for PrivateVoidCallInterface<N, Env> {\n    fn get_original(self) -> fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs {\n        self.original\n    }\n}\n\nstruct PrivateVoidCallInterface<N, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args_hash: Field,\n    args: [Field],\n    original: fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs,\n    is_static: bool\n}\n\nimpl<N, Env> PrivateVoidCallInterface<N, Env> {\n    pub fn call(self, context: &mut PrivateContext) {\n        assert(self.args_hash == pack_arguments(self.args));\n        context.call_private_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            self.args_hash,\n            false,\n            false\n        ).assert_empty();\n    }\n\n    pub fn view(self, context: &mut PrivateContext) {\n        assert(self.args_hash == pack_arguments(self.args));\n        context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, true, false).assert_empty();\n    }\n\n    pub fn delegate_call(self, context: &mut PrivateContext) {\n        assert(self.args_hash == pack_arguments(self.args));\n        context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, false, true).assert_empty();\n    }\n}\n\nimpl<N, T, P, Env> CallInterface<N, PrivateContextInputs, PrivateCircuitPublicInputs, Env> for PrivateStaticCallInterface<N, T, Env> {\n    fn get_original(self) -> fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs {\n        self.original\n    }\n}\n\nstruct PrivateStaticCallInterface<N, T, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args_hash: Field,\n    args: [Field],\n    original: fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs,\n    is_static: bool\n}\n\nimpl<N, T, Env> PrivateStaticCallInterface<N, T, Env> {\n    pub fn view<M>(self, context: &mut PrivateContext) -> T where T: Deserialize<M> {\n        assert(self.args_hash == pack_arguments(self.args));\n        let returns = context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, true, false);\n        returns.unpack_into()\n    }\n}\n\nimpl<N, T, P, Env> CallInterface<N, PrivateContextInputs, PrivateCircuitPublicInputs, Env> for PrivateStaticVoidCallInterface<N, Env> {\n    fn get_original(self) -> fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs {\n        self.original\n    }\n}\n\nstruct PrivateStaticVoidCallInterface<N, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args_hash: Field,\n    args: [Field],\n    original: fn[Env](PrivateContextInputs) -> PrivateCircuitPublicInputs,\n    is_static: bool\n}\n\nimpl<N, Env> PrivateStaticVoidCallInterface<N, Env> {\n    pub fn view(self, context: &mut PrivateContext) {\n        assert(self.args_hash == pack_arguments(self.args));\n        context.call_private_function_with_packed_args(self.target_contract, self.selector, self.args_hash, true, false).assert_empty();\n    }\n}\n\nimpl<N, T, P, Env> CallInterface<N, PublicContextInputs, T, Env> for PublicCallInterface<N, T, Env> {\n    fn get_original(self) -> fn[Env](PublicContextInputs) -> T {\n        self.original\n    }\n}\n\nstruct PublicCallInterface<N, T, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args: [Field],\n    gas_opts: GasOpts,\n    original: fn[Env](PublicContextInputs) -> T,\n    is_static: bool\n}\n\nimpl<N, T, Env> PublicCallInterface<N, T, Env> {\n    pub fn with_gas(self: &mut Self, gas_opts: GasOpts) -> &mut Self {\n        self.gas_opts = gas_opts;\n        self\n    }\n\n    pub fn call<M>(self, context: &mut PublicContext) -> T where T: Deserialize<M> {\n        let returns = context.call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.deserialize_into()\n    }\n\n    pub fn view<M>(self, context: &mut PublicContext) -> T where T: Deserialize<M> {\n        let returns = context.static_call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.deserialize_into()\n    }\n\n    pub fn delegate_call<M>(self, context: &mut PublicContext) -> T where T: Deserialize<M> {\n        let returns = context.delegate_call_public_function(self.target_contract, self.selector, self.args);\n        returns.deserialize_into()\n    }\n\n    pub fn enqueue(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        assert(args_hash == pack_arguments(self.args));\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ false,\n            /*delegate=*/ false\n        )\n    }\n\n    pub fn enqueue_view(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        assert(args_hash == pack_arguments(self.args));\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ true,\n            /*delegate=*/ false\n        )\n    }\n\n    pub fn delegate_enqueue(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        assert(args_hash == pack_arguments(self.args));\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ false,\n            /*delegate=*/ true\n        )\n    }\n}\n\nimpl<N, T, P, Env> CallInterface<N, PublicContextInputs, (), Env> for PublicVoidCallInterface<N, Env> {\n    fn get_original(self) -> fn[Env](PublicContextInputs) -> () {\n        self.original\n    }\n}\n\nstruct PublicVoidCallInterface<N, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args: [Field],\n    original: fn[Env](PublicContextInputs) -> (),\n    is_static: bool,\n    gas_opts: GasOpts\n}\n\nimpl<N, Env> PublicVoidCallInterface<N, Env> {\n    pub fn with_gas(self: &mut Self, gas_opts: GasOpts) -> &mut Self {\n        self.gas_opts = gas_opts;\n        self\n    }\n\n    pub fn call(self, context: &mut PublicContext) {\n        let returns = context.call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.assert_empty()\n    }\n\n    pub fn view(self, context: &mut PublicContext) {\n        let returns = context.static_call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.assert_empty()\n    }\n\n    pub fn delegate_call(self, context: &mut PublicContext) {\n        let returns = context.delegate_call_public_function(self.target_contract, self.selector, self.args);\n        returns.assert_empty()\n    }\n\n    pub fn enqueue(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        assert(args_hash == pack_arguments(self.args));\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ false,\n            /*delegate=*/ false\n        )\n    }\n\n    pub fn enqueue_view(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        assert(args_hash == pack_arguments(self.args));\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ true,\n            /*delegate=*/ false\n        )\n    }\n\n    pub fn delegate_enqueue(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        assert(args_hash == pack_arguments(self.args));\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ false,\n            /*delegate=*/ true\n        )\n    }\n}\n\nimpl<N, T, P, Env> CallInterface<N, PublicContextInputs, T, Env> for PublicStaticCallInterface<N, T, Env> {\n    fn get_original(self) -> fn[Env](PublicContextInputs) -> T {\n        self.original\n    }\n}\n\nstruct PublicStaticCallInterface<N, T, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args: [Field],\n    original: fn[Env](PublicContextInputs) -> T,\n    is_static: bool,\n    gas_opts: GasOpts\n}\n\nimpl<N, T, Env> PublicStaticCallInterface<N, T, Env> {\n    pub fn with_gas(self: &mut Self, gas_opts: GasOpts) -> &mut Self {\n        self.gas_opts = gas_opts;\n        self\n    }\n\n    pub fn view<M>(self, context: &mut PublicContext) -> T where T: Deserialize<M> {\n        let returns = context.static_call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        let unpacked: T = returns.deserialize_into();\n        unpacked\n    }\n\n    pub fn enqueue_view(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        assert(args_hash == pack_arguments(self.args));\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ true,\n            /*delegate=*/ false\n        )\n    }\n}\n\nimpl<N, T, P, Env> CallInterface<N, PublicContextInputs, (), Env> for PublicStaticVoidCallInterface<N, Env> {\n    fn get_original(self) -> fn[Env](PublicContextInputs) -> () {\n        self.original\n    }\n}\n\nstruct PublicStaticVoidCallInterface<N, Env> {\n    target_contract: AztecAddress,\n    selector: FunctionSelector,\n    name: str<N>,\n    args: [Field],\n    original: fn[Env](PublicContextInputs) -> (),\n    is_static: bool,\n    gas_opts: GasOpts\n}\n\nimpl<N, Env> PublicStaticVoidCallInterface<N, Env> {\n    pub fn with_gas(self: &mut Self, gas_opts: GasOpts) -> &mut Self {\n        self.gas_opts = gas_opts;\n        self\n    }\n\n    pub fn view(self, context: &mut PublicContext) {\n        let returns = context.static_call_public_function(self.target_contract, self.selector, self.args, self.gas_opts);\n        returns.assert_empty()\n    }\n\n    pub fn enqueue_view(self, context: &mut PrivateContext) {\n        let args_hash = hash_args(self.args);\n        assert(args_hash == pack_arguments(self.args));\n        context.call_public_function_with_packed_args(\n            self.target_contract,\n            self.selector,\n            args_hash,\n            /*static=*/ true,\n            /*delegate=*/ false\n        )\n    }\n}\n"},"94":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/context/private_context.nr","source":"use crate::{\n    context::{inputs::PrivateContextInputs, packed_returns::PackedReturns},\n    messaging::process_l1_to_l2_message, hash::{hash_args_array, ArgsHasher},\n    keys::constants::{NULLIFIER_INDEX, OUTGOING_INDEX, NUM_KEY_TYPES, sk_generators},\n    oracle::{\n    key_validation_request::get_key_validation_request, arguments, returns::pack_returns,\n    call_private_function::call_private_function_internal, header::get_header_at,\n    logs::{emit_encrypted_note_log, emit_encrypted_event_log},\n    enqueue_public_function_call::{\n    enqueue_public_function_call_internal, set_public_teardown_function_call_internal,\n    parse_public_call_stack_item_from_oracle\n}\n}\n};\nuse dep::protocol_types::{\n    abis::{\n    caller_context::CallerContext, function_selector::FunctionSelector,\n    max_block_number::MaxBlockNumber,\n    validation_requests::{KeyValidationRequest, KeyValidationRequestAndGenerator},\n    private_call_request::PrivateCallRequest, private_circuit_public_inputs::PrivateCircuitPublicInputs,\n    public_call_stack_item::PublicCallStackItem, read_request::ReadRequest, note_hash::NoteHash,\n    nullifier::Nullifier, log_hash::{LogHash, NoteLogHash, EncryptedLogHash}\n},\n    address::{AztecAddress, EthAddress},\n    constants::{\n    MAX_NOTE_HASHES_PER_CALL, MAX_L2_TO_L1_MSGS_PER_CALL, MAX_NULLIFIERS_PER_CALL,\n    MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL,\n    MAX_NOTE_HASH_READ_REQUESTS_PER_CALL, MAX_NULLIFIER_READ_REQUESTS_PER_CALL,\n    MAX_KEY_VALIDATION_REQUESTS_PER_CALL, MAX_ENCRYPTED_LOGS_PER_CALL, MAX_UNENCRYPTED_LOGS_PER_CALL,\n    MAX_NOTE_ENCRYPTED_LOGS_PER_CALL\n},\n    header::Header, messaging::l2_to_l1_message::L2ToL1Message, utils::reader::Reader, traits::Empty\n};\n\n// When finished, one can call .finish() to convert back to the abi\nstruct PrivateContext {\n    // docs:start:private-context\n    inputs: PrivateContextInputs,\n    side_effect_counter: u32,\n\n    min_revertible_side_effect_counter: u32,\n    is_fee_payer: bool,\n\n    args_hash: Field,\n    return_hash: Field,\n\n    max_block_number: MaxBlockNumber,\n\n    note_hash_read_requests: BoundedVec<ReadRequest, MAX_NOTE_HASH_READ_REQUESTS_PER_CALL>,\n    nullifier_read_requests: BoundedVec<ReadRequest, MAX_NULLIFIER_READ_REQUESTS_PER_CALL>,\n    key_validation_requests_and_generators: BoundedVec<KeyValidationRequestAndGenerator, MAX_KEY_VALIDATION_REQUESTS_PER_CALL>,\n\n    note_hashes: BoundedVec<NoteHash, MAX_NOTE_HASHES_PER_CALL>,\n    nullifiers: BoundedVec<Nullifier, MAX_NULLIFIERS_PER_CALL>,\n\n    private_call_requests : BoundedVec<PrivateCallRequest, MAX_PRIVATE_CALL_STACK_LENGTH_PER_CALL>,\n    public_call_stack_hashes : BoundedVec<Field, MAX_PUBLIC_CALL_STACK_LENGTH_PER_CALL>,\n    public_teardown_function_hash: Field,\n    l2_to_l1_msgs : BoundedVec<L2ToL1Message, MAX_L2_TO_L1_MSGS_PER_CALL>,\n    // docs:end:private-context\n\n    // Header of a block whose state is used during private execution (not the block the transaction is included in).\n    historical_header: Header,\n\n    note_encrypted_logs_hashes: BoundedVec<NoteLogHash, MAX_NOTE_ENCRYPTED_LOGS_PER_CALL>,\n    encrypted_logs_hashes: BoundedVec<EncryptedLogHash, MAX_ENCRYPTED_LOGS_PER_CALL>,\n    unencrypted_logs_hashes: BoundedVec<LogHash, MAX_UNENCRYPTED_LOGS_PER_CALL>,\n\n    // Contains the last key validation request for each key type. This is used to cache the last request and avoid\n    // fetching the same request multiple times.\n    // The index of the array corresponds to the key type (0 nullifier, 1 incoming, 2 outgoing, 3 tagging).\n    last_key_validation_requests: [Option<KeyValidationRequest>; NUM_KEY_TYPES],\n}\n\nimpl PrivateContext {\n    pub fn new(inputs: PrivateContextInputs, args_hash: Field) -> PrivateContext {\n        PrivateContext {\n            inputs,\n            side_effect_counter: inputs.start_side_effect_counter + 1,\n            min_revertible_side_effect_counter: 0,\n            is_fee_payer: false,\n            args_hash,\n            return_hash: 0,\n            max_block_number: MaxBlockNumber::empty(),\n            note_hash_read_requests: BoundedVec::new(),\n            nullifier_read_requests: BoundedVec::new(),\n            key_validation_requests_and_generators: BoundedVec::new(),\n            note_hashes: BoundedVec::new(),\n            nullifiers: BoundedVec::new(),\n            historical_header: inputs.historical_header,\n            private_call_requests: BoundedVec::new(),\n            public_call_stack_hashes: BoundedVec::new(),\n            public_teardown_function_hash: 0,\n            l2_to_l1_msgs: BoundedVec::new(),\n            note_encrypted_logs_hashes: BoundedVec::new(),\n            encrypted_logs_hashes: BoundedVec::new(),\n            unencrypted_logs_hashes: BoundedVec::new(),\n            last_key_validation_requests: [Option::none(); NUM_KEY_TYPES]\n        }\n    }\n\n    fn msg_sender(self) -> AztecAddress {\n        self.inputs.call_context.msg_sender\n    }\n\n    fn this_address(self) -> AztecAddress {\n        self.inputs.call_context.storage_contract_address\n    }\n\n    fn chain_id(self) -> Field {\n        self.inputs.tx_context.chain_id\n    }\n\n    fn version(self) -> Field {\n        self.inputs.tx_context.version\n    }\n\n    fn selector(self) -> FunctionSelector {\n        self.inputs.call_context.function_selector\n    }\n\n    fn get_args_hash(self) -> Field {\n        self.args_hash\n    }\n\n    fn push_note_hash(&mut self, note_hash: Field) {\n        self.note_hashes.push(NoteHash { value: note_hash, counter: self.next_counter() });\n    }\n\n    // TODO(#7112): This function is called with non-zero note hash only in 1 of 25 cases in aztec-packages repo\n    // - consider creating a separate function with 1 arg for the zero note hash case.\n    fn push_nullifier(&mut self, nullifier: Field, nullified_note_hash: Field) {\n        self.nullifiers.push(Nullifier { value: nullifier, note_hash: nullified_note_hash, counter: self.next_counter() });\n    }\n\n    // Returns the header of a block whose state is used during private execution (not the block the transaction is\n    // included in).\n    fn get_header(self) -> Header {\n        self.historical_header\n    }\n\n    // Returns the header of an arbitrary block whose block number is less than or equal to the block number\n    // of historical header.\n    pub fn get_header_at(self, block_number: u32) -> Header {\n        get_header_at(block_number, self)\n    }\n\n    pub fn set_return_hash(&mut self, returns_hasher: ArgsHasher) {\n        pack_returns(returns_hasher.fields);\n        self.return_hash = returns_hasher.hash();\n    }\n\n    pub fn finish(self) -> PrivateCircuitPublicInputs {\n        PrivateCircuitPublicInputs {\n            call_context: self.inputs.call_context,\n            args_hash: self.args_hash,\n            returns_hash: self.return_hash,\n            min_revertible_side_effect_counter: self.min_revertible_side_effect_counter,\n            is_fee_payer: self.is_fee_payer,\n            max_block_number: self.max_block_number,\n            note_hash_read_requests: self.note_hash_read_requests.storage,\n            nullifier_read_requests: self.nullifier_read_requests.storage,\n            key_validation_requests_and_generators: self.key_validation_requests_and_generators.storage,\n            note_hashes: self.note_hashes.storage,\n            nullifiers: self.nullifiers.storage,\n            private_call_requests: self.private_call_requests.storage,\n            public_call_stack_hashes: self.public_call_stack_hashes.storage,\n            public_teardown_function_hash: self.public_teardown_function_hash,\n            l2_to_l1_msgs: self.l2_to_l1_msgs.storage,\n            start_side_effect_counter: self.inputs.start_side_effect_counter,\n            end_side_effect_counter: self.side_effect_counter,\n            note_encrypted_logs_hashes: self.note_encrypted_logs_hashes.storage,\n            encrypted_logs_hashes: self.encrypted_logs_hashes.storage,\n            unencrypted_logs_hashes: self.unencrypted_logs_hashes.storage,\n            historical_header: self.historical_header,\n            tx_context: self.inputs.tx_context\n        }\n    }\n\n    pub fn set_as_fee_payer(&mut self) {\n        dep::protocol_types::debug_log::debug_log_format(\"Setting {0} as fee payer\", [self.this_address().to_field()]);\n        self.is_fee_payer = true;\n    }\n\n    pub fn end_setup(&mut self) {\n        // dep::protocol_types::debug_log::debug_log_format(\n        //     \"Ending setup at counter {0}\",\n        //     [self.side_effect_counter as Field]\n        // );\n        self.min_revertible_side_effect_counter = self.side_effect_counter;\n    }\n\n    // docs:start:max-block-number\n    pub fn set_tx_max_block_number(&mut self, max_block_number: u32) {\n        // docs:end:max-block-number\n        self.max_block_number = MaxBlockNumber::min_with_u32(self.max_block_number, max_block_number);\n    }\n\n    pub fn push_note_hash_read_request(&mut self, note_hash: Field) {\n        let side_effect = ReadRequest { value: note_hash, counter: self.next_counter() };\n        self.note_hash_read_requests.push(side_effect);\n    }\n\n    pub fn push_nullifier_read_request(&mut self, nullifier: Field) {\n        let request = ReadRequest { value: nullifier, counter: self.next_counter() };\n        self.nullifier_read_requests.push(request);\n    }\n\n    pub fn request_nsk_app(&mut self, npk_m_hash: Field) -> Field {\n        self.request_sk_app(npk_m_hash, NULLIFIER_INDEX)\n    }\n\n    pub fn request_ovsk_app(&mut self, ovpk_m_hash: Field) -> Field {\n        self.request_sk_app(ovpk_m_hash, OUTGOING_INDEX)\n    }\n\n    fn request_sk_app(&mut self, pk_m_hash: Field, key_index: Field) -> Field {\n        let cached_request = self.last_key_validation_requests[key_index].unwrap_or(KeyValidationRequest::empty());\n\n        if cached_request.pk_m.hash() == pk_m_hash {\n            // We get a match so the cached request is the latest one \n            cached_request.sk_app\n        } else {\n            // We didn't get a match meaning the cached result is stale. We fetch new values from oracle and instruct\n            // protocol circuits to validate them by storing the validation request in context.\n            let request = get_key_validation_request(pk_m_hash, key_index);\n            let request_and_generator = KeyValidationRequestAndGenerator { request, sk_app_generator: sk_generators[key_index] };\n            // We constrain that the pk_m_hash matches the one in the request (otherwise we could get an arbitrary\n            // valid key request and not the one corresponding to pk_m_hash).\n            assert(request.pk_m.hash() == pk_m_hash);\n            self.key_validation_requests_and_generators.push(request_and_generator);\n            self.last_key_validation_requests[key_index] = Option::some(request);\n            request.sk_app\n        }\n    }\n\n    // docs:start:context_message_portal\n    pub fn message_portal(&mut self, recipient: EthAddress, content: Field) {\n        // docs:end:context_message_portal\n        let message = L2ToL1Message { recipient, content, counter: self.next_counter() };\n        self.l2_to_l1_msgs.push(message);\n    }\n\n    // docs:start:context_consume_l1_to_l2_message\n    // docs:start:consume_l1_to_l2_message\n    pub fn consume_l1_to_l2_message(&mut self, content: Field, secret: Field, sender: EthAddress) {\n        // docs:end:context_consume_l1_to_l2_message\n        let nullifier = process_l1_to_l2_message(\n            self.historical_header.state.l1_to_l2_message_tree.root,\n            self.this_address(),\n            sender,\n            self.chain_id(),\n            self.version(),\n            content,\n            secret\n        );\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_nullifier(nullifier, 0)\n    }\n    // docs:end:consume_l1_to_l2_message\n\n    // NB: A randomness value of 0 signals that the kernels should not mask the contract address\n    // used in siloing later on e.g. 'handshaking' contract w/ known address.\n    pub fn emit_raw_event_log_with_masked_address<M>(&mut self, randomness: Field, log: [u8; M], log_hash: Field) {\n        let counter = self.next_counter();\n        let contract_address = self.this_address();\n        let len = log.len() as Field + 4;\n        let side_effect = EncryptedLogHash { value: log_hash, counter, length: len, randomness };\n        self.encrypted_logs_hashes.push(side_effect);\n\n        emit_encrypted_event_log(contract_address, randomness, log, counter);\n    }\n\n    pub fn emit_raw_note_log<M>(&mut self, note_hash_counter: u32, log: [u8; M], log_hash: Field) {\n        let counter = self.next_counter();\n        let len = log.len() as Field + 4;\n        let side_effect = NoteLogHash { value: log_hash, counter, length: len, note_hash_counter };\n        self.note_encrypted_logs_hashes.push(side_effect);\n\n        emit_encrypted_note_log(note_hash_counter, log, counter);\n    }\n\n    pub fn call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_private_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) -> PackedReturns {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.call_private_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_private_function_no_args<RETURNS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_private_function_no_args<RETURNS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_private_function_no_args<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) -> PackedReturns {\n        self.call_private_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_private_function_with_packed_args<RETURNS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) -> PackedReturns {\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        let start_side_effect_counter = self.side_effect_counter;\n        let item = call_private_function_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            start_side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        assert_eq(item.public_inputs.start_side_effect_counter, start_side_effect_counter);\n        let end_side_effect_counter = item.public_inputs.end_side_effect_counter;\n        self.side_effect_counter = end_side_effect_counter + 1;\n\n        // TODO (fees) figure out why this crashes the prover and enable it\n        // we need this in order to pay fees inside child call contexts\n        // assert(\n        //     (item.public_inputs.min_revertible_side_effect_counter == 0 as u32)\n        //     | (item.public_inputs.min_revertible_side_effect_counter\n        //         > self.min_revertible_side_effect_counter)\n        // );\n\n        // if item.public_inputs.min_revertible_side_effect_counter\n        //     > self.min_revertible_side_effect_counter {\n        //     self.min_revertible_side_effect_counter = item.public_inputs.min_revertible_side_effect_counter;\n        // }\n\n        assert(contract_address.eq(item.contract_address));\n        assert(function_selector.eq(item.function_data.selector));\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the call generated by the oracle matches our request.\n        assert(item.public_inputs.call_context.is_delegate_call == is_delegate_call);\n        assert(item.public_inputs.call_context.is_static_call == is_static_call);\n\n        if (is_delegate_call) {\n            // For delegate calls, we also constrain the execution context address for the nested call to be equal to our address.\n            assert(\n                item.public_inputs.call_context.storage_contract_address.eq(self.inputs.call_context.storage_contract_address)\n            );\n            assert(item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.msg_sender));\n        } else {\n            // For non-delegate calls, we also constrain the execution context address for the nested call to be equal to the address we called.\n            assert(item.public_inputs.call_context.storage_contract_address.eq(contract_address));\n            assert(\n                item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.storage_contract_address)\n            );\n        }\n\n        let mut caller_context = CallerContext::empty();\n        caller_context.is_static_call = self.inputs.call_context.is_static_call;\n        if is_delegate_call {\n            caller_context.msg_sender = self.inputs.call_context.msg_sender;\n            caller_context.storage_contract_address = self.inputs.call_context.storage_contract_address;\n        }\n        self.private_call_requests.push(\n            PrivateCallRequest {\n            target: item.contract_address,\n            call_context: item.public_inputs.call_context,\n            function_data: item.function_data,\n            args_hash: item.public_inputs.args_hash,\n            returns_hash: item.public_inputs.returns_hash,\n            caller_context,\n            start_side_effect_counter,\n            end_side_effect_counter\n        }\n        );\n\n        PackedReturns::new(item.public_inputs.returns_hash)\n    }\n\n    pub fn call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn static_call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, true, false)\n    }\n\n    pub fn delegate_call_public_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.call_public_function_with_packed_args(contract_address, function_selector, args_hash, false, true)\n    }\n\n    pub fn call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, false)\n    }\n\n    pub fn static_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, true, false)\n    }\n\n    pub fn delegate_call_public_function_no_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector\n    ) {\n        self.call_public_function_with_packed_args(contract_address, function_selector, 0, false, true)\n    }\n\n    pub fn call_public_function_with_packed_args(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) {\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        let fields = enqueue_public_function_call_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            self.side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        let item = parse_public_call_stack_item_from_oracle(fields);\n        self.validate_call_stack_item_from_oracle(\n            item,\n            contract_address,\n            function_selector,\n            args_hash,\n            is_static_call,\n            is_delegate_call\n        );\n\n        self.side_effect_counter = self.side_effect_counter + 1;\n        self.public_call_stack_hashes.push(item.get_compressed().hash());\n    }\n\n    pub fn set_public_teardown_function<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field; ARGS_COUNT]\n    ) {\n        let args_hash = hash_args_array(args);\n        assert(args_hash == arguments::pack_arguments_array(args));\n        self.set_public_teardown_function_with_packed_args(contract_address, function_selector, args_hash, false, false)\n    }\n\n    pub fn set_public_teardown_function_with_packed_args<ARGS_COUNT>(\n        &mut self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) {\n        let mut is_static_call = is_static_call | self.inputs.call_context.is_static_call;\n        let fields = set_public_teardown_function_call_internal(\n            contract_address,\n            function_selector,\n            args_hash,\n            self.side_effect_counter,\n            is_static_call,\n            is_delegate_call\n        );\n\n        let item = parse_public_call_stack_item_from_oracle(fields);\n        self.validate_call_stack_item_from_oracle(\n            item,\n            contract_address,\n            function_selector,\n            args_hash,\n            is_static_call,\n            is_delegate_call\n        );\n\n        self.side_effect_counter = self.side_effect_counter + 1;\n        self.public_teardown_function_hash = item.get_compressed().hash();\n    }\n\n    fn validate_call_stack_item_from_oracle(\n        self,\n        item: PublicCallStackItem,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args_hash: Field,\n        is_static_call: bool,\n        is_delegate_call: bool\n    ) {\n        assert(contract_address.eq(item.contract_address));\n        assert(function_selector.eq(item.function_data.selector));\n\n        assert_eq(item.public_inputs.start_side_effect_counter, self.side_effect_counter);\n\n        assert(args_hash == item.public_inputs.args_hash);\n\n        // Assert that the call context of the enqueued call generated by the oracle matches our request.\n        assert(item.public_inputs.call_context.is_delegate_call == is_delegate_call);\n        assert(item.public_inputs.call_context.is_static_call == is_static_call);\n\n        if (is_delegate_call) {\n            // For delegate calls, we also constrain the execution context address for the nested call to be equal to our address.\n            assert(\n                item.public_inputs.call_context.storage_contract_address.eq(self.inputs.call_context.storage_contract_address)\n            );\n            assert(item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.msg_sender));\n        } else {\n            // For non-delegate calls, we also constrain the execution context address for the nested call to be equal to the address we called.\n            assert(item.public_inputs.call_context.storage_contract_address.eq(contract_address));\n            assert(\n                item.public_inputs.call_context.msg_sender.eq(self.inputs.call_context.storage_contract_address)\n            );\n        }\n    }\n\n    fn next_counter(&mut self) -> u32 {\n        let counter = self.side_effect_counter;\n        self.side_effect_counter += 1;\n        counter\n    }\n}\n\nimpl Empty for PrivateContext {\n    fn empty() -> Self {\n        PrivateContext {\n            inputs: PrivateContextInputs::empty(),\n            side_effect_counter: 0 as u32,\n            min_revertible_side_effect_counter: 0 as u32,\n            is_fee_payer: false,\n            args_hash: 0,\n            return_hash: 0,\n            max_block_number: MaxBlockNumber::empty(),\n            note_hash_read_requests: BoundedVec::new(),\n            nullifier_read_requests: BoundedVec::new(),\n            key_validation_requests_and_generators: BoundedVec::new(),\n            note_hashes: BoundedVec::new(),\n            nullifiers: BoundedVec::new(),\n            private_call_requests: BoundedVec::new(),\n            public_call_stack_hashes: BoundedVec::new(),\n            public_teardown_function_hash: 0,\n            l2_to_l1_msgs: BoundedVec::new(),\n            historical_header: Header::empty(),\n            note_encrypted_logs_hashes: BoundedVec::new(),\n            encrypted_logs_hashes: BoundedVec::new(),\n            unencrypted_logs_hashes: BoundedVec::new(),\n            last_key_validation_requests: [Option::none(); NUM_KEY_TYPES]\n        }\n    }\n}\n"},"95":{"path":"/usr/src/noir-projects/aztec-nr/aztec/src/context/public_context.nr","source":"use crate::hash::{compute_secret_hash, compute_message_hash, compute_message_nullifier};\nuse dep::protocol_types::address::{AztecAddress, EthAddress};\nuse dep::protocol_types::traits::{Serialize, Deserialize, Empty};\nuse dep::protocol_types::abis::function_selector::FunctionSelector;\nuse crate::context::inputs::public_context_inputs::PublicContextInputs;\nuse crate::context::gas::GasOpts;\n\nstruct PublicContext {\n    inputs: PublicContextInputs,\n}\n\nimpl PublicContext {\n    pub fn new(inputs: PublicContextInputs) -> Self {\n        PublicContext { inputs }\n    }\n\n    pub fn emit_unencrypted_log<T, N>(&mut self, log: T) where T: Serialize<N> {\n        emit_unencrypted_log(Serialize::serialize(log).as_slice());\n    }\n\n    pub fn note_hash_exists(self, note_hash: Field, leaf_index: Field) -> bool {\n        note_hash_exists(note_hash, leaf_index) == 1\n    }\n\n    pub fn l1_to_l2_msg_exists(self, msg_hash: Field, msg_leaf_index: Field) -> bool {\n        l1_to_l2_msg_exists(msg_hash, msg_leaf_index) == 1\n    }\n\n    fn nullifier_exists(self, unsiloed_nullifier: Field, address: AztecAddress) -> bool {\n        nullifier_exists(unsiloed_nullifier, address.to_field()) == 1\n    }\n\n    fn consume_l1_to_l2_message(\n        &mut self,\n        content: Field,\n        secret: Field,\n        sender: EthAddress,\n        leaf_index: Field\n    ) {\n        let secret_hash = compute_secret_hash(secret);\n        let message_hash = compute_message_hash(\n            sender,\n            self.chain_id(),\n            /*recipient=*/ self.this_address(),\n            self.version(),\n            content,\n            secret_hash\n        );\n        let nullifier = compute_message_nullifier(message_hash, secret, leaf_index);\n\n        assert(\n            !self.nullifier_exists(nullifier, self.this_address()), \"L1-to-L2 message is already nullified\"\n        );\n        assert(\n            self.l1_to_l2_msg_exists(message_hash, leaf_index), \"Tried to consume nonexistent L1-to-L2 message\"\n        );\n\n        // Push nullifier (and the \"commitment\" corresponding to this can be \"empty\")\n        self.push_nullifier(nullifier, 0);\n    }\n\n    fn message_portal(&mut self, recipient: EthAddress, content: Field) {\n        send_l2_to_l1_msg(recipient, content);\n    }\n\n    fn call_public_function<RETURNS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field],\n        gas_opts: GasOpts\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        let results = call(\n            gas_for_call(gas_opts),\n            contract_address,\n            args,\n            function_selector.to_field()\n        );\n        let data_to_return: [Field; RETURNS_COUNT] = results.0;\n        let success: u8 = results.1;\n        assert(success == 1, \"Nested call failed!\");\n\n        FunctionReturns::new(data_to_return)\n    }\n\n    fn static_call_public_function<RETURNS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field],\n        gas_opts: GasOpts\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        let (data_to_return, success): ([Field; RETURNS_COUNT], u8) = call_static(\n            gas_for_call(gas_opts),\n            contract_address,\n            args,\n            function_selector.to_field()\n        );\n\n        assert(success == 1, \"Nested static call failed!\");\n        FunctionReturns::new(data_to_return)\n    }\n\n    fn delegate_call_public_function<RETURNS_COUNT>(\n        self: &mut Self,\n        contract_address: AztecAddress,\n        function_selector: FunctionSelector,\n        args: [Field]\n    ) -> FunctionReturns<RETURNS_COUNT> {\n        assert(false, \"'delegate_call_public_function' not implemented!\");\n        FunctionReturns::new([0; RETURNS_COUNT])\n    }\n\n    fn push_note_hash(&mut self, note_hash: Field) {\n        emit_note_hash(note_hash);\n    }\n    fn push_nullifier(&mut self, nullifier: Field, _nullified_commitment: Field) {\n        // Cannot nullify pending commitments in AVM, so `nullified_commitment` is not used\n        emit_nullifier(nullifier);\n    }\n\n    fn this_address(self) -> AztecAddress {\n        address()\n    }\n    pub fn storage_address(self) -> AztecAddress {\n        storage_address()\n    }\n    fn msg_sender(self) -> AztecAddress {\n        sender()\n    }\n    fn selector(self) -> FunctionSelector {\n        FunctionSelector::from_u32(function_selector())\n    }\n    fn get_args_hash(self) -> Field {\n        self.inputs.args_hash\n    }\n    fn transaction_fee(self) -> Field {\n        transaction_fee()\n    }\n\n    fn chain_id(self) -> Field {\n        chain_id()\n    }\n    fn version(self) -> Field {\n        version()\n    }\n    fn block_number(self) -> Field {\n        block_number()\n    }\n    fn timestamp(self) -> u64 {\n        timestamp()\n    }\n    pub fn fee_per_l2_gas(self) -> Field {\n        fee_per_l2_gas()\n    }\n    pub fn fee_per_da_gas(self) -> Field {\n        fee_per_da_gas()\n    }\n\n    fn l2_gas_left(self) -> Field {\n        l2_gas_left()\n    }\n    fn da_gas_left(self) -> Field {\n        da_gas_left()\n    }\n\n    fn raw_storage_read<N>(_self: Self, storage_slot: Field) -> [Field; N] {\n        storage_read(storage_slot)\n    }\n\n    fn storage_read<T, N>(self, storage_slot: Field) -> T where T: Deserialize<N> {\n        T::deserialize(self.raw_storage_read(storage_slot))\n    }\n\n    fn raw_storage_write<N>(_self: Self, storage_slot: Field, values: [Field; N]) {\n        storage_write(storage_slot, values);\n    }\n\n    fn storage_write<T, N>(self, storage_slot: Field, value: T) where T: Serialize<N> {\n        self.raw_storage_write(storage_slot, value.serialize());\n    }\n}\n\n// Helper functions\nfn gas_for_call(user_gas: GasOpts) -> [Field; 2] {\n    // It's ok to use the max possible gas here, because the gas will be\n    // capped by the gas left in the (STATIC)CALL instruction.\n    let MAX_POSSIBLE_FIELD: Field = 0 - 1;\n    [\n        user_gas.l2_gas.unwrap_or(MAX_POSSIBLE_FIELD),\n        user_gas.da_gas.unwrap_or(MAX_POSSIBLE_FIELD)\n    ]\n}\n\n// Unconstrained opcode wrappers (do not use directly).\n// TODO(https://github.com/AztecProtocol/aztec-packages/issues/6420): reconsider.\nunconstrained fn address() -> AztecAddress {\n    address_opcode()\n}\nunconstrained fn storage_address() -> AztecAddress {\n    storage_address_opcode()\n}\nunconstrained fn sender() -> AztecAddress {\n    sender_opcode()\n}\nunconstrained fn portal() -> EthAddress {\n    portal_opcode()\n}\nunconstrained fn function_selector() -> u32 {\n    function_selector_opcode()\n}\nunconstrained fn transaction_fee() -> Field {\n    transaction_fee_opcode()\n}\nunconstrained fn chain_id() -> Field {\n    chain_id_opcode()\n}\nunconstrained fn version() -> Field {\n    version_opcode()\n}\nunconstrained fn block_number() -> Field {\n    block_number_opcode()\n}\nunconstrained fn timestamp() -> u64 {\n    timestamp_opcode()\n}\nunconstrained fn fee_per_l2_gas() -> Field {\n    fee_per_l2_gas_opcode()\n}\nunconstrained fn fee_per_da_gas() -> Field {\n    fee_per_da_gas_opcode()\n}\nunconstrained fn l2_gas_left() -> Field {\n    l2_gas_left_opcode()\n}\nunconstrained fn da_gas_left() -> Field {\n    da_gas_left_opcode()\n}\nunconstrained fn note_hash_exists(note_hash: Field, leaf_index: Field) -> u8 {\n    note_hash_exists_opcode(note_hash, leaf_index)\n}\nunconstrained fn emit_note_hash(note_hash: Field) {\n    emit_note_hash_opcode(note_hash)\n}\nunconstrained fn nullifier_exists(nullifier: Field, address: Field) -> u8 {\n    nullifier_exists_opcode(nullifier, address)\n}\nunconstrained fn emit_nullifier(nullifier: Field) {\n    emit_nullifier_opcode(nullifier)\n}\nunconstrained fn emit_unencrypted_log(message: [Field]) {\n    emit_unencrypted_log_opcode(message)\n}\nunconstrained fn l1_to_l2_msg_exists(msg_hash: Field, msg_leaf_index: Field) -> u8 {\n    l1_to_l2_msg_exists_opcode(msg_hash, msg_leaf_index)\n}\nunconstrained fn send_l2_to_l1_msg(recipient: EthAddress, content: Field) {\n    send_l2_to_l1_msg_opcode(recipient, content)\n}\nunconstrained fn call<RET_SIZE>(\n    gas: [Field; 2],\n    address: AztecAddress,\n    args: [Field],\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {\n    call_opcode(gas, address, args, function_selector)\n}\nunconstrained fn call_static<RET_SIZE>(\n    gas: [Field; 2],\n    address: AztecAddress,\n    args: [Field],\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {\n    call_static_opcode(gas, address, args, function_selector)\n}\n\nunconstrained fn storage_read<N>(storage_slot: Field) -> [Field; N] {\n    storage_read_opcode(storage_slot, N)\n}\n\nunconstrained fn storage_write<N>(storage_slot: Field, values: [Field; N]) {\n    storage_write_opcode(storage_slot, values);\n}\n\nimpl Empty for PublicContext {\n    fn empty() -> Self {\n        PublicContext::new(PublicContextInputs::empty())\n    }\n}\n\n// AVM oracles (opcodes) follow, do not use directly.\n#[oracle(avmOpcodeAddress)]\nunconstrained fn address_opcode() -> AztecAddress {}\n\n#[oracle(avmOpcodeStorageAddress)]\nunconstrained fn storage_address_opcode() -> AztecAddress {}\n\n#[oracle(avmOpcodeSender)]\nunconstrained fn sender_opcode() -> AztecAddress {}\n\n#[oracle(avmOpcodePortal)]\nunconstrained fn portal_opcode() -> EthAddress {}\n\n#[oracle(avmOpcodeFunctionSelector)]\nunconstrained fn function_selector_opcode() -> u32 {}\n\n#[oracle(avmOpcodeTransactionFee)]\nunconstrained fn transaction_fee_opcode() -> Field {}\n\n#[oracle(avmOpcodeChainId)]\nunconstrained fn chain_id_opcode() -> Field {}\n\n#[oracle(avmOpcodeVersion)]\nunconstrained fn version_opcode() -> Field {}\n\n#[oracle(avmOpcodeBlockNumber)]\nunconstrained fn block_number_opcode() -> Field {}\n\n#[oracle(avmOpcodeTimestamp)]\nunconstrained fn timestamp_opcode() -> u64 {}\n\n#[oracle(avmOpcodeFeePerL2Gas)]\nunconstrained fn fee_per_l2_gas_opcode() -> Field {}\n\n#[oracle(avmOpcodeFeePerDaGas)]\nunconstrained fn fee_per_da_gas_opcode() -> Field {}\n\n#[oracle(avmOpcodeL2GasLeft)]\nunconstrained fn l2_gas_left_opcode() -> Field {}\n\n#[oracle(avmOpcodeDaGasLeft)]\nunconstrained fn da_gas_left_opcode() -> Field {}\n\n#[oracle(avmOpcodeNoteHashExists)]\nunconstrained fn note_hash_exists_opcode(note_hash: Field, leaf_index: Field) -> u8 {}\n\n#[oracle(avmOpcodeEmitNoteHash)]\nunconstrained fn emit_note_hash_opcode(note_hash: Field) {}\n\n#[oracle(avmOpcodeNullifierExists)]\nunconstrained fn nullifier_exists_opcode(nullifier: Field, address: Field) -> u8 {}\n\n#[oracle(avmOpcodeEmitNullifier)]\nunconstrained fn emit_nullifier_opcode(nullifier: Field) {}\n\n#[oracle(avmOpcodeEmitUnencryptedLog)]\nunconstrained fn emit_unencrypted_log_opcode(message: [Field]) {}\n\n#[oracle(avmOpcodeL1ToL2MsgExists)]\nunconstrained fn l1_to_l2_msg_exists_opcode(msg_hash: Field, msg_leaf_index: Field) -> u8 {}\n\n#[oracle(avmOpcodeSendL2ToL1Msg)]\nunconstrained fn send_l2_to_l1_msg_opcode(recipient: EthAddress, content: Field) {}\n\n#[oracle(avmOpcodeCall)]\nunconstrained fn call_opcode<RET_SIZE>(\n    gas: [Field; 2], // gas allocation: [l2_gas, da_gas]\n    address: AztecAddress,\n    args: [Field],\n    // TODO(5110): consider passing in calldata directly\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {}\n//    ^ return data      ^ success\n\n#[oracle(avmOpcodeStaticCall)]\nunconstrained fn call_static_opcode<RET_SIZE>(\n    gas: [Field; 2], // gas allocation: [l2_gas, da_gas]\n    address: AztecAddress,\n    args: [Field],\n    // TODO(5110): consider passing in calldata directly\n    function_selector: Field\n) -> ([Field; RET_SIZE], u8) {}\n//    ^ return data      ^ success\n\n#[oracle(avmOpcodeStorageRead)]\nunconstrained fn storage_read_opcode<N>(storage_slot: Field, length: Field) -> [Field; N] {}\n\n#[oracle(avmOpcodeStorageWrite)]\nunconstrained fn storage_write_opcode<N>(storage_slot: Field, values: [Field; N]) {}\n\nstruct FunctionReturns<N> {\n    values: [Field; N]\n}\n\nimpl<N> FunctionReturns<N> {\n    pub fn new(values: [Field; N]) -> FunctionReturns<N> {\n        FunctionReturns { values }\n    }\n\n    pub fn assert_empty(returns: FunctionReturns<0>) {\n        assert(returns.values.len() == 0);\n    }\n\n    pub fn raw(self) -> [Field; N] {\n        self.values\n    }\n\n    pub fn deserialize_into<T>(self) -> T where T: Deserialize<N> {\n        Deserialize::deserialize(self.raw())\n    }\n}\n"}}}